{"code":"_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[17],{VlWf:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/impresion-etiquetas\",function(){return t(\"yPMI\")}])},yPMI:function(e,a,t){\"use strict\";t.r(a);var i=t(\"DZdY\"),n=t(\"q1tI\"),l=t.n(n),s=t(\"g4pe\"),r=t.n(s),c=t(\"FCqg\"),o=t(\"AeFk\");var d=function(){var e=Object(i.a)(\"div\",{target:\"e15xwoo29\"})({name:\"z8v2at\",styles:\"width:100%!important;display:flex;@media (max-width: 995px){margin-bottom:7rem;}\"}),a=Object(i.a)(\"div\",{target:\"e15xwoo28\"})({name:\"1t29t6p\",styles:\"width:50%\"}),t=Object(i.a)(\"div\",{target:\"e15xwoo27\"})({name:\"1263e22\",styles:\"width:50%;text-align:center;margin-right:0px\"}),n=Object(i.a)(\"div\",{target:\"e15xwoo26\"})({name:\"19hccin\",styles:\"background-color:#0076c0;width:55%;min-height:40px;text-align:center;margin-top:3rem;margin-left:8rem;@media (max-width: 1100px){margin-left:7rem;align-items:center;display:grid;margin-top:1rem;}@media (max-width: 1008px){margin-left:6rem;}@media (max-width: 782px){margin-left:5.2rem;}@media (max-width: 542px){margin-left:4.2rem;}@media (max-width: 456px){margin-left:2.8rem;}\"}),s=Object(i.a)(\"h1\",{target:\"e15xwoo25\"})({name:\"qx9bvq\",styles:\"color:white;font-weight:bold;font-size:20px;padding-top:8px;@media (max-width: 1100px){font-size:18px;}@media (max-width: 1008px){font-size:16px;}@media (max-width: 781px){font-size:14px;}@media (max-width: 698px){font-size:12px;}@media (max-width: 620px){font-size:11px;}@media (max-width: 542px){font-size:9px;}@media (max-width: 456px){font-size:7px;}\"}),r=Object(i.a)(\"div\",{target:\"e15xwoo24\"})({name:\"1ereyfd\",styles:\"width:100%;margin-left:3rem;margin-top:2.5rem;border-left:8px solid #0076c0;height:125px;border-radius:5px 5px 5px 5px;@media (max-width: 2500px){margin-left:1.8rem;height:212px;}@media (max-width: 1816px){height:390px;}@media (max-width: 1009px){height:230px;}@media (max-width: 873px){height:171px;}@media (max-width: 782px){margin-left:1.8rem;}@media (max-width: 456px){margin-left:0.8rem;}\"}),c=Object(i.a)(\"h1\",{target:\"e15xwoo23\"})({name:\"1m21udg\",styles:\"width:90%!important;padding-left:1rem;font-weight:bold;font-size:60px;border-bottom:8px solid #0076c0;border-radius:0px 0px 5px;@media (max-width: 1825px){font-size:65px;width:73%;}@media (max-width: 1739px){font-size:60px;}@media (max-width: 1650px){font-size:60px;width:78%;}@media (max-width: 1563px){width:83%;}@media (max-width: 1470px){font-size:55px;width:83%;}@media (max-width: 1344px){font-size:50px;}@media (max-width: 1215px){width:86%;}@media (max-width: 1149px){font-size:42px;width:83%;}@media (max-width: 1008px){font-size:36px;}@media (max-width: 873px){font-size:32px;}@media (max-width: 781px){font-size:28px;margin-left:-0.1rem;}@media (max-width: 698px){font-size:24px;}@media (max-width: 620px){font-size:21px;}@media (max-width: 542px){font-size:21px;padding-left:0.5rem;}@media (max-width: 512px){font-size:25px;}\"}),d=Object(i.a)(\"div\",{target:\"e15xwoo22\"})({name:\"494tty\",styles:\"width:90%!important;margin-left:1rem;margin-top:1rem;background-color:#0076c0;border-radius:0px 50px 50px 0px;@media (max-width: 733px){width:82%;}@media (max-width: 542px){margin-left:0.5rem;}@media (max-width: 512px){width:79%;}\"}),m=Object(i.a)(\"p\",{target:\"e15xwoo21\"})({name:\"1fadznx\",styles:\"font-size:30px;padding-left:1rem;color:white;padding:5px;@media (max-width: 1825px){font-size:30px;}@media (max-width: 1470px){font-size:26px;}@media (max-width: 1344px){font-size:23px;}@media (max-width: 1100px){font-size:21px;}@media (max-width: 1008px){font-size:19px;}@media (max-width: 873px){font-size:16px;}@media (max-width: 733px){font-size:15px;}@media (max-width: 542px){font-size:13px;}@media (max-width: 512px){font-size:10px;padding-left:0.5rem;}@media (max-width: 456px){font-size:11px;}@media (max-width: 415px){font-size:9.5px;}@media (max-width: 350px){font-size:8.5px;}\"}),p=Object(i.a)(\"img\",{target:\"e15xwoo20\"})({name:\"9ux7i4\",styles:\"width:85%;height:90%;margin-top:1rem;border-radius:15px;@media (max-width: 510px){margin-top:3.5rem;height:60%;}@media (max-width: 400px){margin-top:5rem;}\"});return Object(o.a)(l.a.Fragment,null,Object(o.a)(e,null,Object(o.a)(a,null,Object(o.a)(n,null,Object(o.a)(s,null,\"\\xa1F\\xc1CIL, R\\xc1PIDO Y FLEXIBLE!\")),Object(o.a)(r,null,Object(o.a)(c,null,\"Impresi\\xf3n de etiquetas\"),Object(o.a)(d,null,Object(o.a)(\"div\",{className:\"sd\"},Object(o.a)(m,null,\"Somos especialistas en la impresion de etiquetas. Contamos con impresion termico directo y transferencia termica. Etiquetas de alta durabilidad y resistencia, adecuadas para cada giro comercial. Impresion de calidad en materiales sinteticos y papel.\"))))),Object(o.a)(t,null,Object(o.a)(p,{src:\"/img/img.-pesta\\xf1a-etiqeutas-3.webp\",alt:\"Renta de Handhelds\"}))))},m=t(\"YFqc\"),p=t.n(m),b=t(\"MhZx\");var u=function(){var e=Object(i.a)(\"div\",{target:\"ej1y3l919\"})({name:\"yb3z0d\",styles:\"width:50%;@media (max-width: 995px){width:100%;}\"}),a=Object(i.a)(\"div\",{target:\"ej1y3l918\"})({name:\"1j15a8y\",styles:\"display:flex;margin-top:7rem;@media (max-width: 1900px){margin-top:1rem;}@media (max-width: 1816px){margin-top:2rem;}@media (max-width: 1619px){margin-top:3rem;}\"}),t=Object(i.a)(\"div\",{target:\"ej1y3l917\"})({name:\"1iqrkxi\",styles:\"display:grid;margin:0px auto\"}),n=Object(i.a)(\"ul\",{target:\"ej1y3l916\"})({name:\"wn0hft\",styles:\"font-size:20px;text-align:left;margin-left:25px;display:grid;align-items:center;@media (max-width: 1750px){font-size:20px;}@media (max-width: 1400px){width:100%;height:100%;padding-top:2rem;}@media (max-width: 995px){width:90%;height:100%;}@media (max-width: 530px){font-size:15px;}\"}),s=Object(i.a)(\"li\",{target:\"ej1y3l915\"})({name:\"thhj3o\",styles:\"list-style:outside;align-items:center;font-size:20px;@media (max-width: 530px){font-size:15px;}\"}),r=(Object(i.a)(\"div\",{target:\"ej1y3l914\"})({name:\"1fu3lmy\",styles:\"width:52%;height:70%;margin-top:0px;padding-left:2rem;border-radius:15px;@media (max-width: 1786px){width:65%;}@media (max-width: 1400px){width:100%;height:100%;text-align:center;}@media (max-width: 530px){padding-left:0px;}\"}),Object(i.a)(\"div\",{target:\"ej1y3l913\"})({name:\"1n7ivv\",styles:\"max-width:500px;height:70%;margin-top:0px;padding-left:2rem;border-radius:15px;img{max-width:inherit;}\"})),c=Object(i.a)(\"div\",{target:\"ej1y3l912\"})({name:\"njtk4w\",styles:\"width:100%;padding:2rem;margin-top:3rem;display:contents;@media (max-width: 1400px){margin-top:-212px;}@media (max-width: 530px){padding:1rem;}\"}),d=Object(i.a)(\"div\",{target:\"ej1y3l911\"})({name:\"edm7mf\",styles:\"width:100%;padding-left:2rem;display:flex;@media (max-width: 830px){padding:1rem;flex-direction:column;}\"}),m=Object(i.a)(\"p\",{target:\"ej1y3l910\"})({name:\"j1gtqd\",styles:\"font-size:20px;padding:2rem;@media (max-width: 530px){font-size:15px;padding:15px;}\"}),u=(Object(i.a)(\"div\",{target:\"ej1y3l99\"})({name:\"14dnk7q\",styles:\"font-size:20px;display:grid;align-items:center;@media (max-width: 530px){font-size:15px;}\"}),Object(i.a)(\"div\",{target:\"ej1y3l98\"})({name:\"14ftwbw\",styles:\"margin-top:2rem;padding-left:2rem;@media (max-width: 530px){padding:1rem;margin-top:1rem;}\"})),x=Object(i.a)(\"h2\",{target:\"ej1y3l97\"})({name:\"1q82c7c\",styles:\"text-align:left;font-size:20px\"}),g=(Object(i.a)(\"h2\",{target:\"ej1y3l96\"})({name:\"17g321i\",styles:\"text-align:center;font-weight:bold;font-size:20px;margin-top:2.5rem\"}),Object(i.a)(\"div\",{target:\"ej1y3l95\"})({name:\"bmxbe\",styles:\"width:78%;height:4.5rem;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"})),j=Object(i.a)(\"div\",{target:\"ej1y3l94\"})({name:\"1xutzvp\",styles:\"width:78%;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"}),h=Object(i.a)(\"p\",{target:\"ej1y3l93\"})({name:\"1i04rfa\",styles:\"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\"}),O=(Object(i.a)(\"div\",{target:\"ej1y3l92\"})({name:\"q68gb5\",styles:\"width:80%;margin:0px auto;@media (max-width: 1400px){width:100%;}\"}),Object(i.a)(\"div\",{target:\"ej1y3l91\"})({name:\"1akbdyk\",styles:\"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\"})),w=Object(i.a)(\"img\",{target:\"ej1y3l90\"})({name:\"1641xlb\",styles:\"border-radius:15px;object-fit:contain;margin-top:5rem;@media (max-width: 1200px){width:50%!important;}@media (max-width: 1070px){width:45%!important;}@media (max-width: 995px){margin:0px auto;width:60%!important;}\"}),f=Object(b.a)();return Object(o.a)(l.a.Fragment,null,Object(o.a)(e,null,f>1400?Object(o.a)(a,null,Object(o.a)(n,null,Object(o.a)(\"div\",null,Object(o.a)(\"h3\",null,Object(o.a)(\"b\",null,\"Impresion de etiquetas con diferentes tipos de adhesivos:\"))),Object(o.a)(s,null,\"Permanente.\"),Object(o.a)(s,null,\"Removible.\"),Object(o.a)(s,null,\"De alta adherencia.\"),Object(o.a)(s,null,\"Acr\\xedlico.\",\" \")),Object(o.a)(r,null,Object(o.a)(\"img\",{src:\"/img/img.-pesta\\xf1a-etiquetas-2.webp\",alt:\"Etiquetas\",width:\"500px\"}))):Object(o.a)(t,null,Object(o.a)(n,null,Object(o.a)(\"div\",{className:\"garan\"},Object(o.a)(\"h3\",null,Object(o.a)(\"b\",null,\"Impresi\\xf3n de etiquetas con diferentes tipos de adhesivos\"))),Object(o.a)(s,null,\"Permanente.\"),Object(o.a)(s,null,\"Removible.\"),Object(o.a)(s,null,\"De alta adherencia.\"),Object(o.a)(s,null,\"Acr\\xedlico\")),Object(o.a)(r,null,Object(o.a)(\"img\",{className:\"imgresce\",src:\"/img/img.-pesta\\xf1a-etiquetas-2.webp\",alt:\"Etiquetas\"}))),Object(o.a)(c,null,Object(o.a)(m,null,Object(o.a)(x,null,Object(o.a)(\"b\",null,\"Impresion de etiquetas en los mejores materiales como lo son:\")),Object(o.a)(s,null,\"Poliolefina: Adecuada para etiquetas colocadas en superficies asperas e irregulares\"),Object(o.a)(s,null,\"Polipropileno: Adecuado para etiquetar zonas curvas e irregulares, capaz de soportar bajas temperaturas.\"),Object(o.a)(s,null,\"Poliester: Alta resitencia y durabilidad \"),Object(o.a)(s,null,\"Poliamida: Adecuada para etiquetas capaces de resistir altas temperaturas.\"),Object(o.a)(s,null,\"Poliamida: Adecuada para etiquetas capaces de reisistir altas temperaturas\"),Object(o.a)(s,null,\"Papel: Adecuado para impresion de etiquetas de uso general y especialidades(resistencia a altas temperaturas, ultra removible, alta adherencia y m\\xe1s.)\"))),Object(o.a)(d,null,Object(o.a)(u,null,Object(o.a)(x,null,Object(o.a)(\"b\",null,\"Impresion de etiquetas para diferentes procesos\")),Object(o.a)(\"ol\",{className:\"esol\"},Object(o.a)(s,null,\"Etiquetas textiles.\"),Object(o.a)(s,null,\"Etiquetas para el sector automotriz.\"),Object(o.a)(s,null,\"Etiquetas para el control de productos. \"),Object(o.a)(s,null,\"Etiquetas para el sector de manufactura.\"),Object(o.a)(s,null,\"Etiquetas para el sector salud.\"))),Object(o.a)(w,{src:\"/img/img.-pesta\\xf1a-etiquetas.webp\",alt:\"Etiquetas Muestra\",width:\"30%\"})),Object(o.a)(\"div\",{className:\"DivR\"},Object(o.a)(O,null,Object(o.a)(p.a,{href:\"/#renta\"},Object(o.a)(g,{className:\"b\"},Object(o.a)(h,null,Object(o.a)(\"span\",{className:\"n\"},\"\\xa1Conozca nuestro servicio de Renta!\")))),Object(o.a)(p.a,{href:\"/#reparacion\"},Object(o.a)(g,{className:\"b\"},Object(o.a)(h,null,Object(o.a)(\"span\",{className:\"n\"},\"\\xa1Conozca nuestro servicio de Reparaci\\xf3n!\")))),Object(o.a)(p.a,{href:\"/#venta\"},Object(o.a)(g,{className:\"b\"},Object(o.a)(h,null,Object(o.a)(\"span\",{className:\"n\"},\"\\xa1Conozca nuestro servicio de Venta!\")))),Object(o.a)(p.a,{href:\"/venta-de-accesorios-y-consumibles\"},Object(o.a)(g,{className:\"b\"},Object(o.a)(h,null,Object(o.a)(\"span\",{className:\"n\"},\"\\xa1Adquiera los accesorios y consumibles que necesita!\")))),Object(o.a)(p.a,{href:\"/DSD-venta-en-ruta\"},Object(o.a)(g,{className:\"b\"},Object(o.a)(h,null,Object(o.a)(\"span\",{className:\"n\"},'\\xa1Conozca nuestra soluci\\xf3n \"DSD\" para venta en ruta!')))),Object(o.a)(p.a,{href:\"/venta-fundas-handheld-impresora-portatil\"},Object(o.a)(j,{className:\"b\"},Object(o.a)(h,null,\"Contamos con fundas dise\\xf1adas a la medida para cumplir con sus necesidades.\",Object(o.a)(\"br\",null),Object(o.a)(\"span\",{className:\"n\"},\"\\xa1Adquiera la protecci\\xf3n que sus equipos necesitan!\")))),Object(o.a)(p.a,{href:\"/impresion-credenciales-tarjetas-gafetes-pvc\"},Object(o.a)(j,{className:\"b\"},Object(o.a)(h,null,Object(o.a)(\"span\",{className:\"n\"},\"\\xa1Conozca nuestro servicio de impresion de credenciales!\"))))))))},x=t(\"zM5D\"),g=t(\"cWnB\"),j=t(\"hL45\"),h=t(\"gnZP\");var O=function(){var e=Object(i.a)(\"div\",{target:\"efvklb14\"})({name:\"qyt0rj\",styles:\"width:50%;margin-top:2rem;@media (max-width: 995px){width:100%;margin-top:3rem;}\"}),a=Object(i.a)(\"div\",{target:\"efvklb13\"})({name:\"15ev6lr\",styles:\"display:flex;justify-content:center;padding-top:0rem\"}),t=Object(i.a)(\"img\",{target:\"efvklb12\"})({name:\"fuo58s\",styles:\"width:70%;height:90%;@media (max-width: 375px){width:70%;height:90%;}\"}),s=Object(i.a)(\"div\",{target:\"efvklb11\"})({name:\"1h4mnaf\",styles:\"text-align:center;width:100%;height:3rem\"}),r=Object(i.a)(\"h1\",{target:\"efvklb10\"})({name:\"15stcjl\",styles:\"font-weight:bold;@media (max-width: 833px){font-size:35px!important;}@media (max-width: 550px){font-size:28px!important;}\"}),c=Object(i.a)(\"div\",{target:\"efvklb9\"})({name:\"9tzj48\",styles:\"width:86%;margin:2rem auto\"}),d=Object(i.a)(\"div\",{target:\"efvklb8\"})({name:\"1twpw2l\",styles:\"width:100%;background-color:#0076c0;color:white;padding:10px;border-radius:0.5rem\"}),m=Object(i.a)(\"div\",{target:\"efvklb7\"})({name:\"12dms0z\",styles:\"margin-top:1rem;width:100%\"}),p=Object(i.a)(\"div\",{target:\"efvklb6\"})({name:\"c903m5\",styles:\"margin:auto;width:100%;text-align:center\"}),u=Object(i.a)(\"img\",{target:\"efvklb5\"})({name:\"r9y48n\",styles:\"margin:auto!important;width:23%;@media (max-width: 500px){width:33%;}\"}),O=Object(i.a)(\"img\",{target:\"efvklb4\"})({name:\"1y7yo48\",styles:\"cursor:pointer;width:37%;@media (max-width: 605px){width:38%;}@media (max-width: 500px){width:56%;}\"}),w=Object(i.a)(\"img\",{target:\"efvklb3\"})({name:\"13jsrr9\",styles:\"margin:auto!important;@media (max-width: 1500px){width:65%;}@media (max-width: 1100px){width:80%;}@media (max-width: 800px){height:8rem!important;}@media (max-width: 500px){height:5.5rem!important;}\"}),f=Object(i.a)(\"p\",{target:\"efvklb2\"})({name:\"ddq6ti\",styles:\"font-size:19px;font-weight:bold\"}),y=Object(i.a)(\"div\",{target:\"efvklb1\"})({name:\"1pzfeih\",styles:\"display:flex;margin-top:4.5rem;justify-content:space-around;text-align:center\"}),v=Object(i.a)(\"div\",{target:\"efvklb0\"})({name:\"1d3w5wq\",styles:\"width:100%\"}),_=Object(n.useState)(!1),z=_[0],k=_[1],q=function(){k(!1)},I=(Object(b.a)(),Object(n.useState)(!1)),N=I[0],C=I[1],E=Object(n.useState)(!1),H=E[0],A=E[1],P=function(){A(!1)};return Object(o.a)(l.a.Fragment,null,Object(o.a)(\"span\",{id:\"contacto\"}),Object(o.a)(e,null,Object(o.a)(a,null,Object(o.a)(\"div\",{className:\"DivImg\"},Object(o.a)(t,{src:\"img/sellogarantia.webp\",alt:\"Sello de Garantia Hand Held Solutions\"}))),Object(o.a)(s,null,Object(o.a)(r,null,\"\\xa1Cotice ahora!\")),Object(o.a)(c,null,Object(o.a)(d,null,Object(o.a)(h.a,null),Object(o.a)(m,null,Object(o.a)(\"p\",{className:\"politicas\"},\"Al dar click en el bot\\xf3n de enviar se esta aceptando nuestra\",\" \",Object(o.a)(\"a\",{onClick:function(){k(!0)}},\"pol\\xedtica de privacidad.\")))),Object(o.a)(x.a,{show:z,onHide:q,keyboard:!1,size:\"lg\"},Object(o.a)(x.a.Header,{closeButton:!0},Object(o.a)(x.a.Title,null,\"Anuncios\")),Object(o.a)(x.a.Body,null,Object(o.a)(j.a,null)),Object(o.a)(x.a.Footer,null,Object(o.a)(g.a,{variant:\"light\",onClick:q},\"Cerrar\")))),Object(o.a)(y,null,Object(o.a)(v,null,Object(o.a)(O,{className:\"creicon\",src:\"https://res.cloudinary.com/dihawqrnt/image/upload/v1626461689/Nuevos%20Iconos/Copia_de_ICONOS_WEB_2_lwukep.png\",alt:\"Envios Gratis\",onClick:function(){C(!0)}}),Object(o.a)(f,null,\"Envio GRATIS a toda la Republica Mexicana.\")),Object(o.a)(v,null,Object(o.a)(O,{className:\"creicon\",src:\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Mejores_precios_acordes_a_su_econom%C3%ADa_x5x6zl.png\",alt:\"Icono Mejores Precios\",onClick:function(){A(!0)}}),Object(o.a)(f,null,\"Mejores precios acordes a su econom\\xeda.\"))),Object(o.a)(\"div\",null,Object(o.a)(p,null,Object(o.a)(u,{src:\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625241129/Iconos/Pago_con_tarjeta_250x250_kwdel3.png\",alt:\"Icono_Pago\"}),Object(o.a)(f,null,\"\\xa1Aceptamos pago con tarjeta!\"),Object(o.a)(w,{src:\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625761069/Iconos/metodos_de_pago_500x120_1_zkuoyc.png\",alt:\"Imagen_LogoPago\"})))),Object(o.a)(x.a,{show:N,onHide:function(){C(!1)},keyboard:!1,size:\"lg\",className:\"modal-altura\"},Object(o.a)(x.a.Header,{closeButton:!0},Object(o.a)(x.a.Title,null,\"Env\\xedo gratis a toda la Rep\\xfablica Mexicana.\")),Object(o.a)(x.a.Body,null,\"Contamos con env\\xedo gratis a toda la Rep\\xfablica Mexicana, nosotros le mandamos sin cargo adicional, las etiquetas que necesite. Impresi\\xf3n de etiquetas en poliolefina, polipropileno, poli\\xe9ster, poliamida y papel. Impresi\\xf3n de etiquetas capaces de resistir bajas y altas temperaturas.\"),Object(o.a)(x.a.Footer,null,Object(o.a)(g.a,{variant:\"light\",onClick:q},\"Cerrar\"))),Object(o.a)(x.a,{show:H,onHide:P,keyboard:!1,size:\"lg\",className:\"modal-altura\"},Object(o.a)(x.a.Header,{closeButton:!0},Object(o.a)(x.a.Title,null,\"Mejores precios acordes a su econom\\xeda.\")),Object(o.a)(x.a.Body,null,\"En Hand Held Solutions, nos comprometemos a brindarle los mejores precios, para nosotros es importante que cuente con etiquetas que cubran sus necesidades a precios accesibles.\"),Object(o.a)(x.a.Footer,null,Object(o.a)(g.a,{variant:\"light\",onClick:P},\"Cerrar\"))))},w=t(\"ch8d\"),f=t(\"eH4S\"),y=t(\"F+1s\"),v=t(\"Cl/n\"),_=t(\"cFkv\"),z=t(\"b+jL\");a.default=function(){var e=Object(i.a)(\"div\",{target:\"ecgcexk4\"})({name:\"3o1miv\",styles:\"display:flex;@media (max-width: 995px){display:block;}\"}),a=Object(i.a)(\"div\",{target:\"ecgcexk3\"})({name:\"o0r707\",styles:\"display:flex;@media (max-width: 700px){display:block;}\"}),t=Object(i.a)(\"div\",{target:\"ecgcexk2\"})({name:\"udt92q\",styles:\"@media (max-width: 995px){display:block;}\"}),s=Object(i.a)(\"img\",{target:\"ecgcexk1\"})({name:\"16na1d5\",styles:\"max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important\"}),m=Object(i.a)(\"a\",{target:\"ecgcexk0\"})({name:\"e0dnmk\",styles:\"cursor:pointer\"}),p=Object(n.useState)(!1),b=p[0],j=p[1],h=Object(n.useState)(!0),k=(h[0],h[1],function(){j(!1)});return Object(n.useEffect)((function(){setTimeout((function(){j(!0)}),6e3)}),[]),Object(o.a)(l.a.Fragment,null,Object(o.a)(r.a,null,Object(o.a)(\"html\",{lang:\"es\"}),Object(o.a)(\"title\",null,\"Impresi\\xf3n de Etiquetas | Etiquetas Adhesivas | Fabricaci\\xf3n de Etiquetas\"),Object(o.a)(\"meta\",{name:\"description\",content:\"Somos especialistas en la impresi\\xf3n de etiquetas. Impresi\\xf3n t\\xe9rmico directo y transferencia t\\xe9rmica. Impresi\\xf3n de etiquetas en poliolefina, polipropileno, poli\\xe9ster, poliamida y papel. Impresi\\xf3n de etiquetas para el sector automotriz, control de productos, manufactura, salud, textil y m\\xe1s. Impresi\\xf3n de etiquetas con adhesivos permanentes, removibles y de alta adherencia. Impresi\\xf3n de etiquetas capaces de resistir bajas y altas temperaturas.\\xa1LLame ahora, asistencia inmediata! \"}),Object(o.a)(\"link\",{rel:\"shortcut icon\",href:\"/logo-copia.png\"}),Object(o.a)(\"meta\",{name:\"keywords\",content:\"Impresi\\xf3n, etiquetas, adhesivas, fabricacion, policarbonato, PET, holograma de seguridad, credencializaci\\xf3n, tarjetas pl\\xe1sticas, elaboraci\\xf3n, dise\\xf1o, impresiones, Certificado, covid, c\\xf3digo QR, empresas, instituciones educativas, asociaciones, eventos, control de acceso, materiales resistentes, materiales duraderos, a domicilio, cotizaci\\xf3n, identificaci\\xf3n.\"}),Object(o.a)(\"meta\",{name:\"robots\",content:\"index,follow,all\"}),Object(o.a)(\"meta\",{property:\"og:title\",content:\"Hand held para Inventarios | Renta de PDA | Arrendamiento de HandHelds | Terminales Port\\xe1tiles\"}),Object(o.a)(\"meta\",{property:\"og:image\",content:\"https://i.ibb.co/42K3Zdn/logo-copia.png\"}),Object(o.a)(\"meta\",{property:\"og:type\",content:\"website\"}),Object(o.a)(\"meta\",{property:\"og:description\",content:\"Somos especialistas en la impresi\\xf3n de etiquetas. Impresi\\xf3n t\\xe9rmico directo y transferencia t\\xe9rmica. Impresi\\xf3n de etiquetas en poliolefina, polipropileno, poli\\xe9ster, poliamida y papel. Impresi\\xf3n de etiquetas para el sector automotriz, control de productos, manufactura, salud, textil y m\\xe1s. Impresi\\xf3n de etiquetas con adhesivos permanentes, removibles y de alta adherencia. Impresi\\xf3n de etiquetas capaces de resistir bajas y altas temperaturas.\\xa1LLame ahora, asistencia inmediata!\"}),Object(o.a)(\"meta\",{name:\"twitter:card\",content:\"summary_large_image\"}),Object(o.a)(\"link\",{rel:\"icon\",type:\"image/png\",sizes:\"160x99\",href:\"https://i.ibb.co/42K3Zdn/logo-copia.png\"}),Object(o.a)(\"link\",{rel:\"preconnect\",href:\"https://fonts.gstatic.com\"}),Object(o.a)(\"link\",{href:\"https://fonts.googleapis.com/css2?family=Raleway&display=swap\",rel:\"stylesheet\"}),Object(o.a)(\"script\",{async:!0,src:\"https://www.googletagmanager.com/gtag/js?id=AW-728249895\"}),Object(o.a)(\"script\",{dangerouslySetInnerHTML:{__html:\"window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'AW-728249895');\"}})),Object(o.a)(\"noscript\",{dangerouslySetInnerHTML:{__html:'<iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-KXHWDC2\"\\n          height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>'}}),Object(o.a)(c.a,null),Object(o.a)(d,null),Object(o.a)(e,null,Object(o.a)(u,null),Object(o.a)(O,null)),Object(o.a)(t,null,Object(o.a)(w.a,null)),Object(o.a)(a,null,Object(o.a)(f.a,null),Object(o.a)(y.a,null)),Object(o.a)(v.a,null),Object(o.a)(_.a,null),Object(o.a)(x.a,{show:b,onHide:k,keyboard:!1,size:\"lg\",className:\"modal-altura ppp\"},Object(o.a)(x.a.Header,{closeButton:!0},Object(o.a)(x.a.Title,null,\"Noticias\")),Object(o.a)(x.a.Body,null,Object(o.a)(z.a,null,Object(o.a)(z.a.Item,null,Object(o.a)(\"img\",{className:\"d-block w-100\",src:\"/img/Promoci\\xf3n_mc9090_funcional_po83sk.webp\",alt:\"Hand Held MC9090\"})),Object(o.a)(z.a.Item,null,Object(o.a)(\"img\",{className:\"d-block w-100\",src:\"/img/evolis_adikio.webp\",alt:\"evolis adikio\"})),Object(o.a)(z.a.Item,null,Object(o.a)(\"img\",{className:\"d-block w-100\",src:\"/img/evolis_impresoras.webp\",alt:\"evolis impresoras\"})),Object(o.a)(z.a.Item,null,Object(o.a)(\"img\",{className:\"d-block w-100\",src:\"/img/impresora_IMZ320.webp\",alt:\"Renta de Impresora IMZ320\"})),Object(o.a)(z.a.Item,null,Object(o.a)(\"img\",{className:\"d-block w-100\",src:\"/img/Promoci\\xf3n_MC9190_sricb6.webp\",alt:\"Hand Held MC9190\"})),Object(o.a)(z.a.Item,null,Object(o.a)(\"img\",{className:\"d-block w-100\",src:\"/img/IMAGEN_ZEBRA_BANNER_800X500_lyqnpu.webp\",alt:\"Zebra Hand Held Impresoras Lectores\"})),Object(o.a)(z.a.Item,null,Object(o.a)(s,{className:\"d-block \",src:\"/img/Copia_de_promoci\\xf3n_redimensi\\xf3n_web_tgvrfp.webp\",alt:\"Hand Held Intermec Honeywell CN51\"})),Object(o.a)(z.a.Item,null,Object(o.a)(m,{onClick:function(e){e.preventDefault(),j(!1),document.location.href=\"/#reparacion\"}},Object(o.a)(s,{className:\"d-block \",src:\"/img/Copia_de_p\\xf3lizas_reparaci\\xf3n_sg0xim.webp\",alt:\"Polizas de reparacion handheld impresoras de etiquetas y lectores\"}))),Object(o.a)(z.a.Item,null,Object(o.a)(\"a\",{className:\"clicks\",href:\"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098014/banner/publicaci%C3%B3n_nuevo_lanzamiento_ec50_y_ec55_fmwnhz.png\",target:\"_blank\",rel:\"noopener noreferrer\"},Object(o.a)(s,{className:\"d-block \",src:\"/img/Copia_de_ec50_y_ec55_en_web_kyx6mp.webp\",alt:\"Zebra EC50 EC55\"}))),Object(o.a)(z.a.Item,null,Object(o.a)(s,{className:\"d-block \",src:\"/img/IMAGEN_ZEBRA_BANNER_800X500_vr6p1d.webp\",alt:\"Zebra Hand Held Impresoras Lectores\"})),Object(o.a)(z.a.Item,null,Object(o.a)(m,{href:\"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098012/banner/EDA61K_FB_o2obod.png\",target:\"_blank\",rel:\"noopener noreferrer\"},Object(o.a)(s,{className:\"d-block \",src:\"/img/EDA61K_WEB_luqnfs.webp\",alt:\"Hand Held EDA61K Zebra\"}))),Object(o.a)(z.a.Item,null,Object(o.a)(m,{href:\"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098010/banner/ck65_FB_1_rj8z3u.png\",target:\"_blank\",rel:\"noopener noreferrer\"},Object(o.a)(s,{className:\"d-block \",src:\"/img/CK65_WEB_l9akm3.webp\",alt:\"Hand Held CK65 Zebra\"}))))),Object(o.a)(x.a.Footer,null,Object(o.a)(g.a,{variant:\"light\",onClick:k},\"Cerrar\"))))}}},[[\"VlWf\",0,2,1,3,4,5,10]]]);","map":{"version":3,"sources":["static/chunks/pages/impresion-etiquetas-5e28a9d5c6e78897edcd.js"],"names":["_N_E","window","push","VlWf","module","exports","__webpack_require__","__NEXT_P","yPMI","__webpack_exports__","r","emotion_styled_base_browser_esm","react","react_default","n","head","head_default","Header","emotion_react_browser_esm","pestanas_EtiquetasH","TitImgDiv","Object","target","name","styles","MitadIzq","MitadDer","LemaDiv","Lema","RDHDiv","RDHTit","ServicioDiv","ServicioDivTxt","IMG","a","Fragment","className","src","alt","next_link","link_default","useWindowSize","pestanas_TextoEtiquetas","Contenedor","DivTresImgText","DivTresImgTextSinFlex","Beneficios","BeneficiosLista","IMGET","DivSegundoTexto","DivTercerTexto","TextoSegundoDiv","DivPVC","TituloImpresion","OvaTexDiv","OvaTexDivD","OvaTex","ContenedorD","IMGCER","size","width","href","Modal","Button","PoliticaTex","FormHandHeld","pestanas_FormEtiquetas","ContenedorGrid","DivSello","Img","TitDiv","Tit","FormularioDiv","PoliticasDiv","DivTarjeta","IMGTarjeta","IMGTarjetaD","IMGLogos","TxtTarjeta","DivIconos","Icon","_useState","abiertoAnuncios","cambiarAbiertoAnuncios","cerrarModal","_useState2","abiertoModalT","cambiarAbiertoModal","_useState3","abiertoModalD","cambiarAbiertoModalD","cerrarModalD","id","onClick","show","onHide","keyboard","closeButton","Title","Body","Footer","variant","BotonFundas","Ubicacion","ServiciosCredenciales","MapaDuns","Carousel","ContenedorFlexa","ContenedorFlex","ContenedorBotona","ImgModal","Puntero","setTimeout","lang","content","rel","property","type","sizes","async","dangerouslySetInnerHTML","__html","Item","e","preventDefault","document","location"],"mappings":"AAAAA,MACCC,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAASC,IAG1BL,OAAOM,SAAWN,OAAOM,UAAY,IAAIL,KAAK,CAC7C,uBACA,WACE,OAAOI,EAAoB,YAO/BE,KACA,SAAUJ,EAAQK,EAAqBH,GAE7C,aAEAA,EAAoBI,EAAED,GAGtB,IAAIE,EAAkCL,EAAoB,QAGtDM,EAAQN,EAAoB,QAC5BO,EAA6BP,EAAoBQ,EAAEF,GAGnDG,EAAOT,EAAoB,QAC3BU,EAA4BV,EAAoBQ,EAAEC,GAGlDE,EAASX,EAAoB,QAG7BY,EAA4BZ,EAAoB,QAUpD,IA+EiCa,EA/EL,WAC1B,IAAIC,EAAYC,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACvFC,OAAQ,aADMD,CAEM,CACpBE,KAAM,SACNC,OAAQ,qFAGNC,EAAWJ,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACtFC,OAAQ,aADKD,CAEO,CACpBE,KAAM,UACNC,OAAQ,cAGNE,EAAWL,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACtFC,OAAQ,aADKD,CAEO,CACpBE,KAAM,UACNC,OAAQ,iDAGNG,EAAUN,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACrFC,OAAQ,aADID,CAEQ,CACpBE,KAAM,UACNC,OAAQ,+XAGNI,EAAOP,OAAOV,EAAiD,EAAxDU,CAA2D,KAAa,CACjFC,OAAQ,aADCD,CAEW,CACpBE,KAAM,SACNC,OAAQ,uWAGNK,EAASR,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACpFC,OAAQ,aADGD,CAES,CACpBE,KAAM,UACNC,OAAQ,8YAGNM,EAAST,OAAOV,EAAiD,EAAxDU,CAA2D,KAAa,CACnFC,OAAQ,aADGD,CAES,CACpBE,KAAM,UACNC,OAAQ,00BAGNO,EAAcV,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACzFC,OAAQ,aADQD,CAEI,CACpBE,KAAM,SACNC,OAAQ,2OAGNQ,EAAiBX,OAAOV,EAAiD,EAAxDU,CAA2D,IAAY,CAC1FC,OAAQ,aADWD,CAEC,CACpBE,KAAM,UACNC,OAAQ,ilBAGNS,EAAMZ,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACjFC,OAAQ,aADAD,CAEY,CACpBE,KAAM,SACNC,OAAQ,gKAGV,OAAOH,OAAOH,EAAuC,EAA9CG,CAAiDR,EAAcqB,EAAEC,SAAU,KAAMd,OAAOH,EAAuC,EAA9CG,CAAiDD,EAAW,KAAMC,OAAOH,EAAuC,EAA9CG,CAAiDI,EAAU,KAAMJ,OAAOH,EAAuC,EAA9CG,CAAiDM,EAAS,KAAMN,OAAOH,EAAuC,EAA9CG,CAAiDO,EAAM,KAAM,wCAAyCP,OAAOH,EAAuC,EAA9CG,CAAiDQ,EAAQ,KAAMR,OAAOH,EAAuC,EAA9CG,CAAiDS,EAAQ,KAAM,6BAA8BT,OAAOH,EAAuC,EAA9CG,CAAiDU,EAAa,KAAMV,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CACvpBe,UAAW,MACVf,OAAOH,EAAuC,EAA9CG,CAAiDW,EAAgB,KAAM,iQAAkQX,OAAOH,EAAuC,EAA9CG,CAAiDK,EAAU,KAAML,OAAOH,EAAuC,EAA9CG,CAAiDY,EAAK,CACjcI,IAAK,wCACLC,IAAK,2BAMLC,EAAYjC,EAAoB,QAChCkC,EAA4BlC,EAAoBQ,EAAEyB,GAGlDE,EAAgBnC,EAAoB,QAYxC,IA6MiCoC,EA7MG,WAClC,IAAIC,EAAatB,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACxFC,OAAQ,aADOD,CAEK,CACpBE,KAAM,SACNC,OAAQ,qDAGNoB,EAAiBvB,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC5FC,OAAQ,aADWD,CAEC,CACpBE,KAAM,UACNC,OAAQ,sKAGNqB,EAAwBxB,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACnGC,OAAQ,aADkBD,CAEN,CACpBE,KAAM,UACNC,OAAQ,iCAGNsB,EAAazB,OAAOV,EAAiD,EAAxDU,CAA2D,KAAa,CACvFC,OAAQ,aADOD,CAEK,CACpBE,KAAM,SACNC,OAAQ,+RAGNuB,EAAkB1B,OAAOV,EAAiD,EAAxDU,CAA2D,KAAa,CAC5FC,OAAQ,aADYD,CAEA,CACpBE,KAAM,SACNC,OAAQ,oGAUNwB,GAPQ3B,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACnFC,OAAQ,aADED,CAEU,CACpBE,KAAM,UACNC,OAAQ,qOAGEH,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACnFC,OAAQ,aADED,CAEU,CACpBE,KAAM,SACNC,OAAQ,4GAGNyB,EAAkB5B,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC7FC,OAAQ,aADYD,CAEA,CACpBE,KAAM,SACNC,OAAQ,oJAGN0B,EAAiB7B,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC5FC,OAAQ,aADWD,CAEC,CACpBE,KAAM,SACNC,OAAQ,6GAGN2B,EAAkB9B,OAAOV,EAAiD,EAAxDU,CAA2D,IAAY,CAC3FC,OAAQ,aADYD,CAEA,CACpBE,KAAM,SACNC,OAAQ,wFAUN4B,GAPiB/B,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC5FC,OAAQ,YADWD,CAEC,CACpBE,KAAM,UACNC,OAAQ,8FAGGH,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACpFC,OAAQ,YADGD,CAES,CACpBE,KAAM,UACNC,OAAQ,gGAGN6B,EAAkBhC,OAAOV,EAAiD,EAAxDU,CAA2D,KAAa,CAC5FC,OAAQ,YADYD,CAEA,CACpBE,KAAM,UACNC,OAAQ,mCAUN8B,GAPqBjC,OAAOV,EAAiD,EAAxDU,CAA2D,KAAa,CAC/FC,OAAQ,YADeD,CAEH,CACpBE,KAAM,UACNC,OAAQ,wEAGMH,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACvFC,OAAQ,YADMD,CAEM,CACpBE,KAAM,QACNC,OAAQ,+JAGN+B,EAAalC,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACxFC,OAAQ,YADOD,CAEK,CACpBE,KAAM,UACNC,OAAQ,gJAGNgC,EAASnC,OAAOV,EAAiD,EAAxDU,CAA2D,IAAY,CAClFC,OAAQ,YADGD,CAES,CACpBE,KAAM,UACNC,OAAQ,sMAUNiC,GAPUpC,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACrFC,OAAQ,YADID,CAEQ,CACpBE,KAAM,SACNC,OAAQ,sEAGQH,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACzFC,OAAQ,YADQD,CAEI,CACpBE,KAAM,UACNC,OAAQ,yEAGNkC,EAASrC,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACpFC,OAAQ,YADGD,CAES,CACpBE,KAAM,UACNC,OAAQ,0NAGNmC,EAAOtC,OAAOoB,EAA+B,EAAtCpB,GACX,OAAOA,OAAOH,EAAuC,EAA9CG,CAAiDR,EAAcqB,EAAEC,SAAU,KAAMd,OAAOH,EAAuC,EAA9CG,CAAiDsB,EAAY,KAAMgB,EAAO,KAAOtC,OAAOH,EAAuC,EAA9CG,CAAiDuB,EAAgB,KAAMvB,OAAOH,EAAuC,EAA9CG,CAAiDyB,EAAY,KAAMzB,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,KAAMA,OAAOH,EAAuC,EAA9CG,CAAiD,KAAM,KAAMA,OAAOH,EAAuC,EAA9CG,CAAiD,IAAK,KAAM,+DAAgEA,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,eAAgB1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,cAAe1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,uBAAwB1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,eAAgB,MAAO1B,OAAOH,EAAuC,EAA9CG,CAAiD2B,EAAO,KAAM3B,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CAC5gCgB,IAAK,wCACLC,IAAK,YACLsB,MAAO,YACFvC,OAAOH,EAAuC,EAA9CG,CAAiDwB,EAAuB,KAAMxB,OAAOH,EAAuC,EAA9CG,CAAiDyB,EAAY,KAAMzB,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CAC9Me,UAAW,SACVf,OAAOH,EAAuC,EAA9CG,CAAiD,KAAM,KAAMA,OAAOH,EAAuC,EAA9CG,CAAiD,IAAK,KAAM,iEAAkEA,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,eAAgB1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,cAAe1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,uBAAwB1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,gBAAiB1B,OAAOH,EAAuC,EAA9CG,CAAiD2B,EAAO,KAAM3B,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CAC1pBe,UAAW,WACXC,IAAK,wCACLC,IAAK,gBACDjB,OAAOH,EAAuC,EAA9CG,CAAiD4B,EAAiB,KAAM5B,OAAOH,EAAuC,EAA9CG,CAAiD8B,EAAiB,KAAM9B,OAAOH,EAAuC,EAA9CG,CAAiDgC,EAAiB,KAAMhC,OAAOH,EAAuC,EAA9CG,CAAiD,IAAK,KAAM,kEAAmEA,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,uFAAwF1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,4GAA6G1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,6CAA8C1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,8EAA+E1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,8EAA+E1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,+JAAgK1B,OAAOH,EAAuC,EAA9CG,CAAiD6B,EAAgB,KAAM7B,OAAOH,EAAuC,EAA9CG,CAAiD+B,EAAQ,KAAM/B,OAAOH,EAAuC,EAA9CG,CAAiDgC,EAAiB,KAAMhC,OAAOH,EAAuC,EAA9CG,CAAiD,IAAK,KAAM,oDAAqDA,OAAOH,EAAuC,EAA9CG,CAAiD,KAAM,CAClrDe,UAAW,QACVf,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,uBAAwB1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,wCAAyC1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,4CAA6C1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,4CAA6C1B,OAAOH,EAAuC,EAA9CG,CAAiD0B,EAAiB,KAAM,qCAAsC1B,OAAOH,EAAuC,EAA9CG,CAAiDqC,EAAQ,CACnmBrB,IAAK,sCACLC,IAAK,oBACLsB,MAAO,SACJvC,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CAC3De,UAAW,QACVf,OAAOH,EAAuC,EAA9CG,CAAiDoC,EAAa,KAAMpC,OAAOH,EAAuC,EAA9CG,CAAiDmB,EAAaN,EAAG,CACtI2B,KAAM,WACLxC,OAAOH,EAAuC,EAA9CG,CAAiDiC,EAAW,CAC7DlB,UAAW,KACVf,OAAOH,EAAuC,EAA9CG,CAAiDmC,EAAQ,KAAMnC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CACzHe,UAAW,KACV,6CAA8Cf,OAAOH,EAAuC,EAA9CG,CAAiDmB,EAAaN,EAAG,CAChH2B,KAAM,gBACLxC,OAAOH,EAAuC,EAA9CG,CAAiDiC,EAAW,CAC7DlB,UAAW,KACVf,OAAOH,EAAuC,EAA9CG,CAAiDmC,EAAQ,KAAMnC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CACzHe,UAAW,KACV,qDAAsDf,OAAOH,EAAuC,EAA9CG,CAAiDmB,EAAaN,EAAG,CACxH2B,KAAM,WACLxC,OAAOH,EAAuC,EAA9CG,CAAiDiC,EAAW,CAC7DlB,UAAW,KACVf,OAAOH,EAAuC,EAA9CG,CAAiDmC,EAAQ,KAAMnC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CACzHe,UAAW,KACV,6CAA8Cf,OAAOH,EAAuC,EAA9CG,CAAiDmB,EAAaN,EAAG,CAChH2B,KAAM,sCACLxC,OAAOH,EAAuC,EAA9CG,CAAiDiC,EAAW,CAC7DlB,UAAW,KACVf,OAAOH,EAAuC,EAA9CG,CAAiDmC,EAAQ,KAAMnC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CACzHe,UAAW,KACV,8DAA+Df,OAAOH,EAAuC,EAA9CG,CAAiDmB,EAAaN,EAAG,CACjI2B,KAAM,sBACLxC,OAAOH,EAAuC,EAA9CG,CAAiDiC,EAAW,CAC7DlB,UAAW,KACVf,OAAOH,EAAuC,EAA9CG,CAAiDmC,EAAQ,KAAMnC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CACzHe,UAAW,KACV,gEAAmEf,OAAOH,EAAuC,EAA9CG,CAAiDmB,EAAaN,EAAG,CACrI2B,KAAM,6CACLxC,OAAOH,EAAuC,EAA9CG,CAAiDkC,EAAY,CAC9DnB,UAAW,KACVf,OAAOH,EAAuC,EAA9CG,CAAiDmC,EAAQ,KAAM,iFAAkFnC,OAAOH,EAAuC,EAA9CG,CAAiD,KAAM,MAAOA,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CACzQe,UAAW,KACV,+DAAgEf,OAAOH,EAAuC,EAA9CG,CAAiDmB,EAAaN,EAAG,CAClI2B,KAAM,gDACLxC,OAAOH,EAAuC,EAA9CG,CAAiDkC,EAAY,CAC9DnB,UAAW,KACVf,OAAOH,EAAuC,EAA9CG,CAAiDmC,EAAQ,KAAMnC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CACzHe,UAAW,KACV,sEAKD0B,EAAQxD,EAAoB,QAG5ByD,EAASzD,EAAoB,QAG7B0D,EAAc1D,EAAoB,QAGlC2D,EAAe3D,EAAoB,QAcvC,IA8MiC4D,EA9MC,WAChC,IAAIC,EAAiB9C,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC5FC,OAAQ,YADWD,CAEC,CACpBE,KAAM,SACNC,OAAQ,qFAGN4C,EAAW/C,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACtFC,OAAQ,YADKD,CAEO,CACpBE,KAAM,UACNC,OAAQ,yDAGN6C,EAAMhD,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACjFC,OAAQ,YADAD,CAEY,CACpBE,KAAM,SACNC,OAAQ,0EAGN8C,EAASjD,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACpFC,OAAQ,YADGD,CAES,CACpBE,KAAM,UACNC,OAAQ,6CAGN+C,EAAMlD,OAAOV,EAAiD,EAAxDU,CAA2D,KAAa,CAChFC,OAAQ,YADAD,CAEY,CACpBE,KAAM,UACNC,OAAQ,8HAGNmB,EAAatB,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACxFC,OAAQ,WADOD,CAEK,CACpBE,KAAM,SACNC,OAAQ,+BAGNgD,EAAgBnD,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC3FC,OAAQ,WADUD,CAEE,CACpBE,KAAM,UACNC,OAAQ,sFAGNiD,EAAepD,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC1FC,OAAQ,WADSD,CAEG,CACpBE,KAAM,UACNC,OAAQ,+BAGNkD,EAAarD,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACxFC,OAAQ,WADOD,CAEK,CACpBE,KAAM,SACNC,OAAQ,6CAGNmD,EAAatD,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACxFC,OAAQ,WADOD,CAEK,CACpBE,KAAM,SACNC,OAAQ,0EAGNoD,EAAcvD,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACzFC,OAAQ,WADQD,CAEI,CACpBE,KAAM,UACNC,OAAQ,wGAGNqD,EAAWxD,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACtFC,OAAQ,WADKD,CAEO,CACpBE,KAAM,UACNC,OAAQ,2MAGNsD,EAAazD,OAAOV,EAAiD,EAAxDU,CAA2D,IAAY,CACtFC,OAAQ,WADOD,CAEK,CACpBE,KAAM,SACNC,OAAQ,oCAGNuD,EAAY1D,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACvFC,OAAQ,WADMD,CAEM,CACpBE,KAAM,UACNC,OAAQ,kFAGNwD,EAAO3D,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAClFC,OAAQ,WADCD,CAEW,CACpBE,KAAM,UACNC,OAAQ,eAGNyD,EAAY5D,OAAOT,EAAgB,SAAvBS,EAA0B,GACtC6D,EAAkBD,EAAU,GAC5BE,EAAyBF,EAAU,GAMnCG,EAAc,WAChBD,GAAuB,IAKrBE,GAFOhE,OAAOoB,EAA+B,EAAtCpB,GAEMA,OAAOT,EAAgB,SAAvBS,EAA0B,IACvCiE,EAAgBD,EAAW,GAC3BE,EAAsBF,EAAW,GAEjCG,EAAanE,OAAOT,EAAgB,SAAvBS,EAA0B,GACvCoE,EAAgBD,EAAW,GAC3BE,EAAuBF,EAAW,GAclCG,EAAe,WACjBD,GAAqB,IAGvB,OAAOrE,OAAOH,EAAuC,EAA9CG,CAAiDR,EAAcqB,EAAEC,SAAU,KAAMd,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC/IuE,GAAI,aACFvE,OAAOH,EAAuC,EAA9CG,CAAiD8C,EAAgB,KAAM9C,OAAOH,EAAuC,EAA9CG,CAAiD+C,EAAU,KAAM/C,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CAClMe,UAAW,UACVf,OAAOH,EAAuC,EAA9CG,CAAiDgD,EAAK,CACvDhC,IAAK,yBACLC,IAAK,4CACDjB,OAAOH,EAAuC,EAA9CG,CAAiDiD,EAAQ,KAAMjD,OAAOH,EAAuC,EAA9CG,CAAiDkD,EAAK,KAAM,sBAAuBlD,OAAOH,EAAuC,EAA9CG,CAAiDsB,EAAY,KAAMtB,OAAOH,EAAuC,EAA9CG,CAAiDmD,EAAe,KAAMnD,OAAOH,EAAuC,EAA9CG,CAAiD4C,EAA8B,EAAG,MAAO5C,OAAOH,EAAuC,EAA9CG,CAAiDoD,EAAc,KAAMpD,OAAOH,EAAuC,EAA9CG,CAAiD,IAAK,CACnfe,UAAW,aACV,kEAAmE,IAAKf,OAAOH,EAAuC,EAA9CG,CAAiD,IAAK,CAC/HwE,QA5Ce,WACfV,GAAuB,KA4CtB,iCAAkC9D,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAG,CAC9GgC,KAAMZ,EACNa,OAAQX,EACRY,UAAU,EACVrC,KAAM,MACLtC,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAE7C,OAAQ,CACnFgF,aAAa,GACZ5E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEoC,MAAO,KAAM,aAAc7E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEqC,KAAM,KAAM9E,OAAOH,EAAuC,EAA9CG,CAAiD2C,EAA6B,EAAG,OAAQ3C,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEsC,OAAQ,KAAM/E,OAAOH,EAAuC,EAA9CG,CAAiD0C,EAAwB,EAAG,CACzbsC,QAAS,QACTR,QAAST,GACR,aAAc/D,OAAOH,EAAuC,EAA9CG,CAAiD0D,EAAW,KAAM1D,OAAOH,EAAuC,EAA9CG,CAAiD2D,EAAM,KAAM3D,OAAOH,EAAuC,EAA9CG,CAAiDuD,EAAa,CAC5MxC,UAAW,UACXC,IAAK,iHACLC,IAAK,gBACLuD,QAzCgB,WAChBN,GAAoB,MAyClBlE,OAAOH,EAAuC,EAA9CG,CAAiDyD,EAAY,KAAM,+CAAgDzD,OAAOH,EAAuC,EAA9CG,CAAiD2D,EAAM,KAAM3D,OAAOH,EAAuC,EAA9CG,CAAiDuD,EAAa,CAChPxC,UAAW,UACXC,IAAK,sIACLC,IAAK,wBACLuD,QAtCgB,WAChBH,GAAqB,MAsCnBrE,OAAOH,EAAuC,EAA9CG,CAAiDyD,EAAY,KAAM,+CAAgDzD,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,KAAMA,OAAOH,EAAuC,EAA9CG,CAAiDqD,EAAY,KAAMrD,OAAOH,EAAuC,EAA9CG,CAAiDsD,EAAY,CACnTtC,IAAK,2GACLC,IAAK,eACHjB,OAAOH,EAAuC,EAA9CG,CAAiDyD,EAAY,KAAM,mCAAoCzD,OAAOH,EAAuC,EAA9CG,CAAiDwD,EAAU,CACpKxC,IAAK,4GACLC,IAAK,uBACAjB,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAG,CAChFgC,KAAMR,EACNS,OAnDiB,WACjBR,GAAoB,IAmDpBS,UAAU,EACVrC,KAAM,KACNvB,UAAW,gBACVf,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAE7C,OAAQ,CACnFgF,aAAa,GACZ5E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEoC,MAAO,KAAM,qDAAsD7E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEqC,KAAM,KAAM,2SAA4S9E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEsC,OAAQ,KAAM/E,OAAOH,EAAuC,EAA9CG,CAAiD0C,EAAwB,EAAG,CACprBsC,QAAS,QACTR,QAAST,GACR,YAAa/D,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAG,CACzFgC,KAAML,EACNM,OAAQJ,EACRK,UAAU,EACVrC,KAAM,KACNvB,UAAW,gBACVf,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAE7C,OAAQ,CACnFgF,aAAa,GACZ5E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEoC,MAAO,KAAM,8CAA+C7E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEqC,KAAM,KAAM,oLAAqL9E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEsC,OAAQ,KAAM/E,OAAOH,EAAuC,EAA9CG,CAAiD0C,EAAwB,EAAG,CACtjBsC,QAAS,QACTR,QAASF,GACR,cAKDW,EAAchG,EAAoB,QAGlCiG,EAAYjG,EAAoB,QAGhCkG,EAAwBlG,EAAoB,QAG5CmG,EAAWnG,EAAoB,QAG/B8F,EAAS9F,EAAoB,QAG7BoG,EAAWpG,EAAoB,QAsNoBG,EAA6B,QAjMhD,WAClC,IAAIkG,EAAkBtF,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC7FC,OAAQ,YADYD,CAEA,CACpBE,KAAM,SACNC,OAAQ,2DAGNoF,EAAiBvF,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC5FC,OAAQ,YADWD,CAEC,CACpBE,KAAM,SACNC,OAAQ,2DAGNqF,EAAmBxF,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CAC9FC,OAAQ,YADaD,CAED,CACpBE,KAAM,SACNC,OAAQ,8CAGNsF,EAAWzF,OAAOV,EAAiD,EAAxDU,CAA2D,MAAc,CACtFC,OAAQ,YADKD,CAEO,CACpBE,KAAM,UACNC,OAAQ,0GAGNuF,EAAU1F,OAAOV,EAAiD,EAAxDU,CAA2D,IAAY,CACnFC,OAAQ,YADID,CAEQ,CACpBE,KAAM,SACNC,OAAQ,mBASNyD,EAAY5D,OAAOT,EAAgB,SAAvBS,EAA0B,GACtC6D,EAAkBD,EAAU,GAC5BE,EAAyBF,EAAU,GAEnCI,EAAahE,OAAOT,EAAgB,SAAvBS,EAA0B,GAIvC+D,GAHeC,EAAW,GACJA,EAAW,GAEnB,WAChBF,GAAuB,KAczB,OALA9D,OAAOT,EAAiB,UAAxBS,EAA2B,WACzB2F,YAAW,WACT7B,GAAuB,KACtB,OACF,IACI9D,OAAOH,EAAuC,EAA9CG,CAAiDR,EAAcqB,EAAEC,SAAU,KAAMd,OAAOH,EAAuC,EAA9CG,CAAiDL,EAAakB,EAAG,KAAMb,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CACtN4F,KAAM,OACJ5F,OAAOH,EAAuC,EAA9CG,CAAiD,QAAS,KAAM,iFAAkFA,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC7ME,KAAM,cACN2F,QAAS,sgBACP7F,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3D8F,IAAK,gBACLtD,KAAM,oBACJxC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3DE,KAAM,WACN2F,QAAS,mYACP7F,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3DE,KAAM,SACN2F,QAAS,qBACP7F,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3D+F,SAAU,WACVF,QAAS,sGACP7F,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3D+F,SAAU,WACVF,QAAS,4CACP7F,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3D+F,SAAU,UACVF,QAAS,YACP7F,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3D+F,SAAU,iBACVF,QAAS,qgBACP7F,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3DE,KAAM,eACN2F,QAAS,wBACP7F,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3D8F,IAAK,OACLE,KAAM,YACNC,MAAO,SACPzD,KAAM,4CACJxC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3D8F,IAAK,aACLtD,KAAM,8BACJxC,OAAOH,EAAuC,EAA9CG,CAAiD,OAAQ,CAC3DwC,KAAM,gEACNsD,IAAK,eACH9F,OAAOH,EAAuC,EAA9CG,CAAiD,SAAU,CAC7DkG,OAAO,EACPlF,IAAK,6DACHhB,OAAOH,EAAuC,EAA9CG,CAAiD,SAAU,CAC7DmG,wBAAyB,CACvBC,OAAQ,qJAEPpG,OAAOH,EAAuC,EAA9CG,CAAiD,WAAY,CAChEmG,wBAAyB,CACvBC,OAAQ,4JAERpG,OAAOH,EAAuC,EAA9CG,CAAiDJ,EAAwB,EAAG,MAAOI,OAAOH,EAAuC,EAA9CG,CAAiDF,EAAqB,MAAOE,OAAOH,EAAuC,EAA9CG,CAAiDsF,EAAiB,KAAMtF,OAAOH,EAAuC,EAA9CG,CAAiDqB,EAAyB,MAAOrB,OAAOH,EAAuC,EAA9CG,CAAiD6C,EAAwB,OAAQ7C,OAAOH,EAAuC,EAA9CG,CAAiDwF,EAAkB,KAAMxF,OAAOH,EAAuC,EAA9CG,CAAiDiF,EAA6B,EAAG,OAAQjF,OAAOH,EAAuC,EAA9CG,CAAiDuF,EAAgB,KAAMvF,OAAOH,EAAuC,EAA9CG,CAAiDkF,EAA2B,EAAG,MAAOlF,OAAOH,EAAuC,EAA9CG,CAAiDmF,EAAuC,EAAG,OAAQnF,OAAOH,EAAuC,EAA9CG,CAAiDoF,EAA0B,EAAG,MAAOpF,OAAOH,EAAuC,EAA9CG,CAAiD+E,EAAwB,EAAG,MAAO/E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAG,CACjiCgC,KAAMZ,EACNa,OAAQX,EACRY,UAAU,EACVrC,KAAM,KACNvB,UAAW,oBACVf,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAE7C,OAAQ,CACnFgF,aAAa,GACZ5E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEoC,MAAO,KAAM,aAAc7E,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEqC,KAAM,KAAM9E,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAG,KAAMrF,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CACjae,UAAW,gBACXC,IAAK,iDACLC,IAAK,sBACFjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CACpJe,UAAW,gBACXC,IAAK,0BACLC,IAAK,mBACFjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CACpJe,UAAW,gBACXC,IAAK,8BACLC,IAAK,uBACFjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CACpJe,UAAW,gBACXC,IAAK,6BACLC,IAAK,+BACFjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CACpJe,UAAW,gBACXC,IAAK,uCACLC,IAAK,sBACFjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD,MAAO,CACpJe,UAAW,gBACXC,IAAK,+CACLC,IAAK,yCACFjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiDyF,EAAU,CACvJ1E,UAAW,WACXC,IAAK,4DACLC,IAAK,uCACFjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD0F,EAAS,CACtJlB,QArHc,SAAmB8B,GACjCA,EAAEC,iBACFzC,GAAuB,GACvB0C,SAASC,SAASjE,KAAO,iBAmHxBxC,OAAOH,EAAuC,EAA9CG,CAAiDyF,EAAU,CAC5D1E,UAAW,WACXC,IAAK,qDACLC,IAAK,wEACDjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD,IAAK,CACnJe,UAAW,SACXyB,KAAM,iIACNvC,OAAQ,SACR6F,IAAK,uBACJ9F,OAAOH,EAAuC,EAA9CG,CAAiDyF,EAAU,CAC5D1E,UAAW,WACXC,IAAK,+CACLC,IAAK,sBACDjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiDyF,EAAU,CACxJ1E,UAAW,WACXC,IAAK,+CACLC,IAAK,yCACFjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD0F,EAAS,CACtJlD,KAAM,4FACNvC,OAAQ,SACR6F,IAAK,uBACJ9F,OAAOH,EAAuC,EAA9CG,CAAiDyF,EAAU,CAC5D1E,UAAW,WACXC,IAAK,8BACLC,IAAK,6BACDjB,OAAOH,EAAuC,EAA9CG,CAAiDqF,EAA0B,EAAEgB,KAAM,KAAMrG,OAAOH,EAAuC,EAA9CG,CAAiD0F,EAAS,CACvJlD,KAAM,4FACNvC,OAAQ,SACR6F,IAAK,uBACJ9F,OAAOH,EAAuC,EAA9CG,CAAiDyF,EAAU,CAC5D1E,UAAW,WACXC,IAAK,4BACLC,IAAK,6BACCjB,OAAOH,EAAuC,EAA9CG,CAAiDyC,EAAuB,EAAEsC,OAAQ,KAAM/E,OAAOH,EAAuC,EAA9CG,CAAiD0C,EAAwB,EAAG,CAC1KsC,QAAS,QACTR,QAAST,GACR,gBAOH,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE"},"name":"static/chunks/pages/impresion-etiquetas-5e28a9d5c6e78897edcd.js","input":"_N_E =\n(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[17],{\n\n/***/ \"VlWf\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/impresion-etiquetas\",\n        function () {\n          return __webpack_require__(\"yPMI\");\n        }\n      ]);\n    \n\n/***/ }),\n\n/***/ \"yPMI\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js + 2 modules\nvar emotion_styled_base_browser_esm = __webpack_require__(\"DZdY\");\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/next/head.js\nvar head = __webpack_require__(\"g4pe\");\nvar head_default = /*#__PURE__*/__webpack_require__.n(head);\n\n// EXTERNAL MODULE: ./components/layout/Header.js + 90 modules\nvar Header = __webpack_require__(\"FCqg\");\n\n// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\nvar emotion_react_browser_esm = __webpack_require__(\"AeFk\");\n\n// CONCATENATED MODULE: ./components/pestanas/EtiquetasH.js\n\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\nvar EtiquetasH_EtiquetasH = function EtiquetasH() {\n  var TitImgDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"e15xwoo29\"\n  } : undefined)(true ? {\n    name: \"z8v2at\",\n    styles: \"width:100%!important;display:flex;@media (max-width: 995px){margin-bottom:7rem;}\"\n  } : undefined);\n\n  var MitadIzq = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"e15xwoo28\"\n  } : undefined)(true ? {\n    name: \"1t29t6p\",\n    styles: \"width:50%\"\n  } : undefined);\n\n  var MitadDer = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"e15xwoo27\"\n  } : undefined)(true ? {\n    name: \"1263e22\",\n    styles: \"width:50%;text-align:center;margin-right:0px\"\n  } : undefined);\n\n  var LemaDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"e15xwoo26\"\n  } : undefined)(true ? {\n    name: \"19hccin\",\n    styles: \"background-color:#0076c0;width:55%;min-height:40px;text-align:center;margin-top:3rem;margin-left:8rem;@media (max-width: 1100px){margin-left:7rem;align-items:center;display:grid;margin-top:1rem;}@media (max-width: 1008px){margin-left:6rem;}@media (max-width: 782px){margin-left:5.2rem;}@media (max-width: 542px){margin-left:4.2rem;}@media (max-width: 456px){margin-left:2.8rem;}\"\n  } : undefined);\n\n  var Lema = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"h1\", true ? {\n    target: \"e15xwoo25\"\n  } : undefined)(true ? {\n    name: \"qx9bvq\",\n    styles: \"color:white;font-weight:bold;font-size:20px;padding-top:8px;@media (max-width: 1100px){font-size:18px;}@media (max-width: 1008px){font-size:16px;}@media (max-width: 781px){font-size:14px;}@media (max-width: 698px){font-size:12px;}@media (max-width: 620px){font-size:11px;}@media (max-width: 542px){font-size:9px;}@media (max-width: 456px){font-size:7px;}\"\n  } : undefined);\n\n  var RDHDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"e15xwoo24\"\n  } : undefined)(true ? {\n    name: \"1ereyfd\",\n    styles: \"width:100%;margin-left:3rem;margin-top:2.5rem;border-left:8px solid #0076c0;height:125px;border-radius:5px 5px 5px 5px;@media (max-width: 2500px){margin-left:1.8rem;height:212px;}@media (max-width: 1816px){height:390px;}@media (max-width: 1009px){height:230px;}@media (max-width: 873px){height:171px;}@media (max-width: 782px){margin-left:1.8rem;}@media (max-width: 456px){margin-left:0.8rem;}\"\n  } : undefined);\n\n  var RDHTit = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"h1\", true ? {\n    target: \"e15xwoo23\"\n  } : undefined)(true ? {\n    name: \"1m21udg\",\n    styles: \"width:90%!important;padding-left:1rem;font-weight:bold;font-size:60px;border-bottom:8px solid #0076c0;border-radius:0px 0px 5px;@media (max-width: 1825px){font-size:65px;width:73%;}@media (max-width: 1739px){font-size:60px;}@media (max-width: 1650px){font-size:60px;width:78%;}@media (max-width: 1563px){width:83%;}@media (max-width: 1470px){font-size:55px;width:83%;}@media (max-width: 1344px){font-size:50px;}@media (max-width: 1215px){width:86%;}@media (max-width: 1149px){font-size:42px;width:83%;}@media (max-width: 1008px){font-size:36px;}@media (max-width: 873px){font-size:32px;}@media (max-width: 781px){font-size:28px;margin-left:-0.1rem;}@media (max-width: 698px){font-size:24px;}@media (max-width: 620px){font-size:21px;}@media (max-width: 542px){font-size:21px;padding-left:0.5rem;}@media (max-width: 512px){font-size:25px;}\"\n  } : undefined);\n\n  var ServicioDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"e15xwoo22\"\n  } : undefined)(true ? {\n    name: \"494tty\",\n    styles: \"width:90%!important;margin-left:1rem;margin-top:1rem;background-color:#0076c0;border-radius:0px 50px 50px 0px;@media (max-width: 733px){width:82%;}@media (max-width: 542px){margin-left:0.5rem;}@media (max-width: 512px){width:79%;}\"\n  } : undefined);\n\n  var ServicioDivTxt = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"p\", true ? {\n    target: \"e15xwoo21\"\n  } : undefined)(true ? {\n    name: \"1fadznx\",\n    styles: \"font-size:30px;padding-left:1rem;color:white;padding:5px;@media (max-width: 1825px){font-size:30px;}@media (max-width: 1470px){font-size:26px;}@media (max-width: 1344px){font-size:23px;}@media (max-width: 1100px){font-size:21px;}@media (max-width: 1008px){font-size:19px;}@media (max-width: 873px){font-size:16px;}@media (max-width: 733px){font-size:15px;}@media (max-width: 542px){font-size:13px;}@media (max-width: 512px){font-size:10px;padding-left:0.5rem;}@media (max-width: 456px){font-size:11px;}@media (max-width: 415px){font-size:9.5px;}@media (max-width: 350px){font-size:8.5px;}\"\n  } : undefined);\n\n  var IMG = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"img\", true ? {\n    target: \"e15xwoo20\"\n  } : undefined)(true ? {\n    name: \"9ux7i4\",\n    styles: \"width:85%;height:90%;margin-top:1rem;border-radius:15px;@media (max-width: 510px){margin-top:3.5rem;height:60%;}@media (max-width: 400px){margin-top:5rem;}\"\n  } : undefined);\n\n  return Object(emotion_react_browser_esm[\"a\" /* jsx */])(react_default.a.Fragment, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(TitImgDiv, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(MitadIzq, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(LemaDiv, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Lema, null, \"\\xA1F\\xC1CIL, R\\xC1PIDO Y FLEXIBLE!\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(RDHDiv, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(RDHTit, null, \"Impresi\\xF3n de etiquetas\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(ServicioDiv, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"div\", {\n    className: \"sd\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(ServicioDivTxt, null, \"Somos especialistas en la impresion de etiquetas. Contamos con impresion termico directo y transferencia termica. Etiquetas de alta durabilidad y resistencia, adecuadas para cada giro comercial. Impresion de calidad en materiales sinteticos y papel.\"))))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(MitadDer, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(IMG, {\n    src: \"/img/img.-pesta\\xF1a-etiqeutas-3.webp\",\n    alt: \"Renta de Handhelds\"\n  }))));\n};\n\n/* harmony default export */ var pestanas_EtiquetasH = (EtiquetasH_EtiquetasH);\n// EXTERNAL MODULE: ./node_modules/next/link.js\nvar next_link = __webpack_require__(\"YFqc\");\nvar link_default = /*#__PURE__*/__webpack_require__.n(next_link);\n\n// EXTERNAL MODULE: ./hooks/useWindowSize.js\nvar useWindowSize = __webpack_require__(\"MhZx\");\n\n// CONCATENATED MODULE: ./components/pestanas/TextoEtiquetas.js\n\n\nfunction TextoEtiquetas_EMOTION_STRINGIFIED_CSS_ERROR_() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\n\n\nvar TextoEtiquetas_TextoEtiquetas = function TextoEtiquetas() {\n  var Contenedor = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l919\"\n  } : undefined)(true ? {\n    name: \"yb3z0d\",\n    styles: \"width:50%;@media (max-width: 995px){width:100%;}\"\n  } : undefined);\n\n  var DivTresImgText = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l918\"\n  } : undefined)(true ? {\n    name: \"1j15a8y\",\n    styles: \"display:flex;margin-top:7rem;@media (max-width: 1900px){margin-top:1rem;}@media (max-width: 1816px){margin-top:2rem;}@media (max-width: 1619px){margin-top:3rem;}\"\n  } : undefined);\n\n  var DivTresImgTextSinFlex = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l917\"\n  } : undefined)(true ? {\n    name: \"1iqrkxi\",\n    styles: \"display:grid;margin:0px auto\"\n  } : undefined);\n\n  var Beneficios = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"ul\", true ? {\n    target: \"ej1y3l916\"\n  } : undefined)(true ? {\n    name: \"wn0hft\",\n    styles: \"font-size:20px;text-align:left;margin-left:25px;display:grid;align-items:center;@media (max-width: 1750px){font-size:20px;}@media (max-width: 1400px){width:100%;height:100%;padding-top:2rem;}@media (max-width: 995px){width:90%;height:100%;}@media (max-width: 530px){font-size:15px;}\"\n  } : undefined);\n\n  var BeneficiosLista = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"li\", true ? {\n    target: \"ej1y3l915\"\n  } : undefined)(true ? {\n    name: \"thhj3o\",\n    styles: \"list-style:outside;align-items:center;font-size:20px;@media (max-width: 530px){font-size:15px;}\"\n  } : undefined);\n\n  var IMGTC = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l914\"\n  } : undefined)(true ? {\n    name: \"1fu3lmy\",\n    styles: \"width:52%;height:70%;margin-top:0px;padding-left:2rem;border-radius:15px;@media (max-width: 1786px){width:65%;}@media (max-width: 1400px){width:100%;height:100%;text-align:center;}@media (max-width: 530px){padding-left:0px;}\"\n  } : undefined);\n\n  var IMGET = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l913\"\n  } : undefined)(true ? {\n    name: \"1n7ivv\",\n    styles: \"max-width:500px;height:70%;margin-top:0px;padding-left:2rem;border-radius:15px;img{max-width:inherit;}\"\n  } : undefined);\n\n  var DivSegundoTexto = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l912\"\n  } : undefined)(true ? {\n    name: \"njtk4w\",\n    styles: \"width:100%;padding:2rem;margin-top:3rem;display:contents;@media (max-width: 1400px){margin-top:-212px;}@media (max-width: 530px){padding:1rem;}\"\n  } : undefined);\n\n  var DivTercerTexto = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l911\"\n  } : undefined)(true ? {\n    name: \"edm7mf\",\n    styles: \"width:100%;padding-left:2rem;display:flex;@media (max-width: 830px){padding:1rem;flex-direction:column;}\"\n  } : undefined);\n\n  var TextoSegundoDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"p\", true ? {\n    target: \"ej1y3l910\"\n  } : undefined)(true ? {\n    name: \"j1gtqd\",\n    styles: \"font-size:20px;padding:2rem;@media (max-width: 530px){font-size:15px;padding:15px;}\"\n  } : undefined);\n\n  var TextoTercerDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l99\"\n  } : undefined)(true ? {\n    name: \"14dnk7q\",\n    styles: \"font-size:20px;display:grid;align-items:center;@media (max-width: 530px){font-size:15px;}\"\n  } : undefined);\n\n  var DivPVC = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l98\"\n  } : undefined)(true ? {\n    name: \"14ftwbw\",\n    styles: \"margin-top:2rem;padding-left:2rem;@media (max-width: 530px){padding:1rem;margin-top:1rem;}\"\n  } : undefined);\n\n  var TituloImpresion = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"h2\", true ? {\n    target: \"ej1y3l97\"\n  } : undefined)(true ? {\n    name: \"1q82c7c\",\n    styles: \"text-align:left;font-size:20px\"\n  } : undefined);\n\n  var TituloImpresionDos = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"h2\", true ? {\n    target: \"ej1y3l96\"\n  } : undefined)(true ? {\n    name: \"17g321i\",\n    styles: \"text-align:center;font-weight:bold;font-size:20px;margin-top:2.5rem\"\n  } : undefined);\n\n  var OvaTexDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l95\"\n  } : undefined)(true ? {\n    name: \"bmxbe\",\n    styles: \"width:78%;height:4.5rem;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"\n  } : undefined);\n\n  var OvaTexDivD = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l94\"\n  } : undefined)(true ? {\n    name: \"1xutzvp\",\n    styles: \"width:78%;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"\n  } : undefined);\n\n  var OvaTex = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"p\", true ? {\n    target: \"ej1y3l93\"\n  } : undefined)(true ? {\n    name: \"1i04rfa\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\"\n  } : undefined);\n\n  var TextDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l92\"\n  } : undefined)(true ? {\n    name: \"q68gb5\",\n    styles: \"width:80%;margin:0px auto;@media (max-width: 1400px){width:100%;}\"\n  } : undefined);\n\n  var ContenedorD = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ej1y3l91\"\n  } : undefined)(true ? {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\"\n  } : undefined);\n\n  var IMGCER = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"img\", true ? {\n    target: \"ej1y3l90\"\n  } : undefined)(true ? {\n    name: \"1641xlb\",\n    styles: \"border-radius:15px;object-fit:contain;margin-top:5rem;@media (max-width: 1200px){width:50%!important;}@media (max-width: 1070px){width:45%!important;}@media (max-width: 995px){margin:0px auto;width:60%!important;}\"\n  } : undefined);\n\n  var size = Object(useWindowSize[\"a\" /* default */])();\n  return Object(emotion_react_browser_esm[\"a\" /* jsx */])(react_default.a.Fragment, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Contenedor, null, size > 1400 ? Object(emotion_react_browser_esm[\"a\" /* jsx */])(DivTresImgText, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Beneficios, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"div\", null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"h3\", null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"b\", null, \"Impresion de etiquetas con diferentes tipos de adhesivos:\"))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Permanente.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Removible.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"De alta adherencia.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Acr\\xEDlico.\", \" \")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(IMGET, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"img\", {\n    src: \"/img/img.-pesta\\xF1a-etiquetas-2.webp\",\n    alt: \"Etiquetas\",\n    width: \"500px\"\n  }))) : Object(emotion_react_browser_esm[\"a\" /* jsx */])(DivTresImgTextSinFlex, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Beneficios, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"div\", {\n    className: \"garan\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"h3\", null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"b\", null, \"Impresi\\xF3n de etiquetas con diferentes tipos de adhesivos\"))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Permanente.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Removible.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"De alta adherencia.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Acr\\xEDlico\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(IMGET, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"img\", {\n    className: \"imgresce\",\n    src: \"/img/img.-pesta\\xF1a-etiquetas-2.webp\",\n    alt: \"Etiquetas\"\n  }))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(DivSegundoTexto, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(TextoSegundoDiv, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(TituloImpresion, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"b\", null, \"Impresion de etiquetas en los mejores materiales como lo son:\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Poliolefina: Adecuada para etiquetas colocadas en superficies asperas e irregulares\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Polipropileno: Adecuado para etiquetar zonas curvas e irregulares, capaz de soportar bajas temperaturas.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Poliester: Alta resitencia y durabilidad \"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Poliamida: Adecuada para etiquetas capaces de resistir altas temperaturas.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Poliamida: Adecuada para etiquetas capaces de reisistir altas temperaturas\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Papel: Adecuado para impresion de etiquetas de uso general y especialidades(resistencia a altas temperaturas, ultra removible, alta adherencia y m\\xE1s.)\"))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(DivTercerTexto, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(DivPVC, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(TituloImpresion, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"b\", null, \"Impresion de etiquetas para diferentes procesos\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"ol\", {\n    className: \"esol\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Etiquetas textiles.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Etiquetas para el sector automotriz.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Etiquetas para el control de productos. \"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Etiquetas para el sector de manufactura.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(BeneficiosLista, null, \"Etiquetas para el sector salud.\"))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(IMGCER, {\n    src: \"/img/img.-pesta\\xF1a-etiquetas.webp\",\n    alt: \"Etiquetas Muestra\",\n    width: \"30%\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"div\", {\n    className: \"DivR\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(ContenedorD, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(link_default.a, {\n    href: \"/#renta\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTexDiv, {\n    className: \"b\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTex, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Renta!\")))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(link_default.a, {\n    href: \"/#reparacion\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTexDiv, {\n    className: \"b\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTex, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Reparaci\\xF3n!\")))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(link_default.a, {\n    href: \"/#venta\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTexDiv, {\n    className: \"b\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTex, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Venta!\")))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(link_default.a, {\n    href: \"/venta-de-accesorios-y-consumibles\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTexDiv, {\n    className: \"b\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTex, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Adquiera los accesorios y consumibles que necesita!\")))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(link_default.a, {\n    href: \"/DSD-venta-en-ruta\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTexDiv, {\n    className: \"b\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTex, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestra soluci\\xF3n \\\"DSD\\\" para venta en ruta!\")))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(link_default.a, {\n    href: \"/venta-fundas-handheld-impresora-portatil\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTexDivD, {\n    className: \"b\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTex, null, \"Contamos con fundas dise\\xF1adas a la medida para cumplir con sus necesidades.\", Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"br\", null), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Adquiera la protecci\\xF3n que sus equipos necesitan!\")))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(link_default.a, {\n    href: \"/impresion-credenciales-tarjetas-gafetes-pvc\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTexDivD, {\n    className: \"b\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(OvaTex, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de impresion de credenciales!\"))))))));\n};\n\n/* harmony default export */ var pestanas_TextoEtiquetas = (TextoEtiquetas_TextoEtiquetas);\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Modal.js + 23 modules\nvar Modal = __webpack_require__(\"zM5D\");\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Button.js\nvar Button = __webpack_require__(\"cWnB\");\n\n// EXTERNAL MODULE: ./static/PoliticaTex.js\nvar PoliticaTex = __webpack_require__(\"hL45\");\n\n// EXTERNAL MODULE: ./config/FormHandHeld.js\nvar FormHandHeld = __webpack_require__(\"gnZP\");\n\n// CONCATENATED MODULE: ./components/pestanas/FormEtiquetas.js\n\n\nfunction FormEtiquetas_EMOTION_STRINGIFIED_CSS_ERROR_() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\n\n\n\n\nvar FormEtiquetas_FormEtiquetas = function FormEtiquetas() {\n  var ContenedorGrid = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb14\"\n  } : undefined)(true ? {\n    name: \"qyt0rj\",\n    styles: \"width:50%;margin-top:2rem;@media (max-width: 995px){width:100%;margin-top:3rem;}\"\n  } : undefined);\n\n  var DivSello = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb13\"\n  } : undefined)(true ? {\n    name: \"15ev6lr\",\n    styles: \"display:flex;justify-content:center;padding-top:0rem\"\n  } : undefined);\n\n  var Img = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"img\", true ? {\n    target: \"efvklb12\"\n  } : undefined)(true ? {\n    name: \"fuo58s\",\n    styles: \"width:70%;height:90%;@media (max-width: 375px){width:70%;height:90%;}\"\n  } : undefined);\n\n  var TitDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb11\"\n  } : undefined)(true ? {\n    name: \"1h4mnaf\",\n    styles: \"text-align:center;width:100%;height:3rem\"\n  } : undefined);\n\n  var Tit = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"h1\", true ? {\n    target: \"efvklb10\"\n  } : undefined)(true ? {\n    name: \"15stcjl\",\n    styles: \"font-weight:bold;@media (max-width: 833px){font-size:35px!important;}@media (max-width: 550px){font-size:28px!important;}\"\n  } : undefined);\n\n  var Contenedor = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb9\"\n  } : undefined)(true ? {\n    name: \"9tzj48\",\n    styles: \"width:86%;margin:2rem auto\"\n  } : undefined);\n\n  var FormularioDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb8\"\n  } : undefined)(true ? {\n    name: \"1twpw2l\",\n    styles: \"width:100%;background-color:#0076c0;color:white;padding:10px;border-radius:0.5rem\"\n  } : undefined);\n\n  var PoliticasDiv = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb7\"\n  } : undefined)(true ? {\n    name: \"12dms0z\",\n    styles: \"margin-top:1rem;width:100%\"\n  } : undefined);\n\n  var DivTarjeta = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb6\"\n  } : undefined)(true ? {\n    name: \"c903m5\",\n    styles: \"margin:auto;width:100%;text-align:center\"\n  } : undefined);\n\n  var IMGTarjeta = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"img\", true ? {\n    target: \"efvklb5\"\n  } : undefined)(true ? {\n    name: \"r9y48n\",\n    styles: \"margin:auto!important;width:23%;@media (max-width: 500px){width:33%;}\"\n  } : undefined);\n\n  var IMGTarjetaD = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"img\", true ? {\n    target: \"efvklb4\"\n  } : undefined)(true ? {\n    name: \"1y7yo48\",\n    styles: \"cursor:pointer;width:37%;@media (max-width: 605px){width:38%;}@media (max-width: 500px){width:56%;}\"\n  } : undefined);\n\n  var IMGLogos = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"img\", true ? {\n    target: \"efvklb3\"\n  } : undefined)(true ? {\n    name: \"13jsrr9\",\n    styles: \"margin:auto!important;@media (max-width: 1500px){width:65%;}@media (max-width: 1100px){width:80%;}@media (max-width: 800px){height:8rem!important;}@media (max-width: 500px){height:5.5rem!important;}\"\n  } : undefined);\n\n  var TxtTarjeta = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"p\", true ? {\n    target: \"efvklb2\"\n  } : undefined)(true ? {\n    name: \"ddq6ti\",\n    styles: \"font-size:19px;font-weight:bold\"\n  } : undefined);\n\n  var DivIconos = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb1\"\n  } : undefined)(true ? {\n    name: \"1pzfeih\",\n    styles: \"display:flex;margin-top:4.5rem;justify-content:space-around;text-align:center\"\n  } : undefined);\n\n  var Icon = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"efvklb0\"\n  } : undefined)(true ? {\n    name: \"1d3w5wq\",\n    styles: \"width:100%\"\n  } : undefined);\n\n  var _useState = Object(react[\"useState\"])(false),\n      abiertoAnuncios = _useState[0],\n      cambiarAbiertoAnuncios = _useState[1];\n\n  var abrirModal = function abrirModal() {\n    cambiarAbiertoAnuncios(true);\n  };\n\n  var cerrarModal = function cerrarModal() {\n    cambiarAbiertoAnuncios(false);\n  };\n\n  var size = Object(useWindowSize[\"a\" /* default */])();\n\n  var _useState2 = Object(react[\"useState\"])(false),\n      abiertoModalT = _useState2[0],\n      cambiarAbiertoModal = _useState2[1];\n\n  var _useState3 = Object(react[\"useState\"])(false),\n      abiertoModalD = _useState3[0],\n      cambiarAbiertoModalD = _useState3[1];\n\n  var abrirModalT = function abrirModalT() {\n    cambiarAbiertoModal(true);\n  };\n\n  var cerrarModalT = function cerrarModalT() {\n    cambiarAbiertoModal(false);\n  };\n\n  var abrirModalD = function abrirModalD() {\n    cambiarAbiertoModalD(true);\n  };\n\n  var cerrarModalD = function cerrarModalD() {\n    cambiarAbiertoModalD(false);\n  };\n\n  return Object(emotion_react_browser_esm[\"a\" /* jsx */])(react_default.a.Fragment, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"span\", {\n    id: \"contacto\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(ContenedorGrid, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(DivSello, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"div\", {\n    className: \"DivImg\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Img, {\n    src: \"img/sellogarantia.webp\",\n    alt: \"Sello de Garantia Hand Held Solutions\"\n  }))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(TitDiv, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Tit, null, \"\\xA1Cotice ahora!\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Contenedor, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(FormularioDiv, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(FormHandHeld[\"a\" /* default */], null), Object(emotion_react_browser_esm[\"a\" /* jsx */])(PoliticasDiv, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"p\", {\n    className: \"politicas\"\n  }, \"Al dar click en el bot\\xF3n de enviar se esta aceptando nuestra\", \" \", Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"a\", {\n    onClick: abrirModal\n  }, \"pol\\xEDtica de privacidad.\")))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */], {\n    show: abiertoAnuncios,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Header, {\n    closeButton: true\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Title, null, \"Anuncios\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Body, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(PoliticaTex[\"a\" /* default */], null)), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Footer, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Button[\"a\" /* default */], {\n    variant: \"light\",\n    onClick: cerrarModal\n  }, \"Cerrar\")))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(DivIconos, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Icon, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(IMGTarjetaD, {\n    className: \"creicon\",\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1626461689/Nuevos%20Iconos/Copia_de_ICONOS_WEB_2_lwukep.png\",\n    alt: \"Envios Gratis\",\n    onClick: abrirModalT\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(TxtTarjeta, null, \"Envio GRATIS a toda la Republica Mexicana.\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Icon, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(IMGTarjetaD, {\n    className: \"creicon\",\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Mejores_precios_acordes_a_su_econom%C3%ADa_x5x6zl.png\",\n    alt: \"Icono Mejores Precios\",\n    onClick: abrirModalD\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(TxtTarjeta, null, \"Mejores precios acordes a su econom\\xEDa.\"))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"div\", null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(DivTarjeta, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(IMGTarjeta, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625241129/Iconos/Pago_con_tarjeta_250x250_kwdel3.png\",\n    alt: \"Icono_Pago\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(TxtTarjeta, null, \"\\xA1Aceptamos pago con tarjeta!\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(IMGLogos, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625761069/Iconos/metodos_de_pago_500x120_1_zkuoyc.png\",\n    alt: \"Imagen_LogoPago\"\n  })))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */], {\n    show: abiertoModalT,\n    onHide: cerrarModalT,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Header, {\n    closeButton: true\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Title, null, \"Env\\xEDo gratis a toda la Rep\\xFAblica Mexicana.\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Body, null, \"Contamos con env\\xEDo gratis a toda la Rep\\xFAblica Mexicana, nosotros le mandamos sin cargo adicional, las etiquetas que necesite. Impresi\\xF3n de etiquetas en poliolefina, polipropileno, poli\\xE9ster, poliamida y papel. Impresi\\xF3n de etiquetas capaces de resistir bajas y altas temperaturas.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Footer, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Button[\"a\" /* default */], {\n    variant: \"light\",\n    onClick: cerrarModal\n  }, \"Cerrar\"))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */], {\n    show: abiertoModalD,\n    onHide: cerrarModalD,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Header, {\n    closeButton: true\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Title, null, \"Mejores precios acordes a su econom\\xEDa.\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Body, null, \"En Hand Held Solutions, nos comprometemos a brindarle los mejores precios, para nosotros es importante que cuente con etiquetas que cubran sus necesidades a precios accesibles.\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Footer, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Button[\"a\" /* default */], {\n    variant: \"light\",\n    onClick: cerrarModalD\n  }, \"Cerrar\"))));\n};\n\n/* harmony default export */ var pestanas_FormEtiquetas = (FormEtiquetas_FormEtiquetas);\n// EXTERNAL MODULE: ./components/pestanas/BotonFundas.js\nvar BotonFundas = __webpack_require__(\"ch8d\");\n\n// EXTERNAL MODULE: ./components/pestanas/Ubicacion.js\nvar Ubicacion = __webpack_require__(\"eH4S\");\n\n// EXTERNAL MODULE: ./components/pestanas/ServiciosCredenciales.js\nvar ServiciosCredenciales = __webpack_require__(\"F+1s\");\n\n// EXTERNAL MODULE: ./components/pestanas/MapaDuns.js\nvar MapaDuns = __webpack_require__(\"Cl/n\");\n\n// EXTERNAL MODULE: ./components/layout/Footer.js\nvar Footer = __webpack_require__(\"cFkv\");\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Carousel.js + 5 modules\nvar Carousel = __webpack_require__(\"b+jL\");\n\n// CONCATENATED MODULE: ./pages/impresion-etiquetas.js\n\n\nfunction impresion_etiquetas_EMOTION_STRINGIFIED_CSS_ERROR_() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar impresion_etiquetas_Etiquetas = function Etiquetas() {\n  var ContenedorFlexa = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ecgcexk4\"\n  } : undefined)(true ? {\n    name: \"3o1miv\",\n    styles: \"display:flex;@media (max-width: 995px){display:block;}\"\n  } : undefined);\n\n  var ContenedorFlex = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ecgcexk3\"\n  } : undefined)(true ? {\n    name: \"o0r707\",\n    styles: \"display:flex;@media (max-width: 700px){display:block;}\"\n  } : undefined);\n\n  var ContenedorBotona = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"div\", true ? {\n    target: \"ecgcexk2\"\n  } : undefined)(true ? {\n    name: \"udt92q\",\n    styles: \"@media (max-width: 995px){display:block;}\"\n  } : undefined);\n\n  var ImgModal = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"img\", true ? {\n    target: \"ecgcexk1\"\n  } : undefined)(true ? {\n    name: \"16na1d5\",\n    styles: \"max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important\"\n  } : undefined);\n\n  var Puntero = Object(emotion_styled_base_browser_esm[\"a\" /* default */])(\"a\", true ? {\n    target: \"ecgcexk0\"\n  } : undefined)(true ? {\n    name: \"e0dnmk\",\n    styles: \"cursor:pointer\"\n  } : undefined);\n\n  var Redirigir = function Redirigir(e) {\n    e.preventDefault();\n    cambiarAbiertoAnuncios(false);\n    document.location.href = \"/#reparacion\";\n  };\n\n  var _useState = Object(react[\"useState\"])(false),\n      abiertoAnuncios = _useState[0],\n      cambiarAbiertoAnuncios = _useState[1];\n\n  var _useState2 = Object(react[\"useState\"])(true),\n      abiertoCupon = _useState2[0],\n      cambiarAbiertoCupon = _useState2[1];\n\n  var cerrarModal = function cerrarModal() {\n    cambiarAbiertoAnuncios(false);\n  }; // const cerrarModalCupon = () => {\n  //   cambiarAbiertoCupon(false);\n  //   setTimeout(() => {\n  //     cambiarAbiertoAnuncios(true);\n  //   }, 6000);\n  // };\n\n\n  Object(react[\"useEffect\"])(function () {\n    setTimeout(function () {\n      cambiarAbiertoAnuncios(true);\n    }, 6000);\n  }, []);\n  return Object(emotion_react_browser_esm[\"a\" /* jsx */])(react_default.a.Fragment, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(head_default.a, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"html\", {\n    lang: \"es\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"title\", null, \"Impresi\\xF3n de Etiquetas | Etiquetas Adhesivas | Fabricaci\\xF3n de Etiquetas\"), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"meta\", {\n    name: \"description\",\n    content: \"Somos especialistas en la impresi\\xF3n de etiquetas. Impresi\\xF3n t\\xE9rmico directo y transferencia t\\xE9rmica. Impresi\\xF3n de etiquetas en poliolefina, polipropileno, poli\\xE9ster, poliamida y papel. Impresi\\xF3n de etiquetas para el sector automotriz, control de productos, manufactura, salud, textil y m\\xE1s. Impresi\\xF3n de etiquetas con adhesivos permanentes, removibles y de alta adherencia. Impresi\\xF3n de etiquetas capaces de resistir bajas y altas temperaturas.\\xA1LLame ahora, asistencia inmediata! \"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"/logo-copia.png\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"meta\", {\n    name: \"keywords\",\n    content: \"Impresi\\xF3n, etiquetas, adhesivas, fabricacion, policarbonato, PET, holograma de seguridad, credencializaci\\xF3n, tarjetas pl\\xE1sticas, elaboraci\\xF3n, dise\\xF1o, impresiones, Certificado, covid, c\\xF3digo QR, empresas, instituciones educativas, asociaciones, eventos, control de acceso, materiales resistentes, materiales duraderos, a domicilio, cotizaci\\xF3n, identificaci\\xF3n.\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"meta\", {\n    name: \"robots\",\n    content: \"index,follow,all\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"meta\", {\n    property: \"og:title\",\n    content: \"Hand held para Inventarios | Renta de PDA | Arrendamiento de HandHelds | Terminales Port\\xE1tiles\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"meta\", {\n    property: \"og:image\",\n    content: \"https://i.ibb.co/42K3Zdn/logo-copia.png\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"meta\", {\n    property: \"og:description\",\n    content: \"Somos especialistas en la impresi\\xF3n de etiquetas. Impresi\\xF3n t\\xE9rmico directo y transferencia t\\xE9rmica. Impresi\\xF3n de etiquetas en poliolefina, polipropileno, poli\\xE9ster, poliamida y papel. Impresi\\xF3n de etiquetas para el sector automotriz, control de productos, manufactura, salud, textil y m\\xE1s. Impresi\\xF3n de etiquetas con adhesivos permanentes, removibles y de alta adherencia. Impresi\\xF3n de etiquetas capaces de resistir bajas y altas temperaturas.\\xA1LLame ahora, asistencia inmediata!\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"link\", {\n    rel: \"icon\",\n    type: \"image/png\",\n    sizes: \"160x99\",\n    href: \"https://i.ibb.co/42K3Zdn/logo-copia.png\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://fonts.gstatic.com\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Raleway&display=swap\",\n    rel: \"stylesheet\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"script\", {\n    async: true,\n    src: \"https://www.googletagmanager.com/gtag/js?id=AW-728249895\"\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: \"window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'AW-728249895');\"\n    }\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"noscript\", {\n    dangerouslySetInnerHTML: {\n      __html: \"<iframe src=\\\"https://www.googletagmanager.com/ns.html?id=GTM-KXHWDC2\\\"\\n          height=\\\"0\\\" width=\\\"0\\\" style=\\\"display:none;visibility:hidden\\\"></iframe>\"\n    }\n  }), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Header[\"a\" /* default */], null), Object(emotion_react_browser_esm[\"a\" /* jsx */])(pestanas_EtiquetasH, null), Object(emotion_react_browser_esm[\"a\" /* jsx */])(ContenedorFlexa, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(pestanas_TextoEtiquetas, null), Object(emotion_react_browser_esm[\"a\" /* jsx */])(pestanas_FormEtiquetas, null)), Object(emotion_react_browser_esm[\"a\" /* jsx */])(ContenedorBotona, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(BotonFundas[\"a\" /* default */], null)), Object(emotion_react_browser_esm[\"a\" /* jsx */])(ContenedorFlex, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Ubicacion[\"a\" /* default */], null), Object(emotion_react_browser_esm[\"a\" /* jsx */])(ServiciosCredenciales[\"a\" /* default */], null)), Object(emotion_react_browser_esm[\"a\" /* jsx */])(MapaDuns[\"a\" /* default */], null), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Footer[\"a\" /* default */], null), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */], {\n    show: abiertoAnuncios,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura ppp\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Header, {\n    closeButton: true\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Title, null, \"Noticias\")), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Body, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */], null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/Promoci\\xF3n_mc9090_funcional_po83sk.webp\",\n    alt: \"Hand Held MC9090\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/evolis_adikio.webp\",\n    alt: \"evolis adikio\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/evolis_impresoras.webp\",\n    alt: \"evolis impresoras\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/impresora_IMZ320.webp\",\n    alt: \"Renta de Impresora IMZ320\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/Promoci\\xF3n_MC9190_sricb6.webp\",\n    alt: \"Hand Held MC9190\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/IMAGEN_ZEBRA_BANNER_800X500_lyqnpu.webp\",\n    alt: \"Zebra Hand Held Impresoras Lectores\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/Copia_de_promoci\\xF3n_redimensi\\xF3n_web_tgvrfp.webp\",\n    alt: \"Hand Held Intermec Honeywell CN51\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Puntero, {\n    onClick: Redirigir\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/Copia_de_p\\xF3lizas_reparaci\\xF3n_sg0xim.webp\",\n    alt: \"Polizas de reparacion handheld impresoras de etiquetas y lectores\"\n  }))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(\"a\", {\n    className: \"clicks\",\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098014/banner/publicaci%C3%B3n_nuevo_lanzamiento_ec50_y_ec55_fmwnhz.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/Copia_de_ec50_y_ec55_en_web_kyx6mp.webp\",\n    alt: \"Zebra EC50 EC55\"\n  }))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/IMAGEN_ZEBRA_BANNER_800X500_vr6p1d.webp\",\n    alt: \"Zebra Hand Held Impresoras Lectores\"\n  })), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Puntero, {\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098012/banner/EDA61K_FB_o2obod.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/EDA61K_WEB_luqnfs.webp\",\n    alt: \"Hand Held EDA61K Zebra\"\n  }))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Carousel[\"a\" /* default */].Item, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Puntero, {\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098010/banner/ck65_FB_1_rj8z3u.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, Object(emotion_react_browser_esm[\"a\" /* jsx */])(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/CK65_WEB_l9akm3.webp\",\n    alt: \"Hand Held CK65 Zebra\"\n  }))))), Object(emotion_react_browser_esm[\"a\" /* jsx */])(Modal[\"a\" /* default */].Footer, null, Object(emotion_react_browser_esm[\"a\" /* jsx */])(Button[\"a\" /* default */], {\n    variant: \"light\",\n    onClick: cerrarModal\n  }, \"Cerrar\"))));\n};\n\n/* harmony default export */ var impresion_etiquetas = __webpack_exports__[\"default\"] = (impresion_etiquetas_Etiquetas);\n\n/***/ })\n\n},[[\"VlWf\",0,2,1,3,4,5,10]]]);","inputSourceMap":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\node_modules\\next\\dist\\build\\webpack\\loaders\\next-client-pages-loader.js?page=%2Fimpresion-etiquetas&absolutePagePath=private-next-pages%2Fimpresion-etiquetas.js!","C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\node_modules\\next\\dist\\build\\webpack\\loaders\\next-babel-loader.js??ref--4!C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\components\\pestanas\\EtiquetasH.js","C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\node_modules\\next\\dist\\build\\webpack\\loaders\\next-babel-loader.js??ref--4!C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\components\\pestanas\\TextoEtiquetas.js","C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\node_modules\\next\\dist\\build\\webpack\\loaders\\next-babel-loader.js??ref--4!C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\components\\pestanas\\FormEtiquetas.js","C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\node_modules\\next\\dist\\build\\webpack\\loaders\\next-babel-loader.js??ref--4!C:\\Users\\USER\\Desktop\\nuevo codigo HHS\\pages\\impresion-etiquetas.js"],"names":[],"mappings":"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","file":"x","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/impresion-etiquetas\",\n        function () {\n          return require(\"private-next-pages/impresion-etiquetas.js\");\n        }\n      ]);\n    ","import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React from \"react\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar EtiquetasH = function EtiquetasH() {\n  var TitImgDiv = _styled(\"div\", true ? {\n    target: \"e15xwoo29\"\n  } : {\n    target: \"e15xwoo29\",\n    label: \"TitImgDiv\"\n  })(true ? {\n    name: \"z8v2at\",\n    styles: \"width:100%!important;display:flex;@media (max-width: 995px){margin-bottom:7rem;}\"\n  } : {\n    name: \"z8v2at\",\n    styles: \"width:100%!important;display:flex;@media (max-width: 995px){margin-bottom:7rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var MitadIzq = _styled(\"div\", true ? {\n    target: \"e15xwoo28\"\n  } : {\n    target: \"e15xwoo28\",\n    label: \"MitadIzq\"\n  })(true ? {\n    name: \"1t29t6p\",\n    styles: \"width:50%\"\n  } : {\n    name: \"1t29t6p\",\n    styles: \"width:50%\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var MitadDer = _styled(\"div\", true ? {\n    target: \"e15xwoo27\"\n  } : {\n    target: \"e15xwoo27\",\n    label: \"MitadDer\"\n  })(true ? {\n    name: \"1263e22\",\n    styles: \"width:50%;text-align:center;margin-right:0px\"\n  } : {\n    name: \"1263e22\",\n    styles: \"width:50%;text-align:center;margin-right:0px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var LemaDiv = _styled(\"div\", true ? {\n    target: \"e15xwoo26\"\n  } : {\n    target: \"e15xwoo26\",\n    label: \"LemaDiv\"\n  })(true ? {\n    name: \"19hccin\",\n    styles: \"background-color:#0076c0;width:55%;min-height:40px;text-align:center;margin-top:3rem;margin-left:8rem;@media (max-width: 1100px){margin-left:7rem;align-items:center;display:grid;margin-top:1rem;}@media (max-width: 1008px){margin-left:6rem;}@media (max-width: 782px){margin-left:5.2rem;}@media (max-width: 542px){margin-left:4.2rem;}@media (max-width: 456px){margin-left:2.8rem;}\"\n  } : {\n    name: \"19hccin\",\n    styles: \"background-color:#0076c0;width:55%;min-height:40px;text-align:center;margin-top:3rem;margin-left:8rem;@media (max-width: 1100px){margin-left:7rem;align-items:center;display:grid;margin-top:1rem;}@media (max-width: 1008px){margin-left:6rem;}@media (max-width: 782px){margin-left:5.2rem;}@media (max-width: 542px){margin-left:4.2rem;}@media (max-width: 456px){margin-left:2.8rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Lema = _styled(\"h1\", true ? {\n    target: \"e15xwoo25\"\n  } : {\n    target: \"e15xwoo25\",\n    label: \"Lema\"\n  })(true ? {\n    name: \"qx9bvq\",\n    styles: \"color:white;font-weight:bold;font-size:20px;padding-top:8px;@media (max-width: 1100px){font-size:18px;}@media (max-width: 1008px){font-size:16px;}@media (max-width: 781px){font-size:14px;}@media (max-width: 698px){font-size:12px;}@media (max-width: 620px){font-size:11px;}@media (max-width: 542px){font-size:9px;}@media (max-width: 456px){font-size:7px;}\"\n  } : {\n    name: \"qx9bvq\",\n    styles: \"color:white;font-weight:bold;font-size:20px;padding-top:8px;@media (max-width: 1100px){font-size:18px;}@media (max-width: 1008px){font-size:16px;}@media (max-width: 781px){font-size:14px;}@media (max-width: 698px){font-size:12px;}@media (max-width: 620px){font-size:11px;}@media (max-width: 542px){font-size:9px;}@media (max-width: 456px){font-size:7px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var RDHDiv = _styled(\"div\", true ? {\n    target: \"e15xwoo24\"\n  } : {\n    target: \"e15xwoo24\",\n    label: \"RDHDiv\"\n  })(true ? {\n    name: \"1ereyfd\",\n    styles: \"width:100%;margin-left:3rem;margin-top:2.5rem;border-left:8px solid #0076c0;height:125px;border-radius:5px 5px 5px 5px;@media (max-width: 2500px){margin-left:1.8rem;height:212px;}@media (max-width: 1816px){height:390px;}@media (max-width: 1009px){height:230px;}@media (max-width: 873px){height:171px;}@media (max-width: 782px){margin-left:1.8rem;}@media (max-width: 456px){margin-left:0.8rem;}\"\n  } : {\n    name: \"1ereyfd\",\n    styles: \"width:100%;margin-left:3rem;margin-top:2.5rem;border-left:8px solid #0076c0;height:125px;border-radius:5px 5px 5px 5px;@media (max-width: 2500px){margin-left:1.8rem;height:212px;}@media (max-width: 1816px){height:390px;}@media (max-width: 1009px){height:230px;}@media (max-width: 873px){height:171px;}@media (max-width: 782px){margin-left:1.8rem;}@media (max-width: 456px){margin-left:0.8rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var RDHTit = _styled(\"h1\", true ? {\n    target: \"e15xwoo23\"\n  } : {\n    target: \"e15xwoo23\",\n    label: \"RDHTit\"\n  })(true ? {\n    name: \"1m21udg\",\n    styles: \"width:90%!important;padding-left:1rem;font-weight:bold;font-size:60px;border-bottom:8px solid #0076c0;border-radius:0px 0px 5px;@media (max-width: 1825px){font-size:65px;width:73%;}@media (max-width: 1739px){font-size:60px;}@media (max-width: 1650px){font-size:60px;width:78%;}@media (max-width: 1563px){width:83%;}@media (max-width: 1470px){font-size:55px;width:83%;}@media (max-width: 1344px){font-size:50px;}@media (max-width: 1215px){width:86%;}@media (max-width: 1149px){font-size:42px;width:83%;}@media (max-width: 1008px){font-size:36px;}@media (max-width: 873px){font-size:32px;}@media (max-width: 781px){font-size:28px;margin-left:-0.1rem;}@media (max-width: 698px){font-size:24px;}@media (max-width: 620px){font-size:21px;}@media (max-width: 542px){font-size:21px;padding-left:0.5rem;}@media (max-width: 512px){font-size:25px;}\"\n  } : {\n    name: \"1m21udg\",\n    styles: \"width:90%!important;padding-left:1rem;font-weight:bold;font-size:60px;border-bottom:8px solid #0076c0;border-radius:0px 0px 5px;@media (max-width: 1825px){font-size:65px;width:73%;}@media (max-width: 1739px){font-size:60px;}@media (max-width: 1650px){font-size:60px;width:78%;}@media (max-width: 1563px){width:83%;}@media (max-width: 1470px){font-size:55px;width:83%;}@media (max-width: 1344px){font-size:50px;}@media (max-width: 1215px){width:86%;}@media (max-width: 1149px){font-size:42px;width:83%;}@media (max-width: 1008px){font-size:36px;}@media (max-width: 873px){font-size:32px;}@media (max-width: 781px){font-size:28px;margin-left:-0.1rem;}@media (max-width: 698px){font-size:24px;}@media (max-width: 620px){font-size:21px;}@media (max-width: 542px){font-size:21px;padding-left:0.5rem;}@media (max-width: 512px){font-size:25px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ServicioDiv = _styled(\"div\", true ? {\n    target: \"e15xwoo22\"\n  } : {\n    target: \"e15xwoo22\",\n    label: \"ServicioDiv\"\n  })(true ? {\n    name: \"494tty\",\n    styles: \"width:90%!important;margin-left:1rem;margin-top:1rem;background-color:#0076c0;border-radius:0px 50px 50px 0px;@media (max-width: 733px){width:82%;}@media (max-width: 542px){margin-left:0.5rem;}@media (max-width: 512px){width:79%;}\"\n  } : {\n    name: \"494tty\",\n    styles: \"width:90%!important;margin-left:1rem;margin-top:1rem;background-color:#0076c0;border-radius:0px 50px 50px 0px;@media (max-width: 733px){width:82%;}@media (max-width: 542px){margin-left:0.5rem;}@media (max-width: 512px){width:79%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ServicioDivTxt = _styled(\"p\", true ? {\n    target: \"e15xwoo21\"\n  } : {\n    target: \"e15xwoo21\",\n    label: \"ServicioDivTxt\"\n  })(true ? {\n    name: \"1fadznx\",\n    styles: \"font-size:30px;padding-left:1rem;color:white;padding:5px;@media (max-width: 1825px){font-size:30px;}@media (max-width: 1470px){font-size:26px;}@media (max-width: 1344px){font-size:23px;}@media (max-width: 1100px){font-size:21px;}@media (max-width: 1008px){font-size:19px;}@media (max-width: 873px){font-size:16px;}@media (max-width: 733px){font-size:15px;}@media (max-width: 542px){font-size:13px;}@media (max-width: 512px){font-size:10px;padding-left:0.5rem;}@media (max-width: 456px){font-size:11px;}@media (max-width: 415px){font-size:9.5px;}@media (max-width: 350px){font-size:8.5px;}\"\n  } : {\n    name: \"1fadznx\",\n    styles: \"font-size:30px;padding-left:1rem;color:white;padding:5px;@media (max-width: 1825px){font-size:30px;}@media (max-width: 1470px){font-size:26px;}@media (max-width: 1344px){font-size:23px;}@media (max-width: 1100px){font-size:21px;}@media (max-width: 1008px){font-size:19px;}@media (max-width: 873px){font-size:16px;}@media (max-width: 733px){font-size:15px;}@media (max-width: 542px){font-size:13px;}@media (max-width: 512px){font-size:10px;padding-left:0.5rem;}@media (max-width: 456px){font-size:11px;}@media (max-width: 415px){font-size:9.5px;}@media (max-width: 350px){font-size:8.5px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMG = _styled(\"img\", true ? {\n    target: \"e15xwoo20\"\n  } : {\n    target: \"e15xwoo20\",\n    label: \"IMG\"\n  })(true ? {\n    name: \"9ux7i4\",\n    styles: \"width:85%;height:90%;margin-top:1rem;border-radius:15px;@media (max-width: 510px){margin-top:3.5rem;height:60%;}@media (max-width: 400px){margin-top:5rem;}\"\n  } : {\n    name: \"9ux7i4\",\n    styles: \"width:85%;height:90%;margin-top:1rem;border-radius:15px;@media (max-width: 510px){margin-top:3.5rem;height:60%;}@media (max-width: 400px){margin-top:5rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(TitImgDiv, null, ___EmotionJSX(MitadIzq, null, ___EmotionJSX(LemaDiv, null, ___EmotionJSX(Lema, null, \"\\xA1F\\xC1CIL, R\\xC1PIDO Y FLEXIBLE!\")), ___EmotionJSX(RDHDiv, null, ___EmotionJSX(RDHTit, null, \"Impresi\\xF3n de etiquetas\"), ___EmotionJSX(ServicioDiv, null, ___EmotionJSX(\"div\", {\n    className: \"sd\"\n  }, ___EmotionJSX(ServicioDivTxt, null, \"Somos especialistas en la impresion de etiquetas. Contamos con impresion termico directo y transferencia termica. Etiquetas de alta durabilidad y resistencia, adecuadas para cada giro comercial. Impresion de calidad en materiales sinteticos y papel.\"))))), ___EmotionJSX(MitadDer, null, ___EmotionJSX(IMG, {\n    src: \"/img/img.-pesta\\xF1a-etiqeutas-3.webp\",\n    alt: \"Renta de Handhelds\"\n  }))));\n};\n\nexport default EtiquetasH;","import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar TextoEtiquetas = function TextoEtiquetas() {\n  var Contenedor = _styled(\"div\", true ? {\n    target: \"ej1y3l919\"\n  } : {\n    target: \"ej1y3l919\",\n    label: \"Contenedor\"\n  })(true ? {\n    name: \"yb3z0d\",\n    styles: \"width:50%;@media (max-width: 995px){width:100%;}\"\n  } : {\n    name: \"yb3z0d\",\n    styles: \"width:50%;@media (max-width: 995px){width:100%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivTresImgText = _styled(\"div\", true ? {\n    target: \"ej1y3l918\"\n  } : {\n    target: \"ej1y3l918\",\n    label: \"DivTresImgText\"\n  })(true ? {\n    name: \"1j15a8y\",\n    styles: \"display:flex;margin-top:7rem;@media (max-width: 1900px){margin-top:1rem;}@media (max-width: 1816px){margin-top:2rem;}@media (max-width: 1619px){margin-top:3rem;}\"\n  } : {\n    name: \"1j15a8y\",\n    styles: \"display:flex;margin-top:7rem;@media (max-width: 1900px){margin-top:1rem;}@media (max-width: 1816px){margin-top:2rem;}@media (max-width: 1619px){margin-top:3rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivTresImgTextSinFlex = _styled(\"div\", true ? {\n    target: \"ej1y3l917\"\n  } : {\n    target: \"ej1y3l917\",\n    label: \"DivTresImgTextSinFlex\"\n  })(true ? {\n    name: \"1iqrkxi\",\n    styles: \"display:grid;margin:0px auto\"\n  } : {\n    name: \"1iqrkxi\",\n    styles: \"display:grid;margin:0px auto\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Beneficios = _styled(\"ul\", true ? {\n    target: \"ej1y3l916\"\n  } : {\n    target: \"ej1y3l916\",\n    label: \"Beneficios\"\n  })(true ? {\n    name: \"wn0hft\",\n    styles: \"font-size:20px;text-align:left;margin-left:25px;display:grid;align-items:center;@media (max-width: 1750px){font-size:20px;}@media (max-width: 1400px){width:100%;height:100%;padding-top:2rem;}@media (max-width: 995px){width:90%;height:100%;}@media (max-width: 530px){font-size:15px;}\"\n  } : {\n    name: \"wn0hft\",\n    styles: \"font-size:20px;text-align:left;margin-left:25px;display:grid;align-items:center;@media (max-width: 1750px){font-size:20px;}@media (max-width: 1400px){width:100%;height:100%;padding-top:2rem;}@media (max-width: 995px){width:90%;height:100%;}@media (max-width: 530px){font-size:15px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var BeneficiosLista = _styled(\"li\", true ? {\n    target: \"ej1y3l915\"\n  } : {\n    target: \"ej1y3l915\",\n    label: \"BeneficiosLista\"\n  })(true ? {\n    name: \"thhj3o\",\n    styles: \"list-style:outside;align-items:center;font-size:20px;@media (max-width: 530px){font-size:15px;}\"\n  } : {\n    name: \"thhj3o\",\n    styles: \"list-style:outside;align-items:center;font-size:20px;@media (max-width: 530px){font-size:15px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGTC = _styled(\"div\", true ? {\n    target: \"ej1y3l914\"\n  } : {\n    target: \"ej1y3l914\",\n    label: \"IMGTC\"\n  })(true ? {\n    name: \"1fu3lmy\",\n    styles: \"width:52%;height:70%;margin-top:0px;padding-left:2rem;border-radius:15px;@media (max-width: 1786px){width:65%;}@media (max-width: 1400px){width:100%;height:100%;text-align:center;}@media (max-width: 530px){padding-left:0px;}\"\n  } : {\n    name: \"1fu3lmy\",\n    styles: \"width:52%;height:70%;margin-top:0px;padding-left:2rem;border-radius:15px;@media (max-width: 1786px){width:65%;}@media (max-width: 1400px){width:100%;height:100%;text-align:center;}@media (max-width: 530px){padding-left:0px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGET = _styled(\"div\", true ? {\n    target: \"ej1y3l913\"\n  } : {\n    target: \"ej1y3l913\",\n    label: \"IMGET\"\n  })(true ? {\n    name: \"1n7ivv\",\n    styles: \"max-width:500px;height:70%;margin-top:0px;padding-left:2rem;border-radius:15px;img{max-width:inherit;}\"\n  } : {\n    name: \"1n7ivv\",\n    styles: \"max-width:500px;height:70%;margin-top:0px;padding-left:2rem;border-radius:15px;img{max-width:inherit;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivSegundoTexto = _styled(\"div\", true ? {\n    target: \"ej1y3l912\"\n  } : {\n    target: \"ej1y3l912\",\n    label: \"DivSegundoTexto\"\n  })(true ? {\n    name: \"njtk4w\",\n    styles: \"width:100%;padding:2rem;margin-top:3rem;display:contents;@media (max-width: 1400px){margin-top:-212px;}@media (max-width: 530px){padding:1rem;}\"\n  } : {\n    name: \"njtk4w\",\n    styles: \"width:100%;padding:2rem;margin-top:3rem;display:contents;@media (max-width: 1400px){margin-top:-212px;}@media (max-width: 530px){padding:1rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivTercerTexto = _styled(\"div\", true ? {\n    target: \"ej1y3l911\"\n  } : {\n    target: \"ej1y3l911\",\n    label: \"DivTercerTexto\"\n  })(true ? {\n    name: \"edm7mf\",\n    styles: \"width:100%;padding-left:2rem;display:flex;@media (max-width: 830px){padding:1rem;flex-direction:column;}\"\n  } : {\n    name: \"edm7mf\",\n    styles: \"width:100%;padding-left:2rem;display:flex;@media (max-width: 830px){padding:1rem;flex-direction:column;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TextoSegundoDiv = _styled(\"p\", true ? {\n    target: \"ej1y3l910\"\n  } : {\n    target: \"ej1y3l910\",\n    label: \"TextoSegundoDiv\"\n  })(true ? {\n    name: \"j1gtqd\",\n    styles: \"font-size:20px;padding:2rem;@media (max-width: 530px){font-size:15px;padding:15px;}\"\n  } : {\n    name: \"j1gtqd\",\n    styles: \"font-size:20px;padding:2rem;@media (max-width: 530px){font-size:15px;padding:15px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TextoTercerDiv = _styled(\"div\", true ? {\n    target: \"ej1y3l99\"\n  } : {\n    target: \"ej1y3l99\",\n    label: \"TextoTercerDiv\"\n  })(true ? {\n    name: \"14dnk7q\",\n    styles: \"font-size:20px;display:grid;align-items:center;@media (max-width: 530px){font-size:15px;}\"\n  } : {\n    name: \"14dnk7q\",\n    styles: \"font-size:20px;display:grid;align-items:center;@media (max-width: 530px){font-size:15px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvRXRpcXVldGFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9KbUMiLCJmaWxlIjoiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxudWV2byBjb2RpZ28gSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcVGV4dG9FdGlxdWV0YXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XHJcbmltcG9ydCB1c2VXaW5kb3dTaXplIGZyb20gXCIuLi8uLi9ob29rcy91c2VXaW5kb3dTaXplXCI7XHJcblxyXG5jb25zdCBUZXh0b0V0aXF1ZXRhcyA9ICgpID0+IHtcclxuICBjb25zdCBDb250ZW5lZG9yID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA1MCU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRyZXNJbWdUZXh0ID0gc3R5bGVkLmRpdmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXJnaW4tdG9wOiA3cmVtO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTAwcHgpIHtcclxuICAgICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTgxNnB4KSB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE2MTlweCkge1xyXG4gICAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRyZXNJbWdUZXh0U2luRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICBgO1xyXG5cclxuICBjb25zdCBCZW5lZmljaW9zID0gc3R5bGVkLnVsYFxyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBwYWRkaW5nLXRvcDogMnJlbTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgQmVuZWZpY2lvc0xpc3RhID0gc3R5bGVkLmxpYFxyXG4gICAgbGlzdC1zdHlsZTogb3V0c2lkZTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUQyA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNTIlO1xyXG4gICAgaGVpZ2h0OiA3MCU7XHJcbiAgICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzg2cHgpIHtcclxuICAgICAgd2lkdGg6IDY1JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTMwcHgpIHtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HRVQ9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXgtd2lkdGg6NTAwcHg7XHJcbiAgICBoZWlnaHQ6IDcwJTtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcblxyXG4gICAgaW1ne1xyXG4gICAgICBtYXgtd2lkdGg6aW5oZXJpdDtcclxuICAgICAgXHJcbiAgICB9XHJcbiAgYDtcclxuXHJcblxyXG4gIGNvbnN0IERpdlNlZ3VuZG9UZXh0byA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgZGlzcGxheTpjb250ZW50cztcclxuICAgIFxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xyXG4gICAgICBtYXJnaW4tdG9wOiAtMjEycHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2VGVyY2VyVGV4dG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcclxuICAgIH1cclxuICBgO1xyXG5cclxuXHJcblxyXG4gIGNvbnN0IFRleHRvU2VndW5kb0RpdiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTMwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRleHRvVGVyY2VyRGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2UFZDID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0dWxvSW1wcmVzaW9uID0gc3R5bGVkLmgyYFxyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0dWxvSW1wcmVzaW9uRG9zID0gc3R5bGVkLmgyYFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyLjVyZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgT3ZhVGV4RGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA3OCU7XHJcbiAgICBoZWlnaHQ6IDQuNXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IE92YVRleERpdkQgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDc4JTtcclxuXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NmMwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBPdmFUZXggPSBzdHlsZWQucGBcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE1MDBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNTVweCkge1xyXG4gICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGV4dERpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IENvbnRlbmVkb3JEID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdDRVIgPSBzdHlsZWQuaW1nYFxyXG4gICAgYm9yZGVyLXJhZGl1czoxNXB4O1xyXG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICAgIG1hcmdpbi10b3A6NXJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTA3MHB4KSB7XHJcbiAgICAgIHdpZHRoOiA0NSUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IHNpemUgPSB1c2VXaW5kb3dTaXplKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGVuZWRvcj5cclxuICAgICAgICB7c2l6ZSA+IDE0MDAgPyAoXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIDxEaXZUcmVzSW1nVGV4dD5cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgICA8QmVuZWZpY2lvcz5cclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxoMz5cclxuICAgICAgICAgICAgICAgICAgPGI+SW1wcmVzaW9uIGRlIGV0aXF1ZXRhcyBjb24gZGlmZXJlbnRlcyB0aXBvcyBkZSBhZGhlc2l2b3M6PC9iPlxyXG4gICAgICAgICAgICAgICAgPC9oMz5cclxuICAgICAgICAgICAgICA8L2Rpdj4gIFxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBQZXJtYW5lbnRlLlxyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBSZW1vdmlibGUuXHJcbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICAgIERlIGFsdGEgYWRoZXJlbmNpYS5cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgQWNyw61saWNvLntcIiBcIn1cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgPC9CZW5lZmljaW9zPlxyXG4gICAgICAgICAgICA8SU1HRVQ+XHJcbiAgICAgICAgICAgICAgPGltZyBzcmM9XCIvaW1nL2ltZy4tcGVzdGHDsWEtZXRpcXVldGFzLTIud2VicFwiIGFsdD1cIkV0aXF1ZXRhc1wiIHdpZHRoPVwiNTAwcHhcIi8+XHJcbiAgICAgICAgICAgIDwvSU1HRVQ+XHJcbiAgICAgICAgICA8L0RpdlRyZXNJbWdUZXh0PlxyXG4gICAgICAgICkgOiAoXHJcbiAgICAgICAgICA8RGl2VHJlc0ltZ1RleHRTaW5GbGV4PlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDxCZW5lZmljaW9zPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2FyYW5cIj5cclxuICAgICAgICAgICAgICAgIDxoMz5cclxuICAgICAgICAgICAgICAgICAgPGI+SW1wcmVzacOzbiBkZSBldGlxdWV0YXMgY29uIGRpZmVyZW50ZXMgdGlwb3MgZGUgYWRoZXNpdm9zPC9iPlxyXG4gICAgICAgICAgICAgICAgPC9oMz5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgUGVybWFuZW50ZS5cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgUmVtb3ZpYmxlLlxyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBEZSBhbHRhIGFkaGVyZW5jaWEuXHJcbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICAgIEFjcsOtbGljb1xyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICA8L0JlbmVmaWNpb3M+XHJcblxyXG4gICAgICAgICAgICA8SU1HRVQ+XHJcbiAgICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW1ncmVzY2VcIlxyXG4gICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9pbWcuLXBlc3Rhw7FhLWV0aXF1ZXRhcy0yLndlYnBcIlxyXG4gICAgICAgICAgICAgICAgYWx0PVwiRXRpcXVldGFzXCJcclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L0lNR0VUPlxyXG5cclxuICAgICAgICAgIDwvRGl2VHJlc0ltZ1RleHRTaW5GbGV4PlxyXG4gICAgICAgICl9XHJcblxyXG4gICAgICAgIDxEaXZTZWd1bmRvVGV4dG8+XHJcbiAgICAgICAgICA8VGV4dG9TZWd1bmRvRGl2PlxyXG4gICAgICAgICAgPFRpdHVsb0ltcHJlc2lvbj5cclxuICAgICAgICAgIDxiPkltcHJlc2lvbiBkZSBldGlxdWV0YXMgZW4gbG9zIG1lam9yZXMgbWF0ZXJpYWxlcyBjb21vIGxvIHNvbjo8L2I+XHJcbiAgICAgICAgICA8L1RpdHVsb0ltcHJlc2lvbj5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saW9sZWZpbmE6IEFkZWN1YWRhIHBhcmEgZXRpcXVldGFzIGNvbG9jYWRhcyBlbiBzdXBlcmZpY2llcyBhc3BlcmFzIGUgaXJyZWd1bGFyZXM8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saXByb3BpbGVubzogQWRlY3VhZG8gcGFyYSBldGlxdWV0YXIgem9uYXMgY3VydmFzIGUgaXJyZWd1bGFyZXMsIGNhcGF6IGRlIHNvcG9ydGFyIGJhamFzIHRlbXBlcmF0dXJhcy48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWVzdGVyOiBBbHRhIHJlc2l0ZW5jaWEgeSBkdXJhYmlsaWRhZCA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWFtaWRhOiBBZGVjdWFkYSBwYXJhIGV0aXF1ZXRhcyBjYXBhY2VzIGRlIHJlc2lzdGlyIGFsdGFzIHRlbXBlcmF0dXJhcy48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWFtaWRhOiBBZGVjdWFkYSBwYXJhIGV0aXF1ZXRhcyBjYXBhY2VzIGRlIHJlaXNpc3RpciBhbHRhcyB0ZW1wZXJhdHVyYXM8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UGFwZWw6IEFkZWN1YWRvIHBhcmEgaW1wcmVzaW9uIGRlIGV0aXF1ZXRhcyBkZSB1c28gZ2VuZXJhbCB5IGVzcGVjaWFsaWRhZGVzKHJlc2lzdGVuY2lhIGEgYWx0YXMgdGVtcGVyYXR1cmFzLCB1bHRyYSByZW1vdmlibGUsIGFsdGEgYWRoZXJlbmNpYSB5IG3DoXMuKTwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIDwvVGV4dG9TZWd1bmRvRGl2PiBcclxuICAgICAgICA8L0RpdlNlZ3VuZG9UZXh0bz5cclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICA8RGl2VGVyY2VyVGV4dG8+XHJcbiAgICAgICAgPERpdlBWQz5cclxuICAgICAgICAgIDxUaXR1bG9JbXByZXNpb24+XHJcbiAgICAgICAgICA8Yj5JbXByZXNpb24gZGUgZXRpcXVldGFzIHBhcmEgZGlmZXJlbnRlcyBwcm9jZXNvczwvYj5cclxuICAgICAgICAgIDwvVGl0dWxvSW1wcmVzaW9uPlxyXG4gICAgICAgICAgPG9sIGNsYXNzTmFtZT1cImVzb2xcIj5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+RXRpcXVldGFzIHRleHRpbGVzLjwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5FdGlxdWV0YXMgcGFyYSBlbCBzZWN0b3IgYXV0b21vdHJpei48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+RXRpcXVldGFzIHBhcmEgZWwgY29udHJvbCBkZSBwcm9kdWN0b3MuIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5FdGlxdWV0YXMgcGFyYSBlbCBzZWN0b3IgZGUgbWFudWZhY3R1cmEuPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPkV0aXF1ZXRhcyBwYXJhIGVsIHNlY3RvciBzYWx1ZC48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDwvb2w+XHJcbiAgICAgICAgPC9EaXZQVkM+XHJcbiAgICAgICAgICA8SU1HQ0VSIHNyYz1cIi9pbWcvaW1nLi1wZXN0YcOxYS1ldGlxdWV0YXMud2VicFwiIGFsdD1cIkV0aXF1ZXRhcyBNdWVzdHJhXCIgd2lkdGg9XCIzMCVcIi8+XHJcbiAgICAgICAgPC9EaXZUZXJjZXJUZXh0bz5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XHJcbiAgICAgICAgICA8Q29udGVuZWRvckQ+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvI3JlbnRhXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XHJcbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+wqFDb25vemNhIG51ZXN0cm8gc2VydmljaW8gZGUgUmVudGEhPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFJlcGFyYWNpw7NuIVxyXG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L092YVRleD5cclxuICAgICAgICAgICAgICA8L092YVRleERpdj5cclxuICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxyXG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdmVudGEtZGUtYWNjZXNvcmlvcy15LWNvbnN1bWlibGVzXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XHJcbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgwqFBZHF1aWVyYSBsb3MgYWNjZXNvcmlvcyB5IGNvbnN1bWlibGVzIHF1ZSBuZWNlc2l0YSFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9EU0QtdmVudGEtZW4tcnV0YVwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJhIHNvbHVjacOzbiBcIkRTRFwiIHBhcmEgdmVudGEgZW4gcnV0YSFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi92ZW50YS1mdW5kYXMtaGFuZGhlbGQtaW1wcmVzb3JhLXBvcnRhdGlsXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdkQgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgQ29udGFtb3MgY29uIGZ1bmRhcyBkaXNlw7FhZGFzIGEgbGEgbWVkaWRhIHBhcmEgY3VtcGxpciBjb24gc3VzXHJcbiAgICAgICAgICAgICAgICAgIG5lY2VzaWRhZGVzLlxyXG4gICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQWRxdWllcmEgbGEgcHJvdGVjY2nDs24gcXVlIHN1cyBlcXVpcG9zIG5lY2VzaXRhbiFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXZEPlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW1wcmVzaW9uLWNyZWRlbmNpYWxlcy10YXJqZXRhcy1nYWZldGVzLXB2Y1wiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXZEIGNsYXNzTmFtZT1cImJcIj5cclxuICAgICAgICAgICAgICAgIDxPdmFUZXg+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+XHJcbiAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXMhXHJcbiAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L092YVRleD5cclxuICAgICAgICAgICAgICA8L092YVRleERpdkQ+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDwvQ29udGVuZWRvckQ+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGVuZWRvcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXh0b0V0aXF1ZXRhcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivPVC = _styled(\"div\", true ? {\n    target: \"ej1y3l98\"\n  } : {\n    target: \"ej1y3l98\",\n    label: \"DivPVC\"\n  })(true ? {\n    name: \"14ftwbw\",\n    styles: \"margin-top:2rem;padding-left:2rem;@media (max-width: 530px){padding:1rem;margin-top:1rem;}\"\n  } : {\n    name: \"14ftwbw\",\n    styles: \"margin-top:2rem;padding-left:2rem;@media (max-width: 530px){padding:1rem;margin-top:1rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TituloImpresion = _styled(\"h2\", true ? {\n    target: \"ej1y3l97\"\n  } : {\n    target: \"ej1y3l97\",\n    label: \"TituloImpresion\"\n  })(true ? {\n    name: \"1q82c7c\",\n    styles: \"text-align:left;font-size:20px\"\n  } : {\n    name: \"1q82c7c\",\n    styles: \"text-align:left;font-size:20px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TituloImpresionDos = _styled(\"h2\", true ? {\n    target: \"ej1y3l96\"\n  } : {\n    target: \"ej1y3l96\",\n    label: \"TituloImpresionDos\"\n  })(true ? {\n    name: \"17g321i\",\n    styles: \"text-align:center;font-weight:bold;font-size:20px;margin-top:2.5rem\"\n  } : {\n    name: \"17g321i\",\n    styles: \"text-align:center;font-weight:bold;font-size:20px;margin-top:2.5rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvRXRpcXVldGFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThLc0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxudWV2byBjb2RpZ28gSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcVGV4dG9FdGlxdWV0YXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XHJcbmltcG9ydCB1c2VXaW5kb3dTaXplIGZyb20gXCIuLi8uLi9ob29rcy91c2VXaW5kb3dTaXplXCI7XHJcblxyXG5jb25zdCBUZXh0b0V0aXF1ZXRhcyA9ICgpID0+IHtcclxuICBjb25zdCBDb250ZW5lZG9yID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA1MCU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRyZXNJbWdUZXh0ID0gc3R5bGVkLmRpdmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXJnaW4tdG9wOiA3cmVtO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTAwcHgpIHtcclxuICAgICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTgxNnB4KSB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE2MTlweCkge1xyXG4gICAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRyZXNJbWdUZXh0U2luRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICBgO1xyXG5cclxuICBjb25zdCBCZW5lZmljaW9zID0gc3R5bGVkLnVsYFxyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBwYWRkaW5nLXRvcDogMnJlbTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgQmVuZWZpY2lvc0xpc3RhID0gc3R5bGVkLmxpYFxyXG4gICAgbGlzdC1zdHlsZTogb3V0c2lkZTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUQyA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNTIlO1xyXG4gICAgaGVpZ2h0OiA3MCU7XHJcbiAgICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzg2cHgpIHtcclxuICAgICAgd2lkdGg6IDY1JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTMwcHgpIHtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HRVQ9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXgtd2lkdGg6NTAwcHg7XHJcbiAgICBoZWlnaHQ6IDcwJTtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcblxyXG4gICAgaW1ne1xyXG4gICAgICBtYXgtd2lkdGg6aW5oZXJpdDtcclxuICAgICAgXHJcbiAgICB9XHJcbiAgYDtcclxuXHJcblxyXG4gIGNvbnN0IERpdlNlZ3VuZG9UZXh0byA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgZGlzcGxheTpjb250ZW50cztcclxuICAgIFxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xyXG4gICAgICBtYXJnaW4tdG9wOiAtMjEycHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2VGVyY2VyVGV4dG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcclxuICAgIH1cclxuICBgO1xyXG5cclxuXHJcblxyXG4gIGNvbnN0IFRleHRvU2VndW5kb0RpdiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTMwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRleHRvVGVyY2VyRGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2UFZDID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0dWxvSW1wcmVzaW9uID0gc3R5bGVkLmgyYFxyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0dWxvSW1wcmVzaW9uRG9zID0gc3R5bGVkLmgyYFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyLjVyZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgT3ZhVGV4RGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA3OCU7XHJcbiAgICBoZWlnaHQ6IDQuNXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IE92YVRleERpdkQgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDc4JTtcclxuXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NmMwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBPdmFUZXggPSBzdHlsZWQucGBcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE1MDBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNTVweCkge1xyXG4gICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGV4dERpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IENvbnRlbmVkb3JEID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdDRVIgPSBzdHlsZWQuaW1nYFxyXG4gICAgYm9yZGVyLXJhZGl1czoxNXB4O1xyXG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICAgIG1hcmdpbi10b3A6NXJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTA3MHB4KSB7XHJcbiAgICAgIHdpZHRoOiA0NSUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IHNpemUgPSB1c2VXaW5kb3dTaXplKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGVuZWRvcj5cclxuICAgICAgICB7c2l6ZSA+IDE0MDAgPyAoXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIDxEaXZUcmVzSW1nVGV4dD5cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgICA8QmVuZWZpY2lvcz5cclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxoMz5cclxuICAgICAgICAgICAgICAgICAgPGI+SW1wcmVzaW9uIGRlIGV0aXF1ZXRhcyBjb24gZGlmZXJlbnRlcyB0aXBvcyBkZSBhZGhlc2l2b3M6PC9iPlxyXG4gICAgICAgICAgICAgICAgPC9oMz5cclxuICAgICAgICAgICAgICA8L2Rpdj4gIFxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBQZXJtYW5lbnRlLlxyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBSZW1vdmlibGUuXHJcbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICAgIERlIGFsdGEgYWRoZXJlbmNpYS5cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgQWNyw61saWNvLntcIiBcIn1cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgPC9CZW5lZmljaW9zPlxyXG4gICAgICAgICAgICA8SU1HRVQ+XHJcbiAgICAgICAgICAgICAgPGltZyBzcmM9XCIvaW1nL2ltZy4tcGVzdGHDsWEtZXRpcXVldGFzLTIud2VicFwiIGFsdD1cIkV0aXF1ZXRhc1wiIHdpZHRoPVwiNTAwcHhcIi8+XHJcbiAgICAgICAgICAgIDwvSU1HRVQ+XHJcbiAgICAgICAgICA8L0RpdlRyZXNJbWdUZXh0PlxyXG4gICAgICAgICkgOiAoXHJcbiAgICAgICAgICA8RGl2VHJlc0ltZ1RleHRTaW5GbGV4PlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDxCZW5lZmljaW9zPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2FyYW5cIj5cclxuICAgICAgICAgICAgICAgIDxoMz5cclxuICAgICAgICAgICAgICAgICAgPGI+SW1wcmVzacOzbiBkZSBldGlxdWV0YXMgY29uIGRpZmVyZW50ZXMgdGlwb3MgZGUgYWRoZXNpdm9zPC9iPlxyXG4gICAgICAgICAgICAgICAgPC9oMz5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgUGVybWFuZW50ZS5cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgUmVtb3ZpYmxlLlxyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBEZSBhbHRhIGFkaGVyZW5jaWEuXHJcbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICAgIEFjcsOtbGljb1xyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICA8L0JlbmVmaWNpb3M+XHJcblxyXG4gICAgICAgICAgICA8SU1HRVQ+XHJcbiAgICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW1ncmVzY2VcIlxyXG4gICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9pbWcuLXBlc3Rhw7FhLWV0aXF1ZXRhcy0yLndlYnBcIlxyXG4gICAgICAgICAgICAgICAgYWx0PVwiRXRpcXVldGFzXCJcclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L0lNR0VUPlxyXG5cclxuICAgICAgICAgIDwvRGl2VHJlc0ltZ1RleHRTaW5GbGV4PlxyXG4gICAgICAgICl9XHJcblxyXG4gICAgICAgIDxEaXZTZWd1bmRvVGV4dG8+XHJcbiAgICAgICAgICA8VGV4dG9TZWd1bmRvRGl2PlxyXG4gICAgICAgICAgPFRpdHVsb0ltcHJlc2lvbj5cclxuICAgICAgICAgIDxiPkltcHJlc2lvbiBkZSBldGlxdWV0YXMgZW4gbG9zIG1lam9yZXMgbWF0ZXJpYWxlcyBjb21vIGxvIHNvbjo8L2I+XHJcbiAgICAgICAgICA8L1RpdHVsb0ltcHJlc2lvbj5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saW9sZWZpbmE6IEFkZWN1YWRhIHBhcmEgZXRpcXVldGFzIGNvbG9jYWRhcyBlbiBzdXBlcmZpY2llcyBhc3BlcmFzIGUgaXJyZWd1bGFyZXM8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saXByb3BpbGVubzogQWRlY3VhZG8gcGFyYSBldGlxdWV0YXIgem9uYXMgY3VydmFzIGUgaXJyZWd1bGFyZXMsIGNhcGF6IGRlIHNvcG9ydGFyIGJhamFzIHRlbXBlcmF0dXJhcy48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWVzdGVyOiBBbHRhIHJlc2l0ZW5jaWEgeSBkdXJhYmlsaWRhZCA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWFtaWRhOiBBZGVjdWFkYSBwYXJhIGV0aXF1ZXRhcyBjYXBhY2VzIGRlIHJlc2lzdGlyIGFsdGFzIHRlbXBlcmF0dXJhcy48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWFtaWRhOiBBZGVjdWFkYSBwYXJhIGV0aXF1ZXRhcyBjYXBhY2VzIGRlIHJlaXNpc3RpciBhbHRhcyB0ZW1wZXJhdHVyYXM8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UGFwZWw6IEFkZWN1YWRvIHBhcmEgaW1wcmVzaW9uIGRlIGV0aXF1ZXRhcyBkZSB1c28gZ2VuZXJhbCB5IGVzcGVjaWFsaWRhZGVzKHJlc2lzdGVuY2lhIGEgYWx0YXMgdGVtcGVyYXR1cmFzLCB1bHRyYSByZW1vdmlibGUsIGFsdGEgYWRoZXJlbmNpYSB5IG3DoXMuKTwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIDwvVGV4dG9TZWd1bmRvRGl2PiBcclxuICAgICAgICA8L0RpdlNlZ3VuZG9UZXh0bz5cclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICA8RGl2VGVyY2VyVGV4dG8+XHJcbiAgICAgICAgPERpdlBWQz5cclxuICAgICAgICAgIDxUaXR1bG9JbXByZXNpb24+XHJcbiAgICAgICAgICA8Yj5JbXByZXNpb24gZGUgZXRpcXVldGFzIHBhcmEgZGlmZXJlbnRlcyBwcm9jZXNvczwvYj5cclxuICAgICAgICAgIDwvVGl0dWxvSW1wcmVzaW9uPlxyXG4gICAgICAgICAgPG9sIGNsYXNzTmFtZT1cImVzb2xcIj5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+RXRpcXVldGFzIHRleHRpbGVzLjwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5FdGlxdWV0YXMgcGFyYSBlbCBzZWN0b3IgYXV0b21vdHJpei48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+RXRpcXVldGFzIHBhcmEgZWwgY29udHJvbCBkZSBwcm9kdWN0b3MuIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5FdGlxdWV0YXMgcGFyYSBlbCBzZWN0b3IgZGUgbWFudWZhY3R1cmEuPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPkV0aXF1ZXRhcyBwYXJhIGVsIHNlY3RvciBzYWx1ZC48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDwvb2w+XHJcbiAgICAgICAgPC9EaXZQVkM+XHJcbiAgICAgICAgICA8SU1HQ0VSIHNyYz1cIi9pbWcvaW1nLi1wZXN0YcOxYS1ldGlxdWV0YXMud2VicFwiIGFsdD1cIkV0aXF1ZXRhcyBNdWVzdHJhXCIgd2lkdGg9XCIzMCVcIi8+XHJcbiAgICAgICAgPC9EaXZUZXJjZXJUZXh0bz5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XHJcbiAgICAgICAgICA8Q29udGVuZWRvckQ+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvI3JlbnRhXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XHJcbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+wqFDb25vemNhIG51ZXN0cm8gc2VydmljaW8gZGUgUmVudGEhPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFJlcGFyYWNpw7NuIVxyXG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L092YVRleD5cclxuICAgICAgICAgICAgICA8L092YVRleERpdj5cclxuICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxyXG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdmVudGEtZGUtYWNjZXNvcmlvcy15LWNvbnN1bWlibGVzXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XHJcbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgwqFBZHF1aWVyYSBsb3MgYWNjZXNvcmlvcyB5IGNvbnN1bWlibGVzIHF1ZSBuZWNlc2l0YSFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9EU0QtdmVudGEtZW4tcnV0YVwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJhIHNvbHVjacOzbiBcIkRTRFwiIHBhcmEgdmVudGEgZW4gcnV0YSFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi92ZW50YS1mdW5kYXMtaGFuZGhlbGQtaW1wcmVzb3JhLXBvcnRhdGlsXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdkQgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgQ29udGFtb3MgY29uIGZ1bmRhcyBkaXNlw7FhZGFzIGEgbGEgbWVkaWRhIHBhcmEgY3VtcGxpciBjb24gc3VzXHJcbiAgICAgICAgICAgICAgICAgIG5lY2VzaWRhZGVzLlxyXG4gICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQWRxdWllcmEgbGEgcHJvdGVjY2nDs24gcXVlIHN1cyBlcXVpcG9zIG5lY2VzaXRhbiFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXZEPlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW1wcmVzaW9uLWNyZWRlbmNpYWxlcy10YXJqZXRhcy1nYWZldGVzLXB2Y1wiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXZEIGNsYXNzTmFtZT1cImJcIj5cclxuICAgICAgICAgICAgICAgIDxPdmFUZXg+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+XHJcbiAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXMhXHJcbiAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L092YVRleD5cclxuICAgICAgICAgICAgICA8L092YVRleERpdkQ+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDwvQ29udGVuZWRvckQ+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGVuZWRvcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXh0b0V0aXF1ZXRhcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var OvaTexDiv = _styled(\"div\", true ? {\n    target: \"ej1y3l95\"\n  } : {\n    target: \"ej1y3l95\",\n    label: \"OvaTexDiv\"\n  })(true ? {\n    name: \"bmxbe\",\n    styles: \"width:78%;height:4.5rem;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"\n  } : {\n    name: \"bmxbe\",\n    styles: \"width:78%;height:4.5rem;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var OvaTexDivD = _styled(\"div\", true ? {\n    target: \"ej1y3l94\"\n  } : {\n    target: \"ej1y3l94\",\n    label: \"OvaTexDivD\"\n  })(true ? {\n    name: \"1xutzvp\",\n    styles: \"width:78%;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"\n  } : {\n    name: \"1xutzvp\",\n    styles: \"width:78%;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var OvaTex = _styled(\"p\", true ? {\n    target: \"ej1y3l93\"\n  } : {\n    target: \"ej1y3l93\",\n    label: \"OvaTex\"\n  })(true ? {\n    name: \"1i04rfa\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\"\n  } : {\n    name: \"1i04rfa\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TextDiv = _styled(\"div\", true ? {\n    target: \"ej1y3l92\"\n  } : {\n    target: \"ej1y3l92\",\n    label: \"TextDiv\"\n  })(true ? {\n    name: \"q68gb5\",\n    styles: \"width:80%;margin:0px auto;@media (max-width: 1400px){width:100%;}\"\n  } : {\n    name: \"q68gb5\",\n    styles: \"width:80%;margin:0px auto;@media (max-width: 1400px){width:100%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ContenedorD = _styled(\"div\", true ? {\n    target: \"ej1y3l91\"\n  } : {\n    target: \"ej1y3l91\",\n    label: \"ContenedorD\"\n  })(true ? {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\"\n  } : {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvRXRpcXVldGFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZPZ0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxudWV2byBjb2RpZ28gSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcVGV4dG9FdGlxdWV0YXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XHJcbmltcG9ydCB1c2VXaW5kb3dTaXplIGZyb20gXCIuLi8uLi9ob29rcy91c2VXaW5kb3dTaXplXCI7XHJcblxyXG5jb25zdCBUZXh0b0V0aXF1ZXRhcyA9ICgpID0+IHtcclxuICBjb25zdCBDb250ZW5lZG9yID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA1MCU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRyZXNJbWdUZXh0ID0gc3R5bGVkLmRpdmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXJnaW4tdG9wOiA3cmVtO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTAwcHgpIHtcclxuICAgICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTgxNnB4KSB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE2MTlweCkge1xyXG4gICAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRyZXNJbWdUZXh0U2luRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICBgO1xyXG5cclxuICBjb25zdCBCZW5lZmljaW9zID0gc3R5bGVkLnVsYFxyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBwYWRkaW5nLXRvcDogMnJlbTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgQmVuZWZpY2lvc0xpc3RhID0gc3R5bGVkLmxpYFxyXG4gICAgbGlzdC1zdHlsZTogb3V0c2lkZTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUQyA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNTIlO1xyXG4gICAgaGVpZ2h0OiA3MCU7XHJcbiAgICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzg2cHgpIHtcclxuICAgICAgd2lkdGg6IDY1JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTMwcHgpIHtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HRVQ9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXgtd2lkdGg6NTAwcHg7XHJcbiAgICBoZWlnaHQ6IDcwJTtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcblxyXG4gICAgaW1ne1xyXG4gICAgICBtYXgtd2lkdGg6aW5oZXJpdDtcclxuICAgICAgXHJcbiAgICB9XHJcbiAgYDtcclxuXHJcblxyXG4gIGNvbnN0IERpdlNlZ3VuZG9UZXh0byA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgZGlzcGxheTpjb250ZW50cztcclxuICAgIFxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xyXG4gICAgICBtYXJnaW4tdG9wOiAtMjEycHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2VGVyY2VyVGV4dG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcclxuICAgIH1cclxuICBgO1xyXG5cclxuXHJcblxyXG4gIGNvbnN0IFRleHRvU2VndW5kb0RpdiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTMwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRleHRvVGVyY2VyRGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2UFZDID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0dWxvSW1wcmVzaW9uID0gc3R5bGVkLmgyYFxyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0dWxvSW1wcmVzaW9uRG9zID0gc3R5bGVkLmgyYFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyLjVyZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgT3ZhVGV4RGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA3OCU7XHJcbiAgICBoZWlnaHQ6IDQuNXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IE92YVRleERpdkQgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDc4JTtcclxuXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NmMwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBPdmFUZXggPSBzdHlsZWQucGBcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE1MDBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNTVweCkge1xyXG4gICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGV4dERpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IENvbnRlbmVkb3JEID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdDRVIgPSBzdHlsZWQuaW1nYFxyXG4gICAgYm9yZGVyLXJhZGl1czoxNXB4O1xyXG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICAgIG1hcmdpbi10b3A6NXJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTA3MHB4KSB7XHJcbiAgICAgIHdpZHRoOiA0NSUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IHNpemUgPSB1c2VXaW5kb3dTaXplKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGVuZWRvcj5cclxuICAgICAgICB7c2l6ZSA+IDE0MDAgPyAoXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIDxEaXZUcmVzSW1nVGV4dD5cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgICA8QmVuZWZpY2lvcz5cclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxoMz5cclxuICAgICAgICAgICAgICAgICAgPGI+SW1wcmVzaW9uIGRlIGV0aXF1ZXRhcyBjb24gZGlmZXJlbnRlcyB0aXBvcyBkZSBhZGhlc2l2b3M6PC9iPlxyXG4gICAgICAgICAgICAgICAgPC9oMz5cclxuICAgICAgICAgICAgICA8L2Rpdj4gIFxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBQZXJtYW5lbnRlLlxyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBSZW1vdmlibGUuXHJcbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICAgIERlIGFsdGEgYWRoZXJlbmNpYS5cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgQWNyw61saWNvLntcIiBcIn1cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgPC9CZW5lZmljaW9zPlxyXG4gICAgICAgICAgICA8SU1HRVQ+XHJcbiAgICAgICAgICAgICAgPGltZyBzcmM9XCIvaW1nL2ltZy4tcGVzdGHDsWEtZXRpcXVldGFzLTIud2VicFwiIGFsdD1cIkV0aXF1ZXRhc1wiIHdpZHRoPVwiNTAwcHhcIi8+XHJcbiAgICAgICAgICAgIDwvSU1HRVQ+XHJcbiAgICAgICAgICA8L0RpdlRyZXNJbWdUZXh0PlxyXG4gICAgICAgICkgOiAoXHJcbiAgICAgICAgICA8RGl2VHJlc0ltZ1RleHRTaW5GbGV4PlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDxCZW5lZmljaW9zPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2FyYW5cIj5cclxuICAgICAgICAgICAgICAgIDxoMz5cclxuICAgICAgICAgICAgICAgICAgPGI+SW1wcmVzacOzbiBkZSBldGlxdWV0YXMgY29uIGRpZmVyZW50ZXMgdGlwb3MgZGUgYWRoZXNpdm9zPC9iPlxyXG4gICAgICAgICAgICAgICAgPC9oMz5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgUGVybWFuZW50ZS5cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgUmVtb3ZpYmxlLlxyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBEZSBhbHRhIGFkaGVyZW5jaWEuXHJcbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICAgIEFjcsOtbGljb1xyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICA8L0JlbmVmaWNpb3M+XHJcblxyXG4gICAgICAgICAgICA8SU1HRVQ+XHJcbiAgICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW1ncmVzY2VcIlxyXG4gICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9pbWcuLXBlc3Rhw7FhLWV0aXF1ZXRhcy0yLndlYnBcIlxyXG4gICAgICAgICAgICAgICAgYWx0PVwiRXRpcXVldGFzXCJcclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L0lNR0VUPlxyXG5cclxuICAgICAgICAgIDwvRGl2VHJlc0ltZ1RleHRTaW5GbGV4PlxyXG4gICAgICAgICl9XHJcblxyXG4gICAgICAgIDxEaXZTZWd1bmRvVGV4dG8+XHJcbiAgICAgICAgICA8VGV4dG9TZWd1bmRvRGl2PlxyXG4gICAgICAgICAgPFRpdHVsb0ltcHJlc2lvbj5cclxuICAgICAgICAgIDxiPkltcHJlc2lvbiBkZSBldGlxdWV0YXMgZW4gbG9zIG1lam9yZXMgbWF0ZXJpYWxlcyBjb21vIGxvIHNvbjo8L2I+XHJcbiAgICAgICAgICA8L1RpdHVsb0ltcHJlc2lvbj5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saW9sZWZpbmE6IEFkZWN1YWRhIHBhcmEgZXRpcXVldGFzIGNvbG9jYWRhcyBlbiBzdXBlcmZpY2llcyBhc3BlcmFzIGUgaXJyZWd1bGFyZXM8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saXByb3BpbGVubzogQWRlY3VhZG8gcGFyYSBldGlxdWV0YXIgem9uYXMgY3VydmFzIGUgaXJyZWd1bGFyZXMsIGNhcGF6IGRlIHNvcG9ydGFyIGJhamFzIHRlbXBlcmF0dXJhcy48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWVzdGVyOiBBbHRhIHJlc2l0ZW5jaWEgeSBkdXJhYmlsaWRhZCA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWFtaWRhOiBBZGVjdWFkYSBwYXJhIGV0aXF1ZXRhcyBjYXBhY2VzIGRlIHJlc2lzdGlyIGFsdGFzIHRlbXBlcmF0dXJhcy48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWFtaWRhOiBBZGVjdWFkYSBwYXJhIGV0aXF1ZXRhcyBjYXBhY2VzIGRlIHJlaXNpc3RpciBhbHRhcyB0ZW1wZXJhdHVyYXM8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UGFwZWw6IEFkZWN1YWRvIHBhcmEgaW1wcmVzaW9uIGRlIGV0aXF1ZXRhcyBkZSB1c28gZ2VuZXJhbCB5IGVzcGVjaWFsaWRhZGVzKHJlc2lzdGVuY2lhIGEgYWx0YXMgdGVtcGVyYXR1cmFzLCB1bHRyYSByZW1vdmlibGUsIGFsdGEgYWRoZXJlbmNpYSB5IG3DoXMuKTwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIDwvVGV4dG9TZWd1bmRvRGl2PiBcclxuICAgICAgICA8L0RpdlNlZ3VuZG9UZXh0bz5cclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICA8RGl2VGVyY2VyVGV4dG8+XHJcbiAgICAgICAgPERpdlBWQz5cclxuICAgICAgICAgIDxUaXR1bG9JbXByZXNpb24+XHJcbiAgICAgICAgICA8Yj5JbXByZXNpb24gZGUgZXRpcXVldGFzIHBhcmEgZGlmZXJlbnRlcyBwcm9jZXNvczwvYj5cclxuICAgICAgICAgIDwvVGl0dWxvSW1wcmVzaW9uPlxyXG4gICAgICAgICAgPG9sIGNsYXNzTmFtZT1cImVzb2xcIj5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+RXRpcXVldGFzIHRleHRpbGVzLjwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5FdGlxdWV0YXMgcGFyYSBlbCBzZWN0b3IgYXV0b21vdHJpei48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+RXRpcXVldGFzIHBhcmEgZWwgY29udHJvbCBkZSBwcm9kdWN0b3MuIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5FdGlxdWV0YXMgcGFyYSBlbCBzZWN0b3IgZGUgbWFudWZhY3R1cmEuPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPkV0aXF1ZXRhcyBwYXJhIGVsIHNlY3RvciBzYWx1ZC48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDwvb2w+XHJcbiAgICAgICAgPC9EaXZQVkM+XHJcbiAgICAgICAgICA8SU1HQ0VSIHNyYz1cIi9pbWcvaW1nLi1wZXN0YcOxYS1ldGlxdWV0YXMud2VicFwiIGFsdD1cIkV0aXF1ZXRhcyBNdWVzdHJhXCIgd2lkdGg9XCIzMCVcIi8+XHJcbiAgICAgICAgPC9EaXZUZXJjZXJUZXh0bz5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XHJcbiAgICAgICAgICA8Q29udGVuZWRvckQ+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvI3JlbnRhXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XHJcbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+wqFDb25vemNhIG51ZXN0cm8gc2VydmljaW8gZGUgUmVudGEhPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFJlcGFyYWNpw7NuIVxyXG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L092YVRleD5cclxuICAgICAgICAgICAgICA8L092YVRleERpdj5cclxuICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxyXG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdmVudGEtZGUtYWNjZXNvcmlvcy15LWNvbnN1bWlibGVzXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XHJcbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgwqFBZHF1aWVyYSBsb3MgYWNjZXNvcmlvcyB5IGNvbnN1bWlibGVzIHF1ZSBuZWNlc2l0YSFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9EU0QtdmVudGEtZW4tcnV0YVwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJhIHNvbHVjacOzbiBcIkRTRFwiIHBhcmEgdmVudGEgZW4gcnV0YSFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi92ZW50YS1mdW5kYXMtaGFuZGhlbGQtaW1wcmVzb3JhLXBvcnRhdGlsXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdkQgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgQ29udGFtb3MgY29uIGZ1bmRhcyBkaXNlw7FhZGFzIGEgbGEgbWVkaWRhIHBhcmEgY3VtcGxpciBjb24gc3VzXHJcbiAgICAgICAgICAgICAgICAgIG5lY2VzaWRhZGVzLlxyXG4gICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQWRxdWllcmEgbGEgcHJvdGVjY2nDs24gcXVlIHN1cyBlcXVpcG9zIG5lY2VzaXRhbiFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXZEPlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW1wcmVzaW9uLWNyZWRlbmNpYWxlcy10YXJqZXRhcy1nYWZldGVzLXB2Y1wiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXZEIGNsYXNzTmFtZT1cImJcIj5cclxuICAgICAgICAgICAgICAgIDxPdmFUZXg+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+XHJcbiAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXMhXHJcbiAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L092YVRleD5cclxuICAgICAgICAgICAgICA8L092YVRleERpdkQ+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDwvQ29udGVuZWRvckQ+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGVuZWRvcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXh0b0V0aXF1ZXRhcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGCER = _styled(\"img\", true ? {\n    target: \"ej1y3l90\"\n  } : {\n    target: \"ej1y3l90\",\n    label: \"IMGCER\"\n  })(true ? {\n    name: \"1641xlb\",\n    styles: \"border-radius:15px;object-fit:contain;margin-top:5rem;@media (max-width: 1200px){width:50%!important;}@media (max-width: 1070px){width:45%!important;}@media (max-width: 995px){margin:0px auto;width:60%!important;}\"\n  } : {\n    name: \"1641xlb\",\n    styles: \"border-radius:15px;object-fit:contain;margin-top:5rem;@media (max-width: 1200px){width:50%!important;}@media (max-width: 1070px){width:45%!important;}@media (max-width: 995px){margin:0px auto;width:60%!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvRXRpcXVldGFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNQMkIiLCJmaWxlIjoiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxudWV2byBjb2RpZ28gSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcVGV4dG9FdGlxdWV0YXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XHJcbmltcG9ydCB1c2VXaW5kb3dTaXplIGZyb20gXCIuLi8uLi9ob29rcy91c2VXaW5kb3dTaXplXCI7XHJcblxyXG5jb25zdCBUZXh0b0V0aXF1ZXRhcyA9ICgpID0+IHtcclxuICBjb25zdCBDb250ZW5lZG9yID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA1MCU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRyZXNJbWdUZXh0ID0gc3R5bGVkLmRpdmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXJnaW4tdG9wOiA3cmVtO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTAwcHgpIHtcclxuICAgICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTgxNnB4KSB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE2MTlweCkge1xyXG4gICAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRyZXNJbWdUZXh0U2luRmxleCA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuICBgO1xyXG5cclxuICBjb25zdCBCZW5lZmljaW9zID0gc3R5bGVkLnVsYFxyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBwYWRkaW5nLXRvcDogMnJlbTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgQmVuZWZpY2lvc0xpc3RhID0gc3R5bGVkLmxpYFxyXG4gICAgbGlzdC1zdHlsZTogb3V0c2lkZTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUQyA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNTIlO1xyXG4gICAgaGVpZ2h0OiA3MCU7XHJcbiAgICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzg2cHgpIHtcclxuICAgICAgd2lkdGg6IDY1JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTMwcHgpIHtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HRVQ9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXgtd2lkdGg6NTAwcHg7XHJcbiAgICBoZWlnaHQ6IDcwJTtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcblxyXG4gICAgaW1ne1xyXG4gICAgICBtYXgtd2lkdGg6aW5oZXJpdDtcclxuICAgICAgXHJcbiAgICB9XHJcbiAgYDtcclxuXHJcblxyXG4gIGNvbnN0IERpdlNlZ3VuZG9UZXh0byA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgZGlzcGxheTpjb250ZW50cztcclxuICAgIFxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkge1xyXG4gICAgICBtYXJnaW4tdG9wOiAtMjEycHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2VGVyY2VyVGV4dG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcclxuICAgIH1cclxuICBgO1xyXG5cclxuXHJcblxyXG4gIGNvbnN0IFRleHRvU2VndW5kb0RpdiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTMwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRleHRvVGVyY2VyRGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2UFZDID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0dWxvSW1wcmVzaW9uID0gc3R5bGVkLmgyYFxyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuXHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0dWxvSW1wcmVzaW9uRG9zID0gc3R5bGVkLmgyYFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyLjVyZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgT3ZhVGV4RGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA3OCU7XHJcbiAgICBoZWlnaHQ6IDQuNXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IE92YVRleERpdkQgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDc4JTtcclxuXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NmMwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBPdmFUZXggPSBzdHlsZWQucGBcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE1MDBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNTVweCkge1xyXG4gICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGV4dERpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwcHggYXV0bztcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IENvbnRlbmVkb3JEID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLXRvcDogNHJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdDRVIgPSBzdHlsZWQuaW1nYFxyXG4gICAgYm9yZGVyLXJhZGl1czoxNXB4O1xyXG4gICAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICAgIG1hcmdpbi10b3A6NXJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTA3MHB4KSB7XHJcbiAgICAgIHdpZHRoOiA0NSUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgbWFyZ2luOiAwcHggYXV0bztcclxuICAgICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IHNpemUgPSB1c2VXaW5kb3dTaXplKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGVuZWRvcj5cclxuICAgICAgICB7c2l6ZSA+IDE0MDAgPyAoXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIDxEaXZUcmVzSW1nVGV4dD5cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgICA8QmVuZWZpY2lvcz5cclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxoMz5cclxuICAgICAgICAgICAgICAgICAgPGI+SW1wcmVzaW9uIGRlIGV0aXF1ZXRhcyBjb24gZGlmZXJlbnRlcyB0aXBvcyBkZSBhZGhlc2l2b3M6PC9iPlxyXG4gICAgICAgICAgICAgICAgPC9oMz5cclxuICAgICAgICAgICAgICA8L2Rpdj4gIFxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBQZXJtYW5lbnRlLlxyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBSZW1vdmlibGUuXHJcbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICAgIERlIGFsdGEgYWRoZXJlbmNpYS5cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgQWNyw61saWNvLntcIiBcIn1cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgPC9CZW5lZmljaW9zPlxyXG4gICAgICAgICAgICA8SU1HRVQ+XHJcbiAgICAgICAgICAgICAgPGltZyBzcmM9XCIvaW1nL2ltZy4tcGVzdGHDsWEtZXRpcXVldGFzLTIud2VicFwiIGFsdD1cIkV0aXF1ZXRhc1wiIHdpZHRoPVwiNTAwcHhcIi8+XHJcbiAgICAgICAgICAgIDwvSU1HRVQ+XHJcbiAgICAgICAgICA8L0RpdlRyZXNJbWdUZXh0PlxyXG4gICAgICAgICkgOiAoXHJcbiAgICAgICAgICA8RGl2VHJlc0ltZ1RleHRTaW5GbGV4PlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDxCZW5lZmljaW9zPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2FyYW5cIj5cclxuICAgICAgICAgICAgICAgIDxoMz5cclxuICAgICAgICAgICAgICAgICAgPGI+SW1wcmVzacOzbiBkZSBldGlxdWV0YXMgY29uIGRpZmVyZW50ZXMgdGlwb3MgZGUgYWRoZXNpdm9zPC9iPlxyXG4gICAgICAgICAgICAgICAgPC9oMz5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgUGVybWFuZW50ZS5cclxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgICAgUmVtb3ZpYmxlLlxyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgICBEZSBhbHRhIGFkaGVyZW5jaWEuXHJcbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgICAgICAgIEFjcsOtbGljb1xyXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICA8L0JlbmVmaWNpb3M+XHJcblxyXG4gICAgICAgICAgICA8SU1HRVQ+XHJcbiAgICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW1ncmVzY2VcIlxyXG4gICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9pbWcuLXBlc3Rhw7FhLWV0aXF1ZXRhcy0yLndlYnBcIlxyXG4gICAgICAgICAgICAgICAgYWx0PVwiRXRpcXVldGFzXCJcclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L0lNR0VUPlxyXG5cclxuICAgICAgICAgIDwvRGl2VHJlc0ltZ1RleHRTaW5GbGV4PlxyXG4gICAgICAgICl9XHJcblxyXG4gICAgICAgIDxEaXZTZWd1bmRvVGV4dG8+XHJcbiAgICAgICAgICA8VGV4dG9TZWd1bmRvRGl2PlxyXG4gICAgICAgICAgPFRpdHVsb0ltcHJlc2lvbj5cclxuICAgICAgICAgIDxiPkltcHJlc2lvbiBkZSBldGlxdWV0YXMgZW4gbG9zIG1lam9yZXMgbWF0ZXJpYWxlcyBjb21vIGxvIHNvbjo8L2I+XHJcbiAgICAgICAgICA8L1RpdHVsb0ltcHJlc2lvbj5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saW9sZWZpbmE6IEFkZWN1YWRhIHBhcmEgZXRpcXVldGFzIGNvbG9jYWRhcyBlbiBzdXBlcmZpY2llcyBhc3BlcmFzIGUgaXJyZWd1bGFyZXM8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saXByb3BpbGVubzogQWRlY3VhZG8gcGFyYSBldGlxdWV0YXIgem9uYXMgY3VydmFzIGUgaXJyZWd1bGFyZXMsIGNhcGF6IGRlIHNvcG9ydGFyIGJhamFzIHRlbXBlcmF0dXJhcy48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWVzdGVyOiBBbHRhIHJlc2l0ZW5jaWEgeSBkdXJhYmlsaWRhZCA8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWFtaWRhOiBBZGVjdWFkYSBwYXJhIGV0aXF1ZXRhcyBjYXBhY2VzIGRlIHJlc2lzdGlyIGFsdGFzIHRlbXBlcmF0dXJhcy48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UG9saWFtaWRhOiBBZGVjdWFkYSBwYXJhIGV0aXF1ZXRhcyBjYXBhY2VzIGRlIHJlaXNpc3RpciBhbHRhcyB0ZW1wZXJhdHVyYXM8L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UGFwZWw6IEFkZWN1YWRvIHBhcmEgaW1wcmVzaW9uIGRlIGV0aXF1ZXRhcyBkZSB1c28gZ2VuZXJhbCB5IGVzcGVjaWFsaWRhZGVzKHJlc2lzdGVuY2lhIGEgYWx0YXMgdGVtcGVyYXR1cmFzLCB1bHRyYSByZW1vdmlibGUsIGFsdGEgYWRoZXJlbmNpYSB5IG3DoXMuKTwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIDwvVGV4dG9TZWd1bmRvRGl2PiBcclxuICAgICAgICA8L0RpdlNlZ3VuZG9UZXh0bz5cclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICA8RGl2VGVyY2VyVGV4dG8+XHJcbiAgICAgICAgPERpdlBWQz5cclxuICAgICAgICAgIDxUaXR1bG9JbXByZXNpb24+XHJcbiAgICAgICAgICA8Yj5JbXByZXNpb24gZGUgZXRpcXVldGFzIHBhcmEgZGlmZXJlbnRlcyBwcm9jZXNvczwvYj5cclxuICAgICAgICAgIDwvVGl0dWxvSW1wcmVzaW9uPlxyXG4gICAgICAgICAgPG9sIGNsYXNzTmFtZT1cImVzb2xcIj5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+RXRpcXVldGFzIHRleHRpbGVzLjwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5FdGlxdWV0YXMgcGFyYSBlbCBzZWN0b3IgYXV0b21vdHJpei48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+RXRpcXVldGFzIHBhcmEgZWwgY29udHJvbCBkZSBwcm9kdWN0b3MuIDwvQmVuZWZpY2lvc0xpc3RhPlxyXG4gICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5FdGlxdWV0YXMgcGFyYSBlbCBzZWN0b3IgZGUgbWFudWZhY3R1cmEuPC9CZW5lZmljaW9zTGlzdGE+XHJcbiAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPkV0aXF1ZXRhcyBwYXJhIGVsIHNlY3RvciBzYWx1ZC48L0JlbmVmaWNpb3NMaXN0YT5cclxuICAgICAgICAgIDwvb2w+XHJcbiAgICAgICAgPC9EaXZQVkM+XHJcbiAgICAgICAgICA8SU1HQ0VSIHNyYz1cIi9pbWcvaW1nLi1wZXN0YcOxYS1ldGlxdWV0YXMud2VicFwiIGFsdD1cIkV0aXF1ZXRhcyBNdWVzdHJhXCIgd2lkdGg9XCIzMCVcIi8+XHJcbiAgICAgICAgPC9EaXZUZXJjZXJUZXh0bz5cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XHJcbiAgICAgICAgICA8Q29udGVuZWRvckQ+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvI3JlbnRhXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XHJcbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+wqFDb25vemNhIG51ZXN0cm8gc2VydmljaW8gZGUgUmVudGEhPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFJlcGFyYWNpw7NuIVxyXG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L092YVRleD5cclxuICAgICAgICAgICAgICA8L092YVRleERpdj5cclxuICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxyXG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdmVudGEtZGUtYWNjZXNvcmlvcy15LWNvbnN1bWlibGVzXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XHJcbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgwqFBZHF1aWVyYSBsb3MgYWNjZXNvcmlvcyB5IGNvbnN1bWlibGVzIHF1ZSBuZWNlc2l0YSFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9EU0QtdmVudGEtZW4tcnV0YVwiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXYgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJhIHNvbHVjacOzbiBcIkRTRFwiIHBhcmEgdmVudGEgZW4gcnV0YSFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi92ZW50YS1mdW5kYXMtaGFuZGhlbGQtaW1wcmVzb3JhLXBvcnRhdGlsXCI+XHJcbiAgICAgICAgICAgICAgPE92YVRleERpdkQgY2xhc3NOYW1lPVwiYlwiPlxyXG4gICAgICAgICAgICAgICAgPE92YVRleD5cclxuICAgICAgICAgICAgICAgICAgQ29udGFtb3MgY29uIGZ1bmRhcyBkaXNlw7FhZGFzIGEgbGEgbWVkaWRhIHBhcmEgY3VtcGxpciBjb24gc3VzXHJcbiAgICAgICAgICAgICAgICAgIG5lY2VzaWRhZGVzLlxyXG4gICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxyXG4gICAgICAgICAgICAgICAgICAgIMKhQWRxdWllcmEgbGEgcHJvdGVjY2nDs24gcXVlIHN1cyBlcXVpcG9zIG5lY2VzaXRhbiFcclxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XHJcbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXZEPlxyXG4gICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW1wcmVzaW9uLWNyZWRlbmNpYWxlcy10YXJqZXRhcy1nYWZldGVzLXB2Y1wiPlxyXG4gICAgICAgICAgICAgIDxPdmFUZXhEaXZEIGNsYXNzTmFtZT1cImJcIj5cclxuICAgICAgICAgICAgICAgIDxPdmFUZXg+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuXCI+XHJcbiAgICAgICAgICAgICAgICAgIMKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXMhXHJcbiAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L092YVRleD5cclxuICAgICAgICAgICAgICA8L092YVRleERpdkQ+XHJcbiAgICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDwvQ29udGVuZWRvckQ+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGVuZWRvcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXh0b0V0aXF1ZXRhcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var size = useWindowSize();\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Contenedor, null, size > 1400 ? ___EmotionJSX(DivTresImgText, null, ___EmotionJSX(Beneficios, null, ___EmotionJSX(\"div\", null, ___EmotionJSX(\"h3\", null, ___EmotionJSX(\"b\", null, \"Impresion de etiquetas con diferentes tipos de adhesivos:\"))), ___EmotionJSX(BeneficiosLista, null, \"Permanente.\"), ___EmotionJSX(BeneficiosLista, null, \"Removible.\"), ___EmotionJSX(BeneficiosLista, null, \"De alta adherencia.\"), ___EmotionJSX(BeneficiosLista, null, \"Acr\\xEDlico.\", \" \")), ___EmotionJSX(IMGET, null, ___EmotionJSX(\"img\", {\n    src: \"/img/img.-pesta\\xF1a-etiquetas-2.webp\",\n    alt: \"Etiquetas\",\n    width: \"500px\"\n  }))) : ___EmotionJSX(DivTresImgTextSinFlex, null, ___EmotionJSX(Beneficios, null, ___EmotionJSX(\"div\", {\n    className: \"garan\"\n  }, ___EmotionJSX(\"h3\", null, ___EmotionJSX(\"b\", null, \"Impresi\\xF3n de etiquetas con diferentes tipos de adhesivos\"))), ___EmotionJSX(BeneficiosLista, null, \"Permanente.\"), ___EmotionJSX(BeneficiosLista, null, \"Removible.\"), ___EmotionJSX(BeneficiosLista, null, \"De alta adherencia.\"), ___EmotionJSX(BeneficiosLista, null, \"Acr\\xEDlico\")), ___EmotionJSX(IMGET, null, ___EmotionJSX(\"img\", {\n    className: \"imgresce\",\n    src: \"/img/img.-pesta\\xF1a-etiquetas-2.webp\",\n    alt: \"Etiquetas\"\n  }))), ___EmotionJSX(DivSegundoTexto, null, ___EmotionJSX(TextoSegundoDiv, null, ___EmotionJSX(TituloImpresion, null, ___EmotionJSX(\"b\", null, \"Impresion de etiquetas en los mejores materiales como lo son:\")), ___EmotionJSX(BeneficiosLista, null, \"Poliolefina: Adecuada para etiquetas colocadas en superficies asperas e irregulares\"), ___EmotionJSX(BeneficiosLista, null, \"Polipropileno: Adecuado para etiquetar zonas curvas e irregulares, capaz de soportar bajas temperaturas.\"), ___EmotionJSX(BeneficiosLista, null, \"Poliester: Alta resitencia y durabilidad \"), ___EmotionJSX(BeneficiosLista, null, \"Poliamida: Adecuada para etiquetas capaces de resistir altas temperaturas.\"), ___EmotionJSX(BeneficiosLista, null, \"Poliamida: Adecuada para etiquetas capaces de reisistir altas temperaturas\"), ___EmotionJSX(BeneficiosLista, null, \"Papel: Adecuado para impresion de etiquetas de uso general y especialidades(resistencia a altas temperaturas, ultra removible, alta adherencia y m\\xE1s.)\"))), ___EmotionJSX(DivTercerTexto, null, ___EmotionJSX(DivPVC, null, ___EmotionJSX(TituloImpresion, null, ___EmotionJSX(\"b\", null, \"Impresion de etiquetas para diferentes procesos\")), ___EmotionJSX(\"ol\", {\n    className: \"esol\"\n  }, ___EmotionJSX(BeneficiosLista, null, \"Etiquetas textiles.\"), ___EmotionJSX(BeneficiosLista, null, \"Etiquetas para el sector automotriz.\"), ___EmotionJSX(BeneficiosLista, null, \"Etiquetas para el control de productos. \"), ___EmotionJSX(BeneficiosLista, null, \"Etiquetas para el sector de manufactura.\"), ___EmotionJSX(BeneficiosLista, null, \"Etiquetas para el sector salud.\"))), ___EmotionJSX(IMGCER, {\n    src: \"/img/img.-pesta\\xF1a-etiquetas.webp\",\n    alt: \"Etiquetas Muestra\",\n    width: \"30%\"\n  })), ___EmotionJSX(\"div\", {\n    className: \"DivR\"\n  }, ___EmotionJSX(ContenedorD, null, ___EmotionJSX(Link, {\n    href: \"/#renta\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Renta!\")))), ___EmotionJSX(Link, {\n    href: \"/#reparacion\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Reparaci\\xF3n!\")))), ___EmotionJSX(Link, {\n    href: \"/#venta\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Venta!\")))), ___EmotionJSX(Link, {\n    href: \"/venta-de-accesorios-y-consumibles\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Adquiera los accesorios y consumibles que necesita!\")))), ___EmotionJSX(Link, {\n    href: \"/DSD-venta-en-ruta\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestra soluci\\xF3n \\\"DSD\\\" para venta en ruta!\")))), ___EmotionJSX(Link, {\n    href: \"/venta-fundas-handheld-impresora-portatil\"\n  }, ___EmotionJSX(OvaTexDivD, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, \"Contamos con fundas dise\\xF1adas a la medida para cumplir con sus necesidades.\", ___EmotionJSX(\"br\", null), ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Adquiera la protecci\\xF3n que sus equipos necesitan!\")))), ___EmotionJSX(Link, {\n    href: \"/impresion-credenciales-tarjetas-gafetes-pvc\"\n  }, ___EmotionJSX(OvaTexDivD, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de impresion de credenciales!\"))))))));\n};\n\nexport default TextoEtiquetas;","import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Politicas from \"../../static/PoliticaTex\";\nimport FormHandHeld from \"../../config/FormHandHeld\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar FormEtiquetas = function FormEtiquetas() {\n  var ContenedorGrid = _styled(\"div\", true ? {\n    target: \"efvklb14\"\n  } : {\n    target: \"efvklb14\",\n    label: \"ContenedorGrid\"\n  })(true ? {\n    name: \"qyt0rj\",\n    styles: \"width:50%;margin-top:2rem;@media (max-width: 995px){width:100%;margin-top:3rem;}\"\n  } : {\n    name: \"qyt0rj\",\n    styles: \"width:50%;margin-top:2rem;@media (max-width: 995px){width:100%;margin-top:3rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivSello = _styled(\"div\", true ? {\n    target: \"efvklb13\"\n  } : {\n    target: \"efvklb13\",\n    label: \"DivSello\"\n  })(true ? {\n    name: \"15ev6lr\",\n    styles: \"display:flex;justify-content:center;padding-top:0rem\"\n  } : {\n    name: \"15ev6lr\",\n    styles: \"display:flex;justify-content:center;padding-top:0rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXEZvcm1FdGlxdWV0YXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0I2QiIsImZpbGUiOiJDOlxcVXNlcnNcXFVTRVJcXERlc2t0b3BcXG51ZXZvIGNvZGlnbyBISFNcXGNvbXBvbmVudHNcXHBlc3RhbmFzXFxGb3JtRXRpcXVldGFzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBNb2RhbCwgQnV0dG9uIH0gZnJvbSBcInJlYWN0LWJvb3RzdHJhcFwiO1xyXG5pbXBvcnQgUG9saXRpY2FzIGZyb20gXCIuLi8uLi9zdGF0aWMvUG9saXRpY2FUZXhcIjtcclxuaW1wb3J0IEZvcm1IYW5kSGVsZCBmcm9tIFwiLi4vLi4vY29uZmlnL0Zvcm1IYW5kSGVsZFwiO1xyXG5pbXBvcnQgdXNlV2luZG93U2l6ZSBmcm9tIFwiLi4vLi4vaG9va3MvdXNlV2luZG93U2l6ZVwiO1xyXG5cclxuY29uc3QgRm9ybUV0aXF1ZXRhcyA9ICgpID0+IHtcclxuICBjb25zdCBDb250ZW5lZG9yR3JpZCA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIG1hcmdpbi10b3A6IDNyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2U2VsbG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDByZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSW1nID0gc3R5bGVkLmltZ2BcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBoZWlnaHQ6IDkwJTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMzc1cHgpIHtcclxuICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgaGVpZ2h0OiA5MCU7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0RGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRpdCA9IHN0eWxlZC5oMWBcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MzNweCkge1xyXG4gICAgICBmb250LXNpemU6IDM1cHggIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTUwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAyOHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgQ29udGVuZWRvciA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogODYlO1xyXG4gICAgbWFyZ2luOiAycmVtIGF1dG87XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRm9ybXVsYXJpb0RpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFBvbGl0aWNhc0RpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2VGFyamV0YSA9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUYXJqZXRhID0gc3R5bGVkLmltZ2BcclxuICAgIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDIzJTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDMzJTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUYXJqZXRhRCA9IHN0eWxlZC5pbWdgXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB3aWR0aDogMzclO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDVweCkge1xyXG4gICAgICB3aWR0aDogMzglO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICB3aWR0aDogNTYlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IElNR0xvZ29zID0gc3R5bGVkLmltZ2BcclxuICAgIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDY1JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XHJcbiAgICAgIGhlaWdodDogOHJlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICBoZWlnaHQ6IDUuNXJlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFR4dFRhcmpldGEgPSBzdHlsZWQucGBcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdkljb25vcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLXRvcDogNC41cmVtO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSWNvbiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICBgO1xyXG5cclxuICBjb25zdCBbYWJpZXJ0b0FudW5jaW9zLCBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3ModHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWwgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xyXG5cclxuICBjb25zdCBbYWJpZXJ0b01vZGFsVCwgY2FtYmlhckFiaWVydG9Nb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW2FiaWVydG9Nb2RhbEQsIGNhbWJpYXJBYmllcnRvTW9kYWxEXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbFQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsVCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWxEID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQodHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWxEID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8c3BhbiBpZD1cImNvbnRhY3RvXCI+PC9zcGFuPlxyXG4gICAgICA8Q29udGVuZWRvckdyaWQ+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPERpdlNlbGxvPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZJbWdcIj5cclxuICAgICAgICAgICAgPEltZ1xyXG4gICAgICAgICAgICAgIHNyYz1cImltZy9zZWxsb2dhcmFudGlhLndlYnBcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIlNlbGxvIGRlIEdhcmFudGlhIEhhbmQgSGVsZCBTb2x1dGlvbnNcIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9EaXZTZWxsbz5cclxuICAgICAgICA8VGl0RGl2PlxyXG4gICAgICAgICAgPFRpdD7CoUNvdGljZSBhaG9yYSE8L1RpdD5cclxuICAgICAgICA8L1RpdERpdj5cclxuICAgICAgICA8Q29udGVuZWRvcj5cclxuICAgICAgICAgIDxGb3JtdWxhcmlvRGl2PlxyXG4gICAgICAgICAgICA8Rm9ybUhhbmRIZWxkIC8+XHJcbiAgICAgICAgICAgIDxQb2xpdGljYXNEaXY+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwicG9saXRpY2FzXCI+XHJcbiAgICAgICAgICAgICAgICBBbCBkYXIgY2xpY2sgZW4gZWwgYm90w7NuIGRlIGVudmlhciBzZSBlc3RhIGFjZXB0YW5kbyBudWVzdHJhe1wiIFwifVxyXG4gICAgICAgICAgICAgICAgPGEgb25DbGljaz17YWJyaXJNb2RhbH0+cG9sw610aWNhIGRlIHByaXZhY2lkYWQuPC9hPlxyXG4gICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgPC9Qb2xpdGljYXNEaXY+XHJcbiAgICAgICAgICA8L0Zvcm11bGFyaW9EaXY+XHJcblxyXG4gICAgICAgICAgPE1vZGFsXHJcbiAgICAgICAgICAgIHNob3c9e2FiaWVydG9BbnVuY2lvc31cclxuICAgICAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cclxuICAgICAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgICAgIDxNb2RhbC5UaXRsZT5BbnVuY2lvczwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgICAgICA8TW9kYWwuQm9keT5cclxuICAgICAgICAgICAgICA8UG9saXRpY2FzIC8+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuQm9keT5cclxuICAgICAgICAgICAgPE1vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cclxuICAgICAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgIDwvTW9kYWw+XHJcbiAgICAgICAgPC9Db250ZW5lZG9yPlxyXG4gICAgICAgIDxEaXZJY29ub3M+XHJcbiAgICAgICAgICA8SWNvbj5cclxuICAgICAgICAgICAgPElNR1RhcmpldGFEXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY3JlaWNvblwiXHJcbiAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyNjQ2MTY4OS9OdWV2b3MlMjBJY29ub3MvQ29waWFfZGVfSUNPTk9TX1dFQl8yX2x3dWtlcC5wbmdcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkVudmlvcyBHcmF0aXNcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxUfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8VHh0VGFyamV0YT5cclxuICAgICAgICAgICAgRW52aW8gR1JBVElTIGEgdG9kYSBsYSBSZXB1YmxpY2EgTWV4aWNhbmEuXHJcbiAgICAgICAgICAgIDwvVHh0VGFyamV0YT5cclxuICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICAgIDxJY29uPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YURcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjcmVpY29uXCJcclxuICAgICAgICAgICAgICBzcmM9XCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kaWhhd3FybnQvaW1hZ2UvdXBsb2FkL3YxNjI1NzYyNDU4L051ZXZvcyUyMEljb25vcy9NZWpvcmVzX3ByZWNpb3NfYWNvcmRlc19hX3N1X2Vjb25vbSVDMyVBRGFfeDV4NnpsLnBuZ1wiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXthYnJpck1vZGFsRH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+XHJcbiAgICAgICAgICAgIE1lam9yZXMgcHJlY2lvcyBhY29yZGVzIGEgc3UgZWNvbm9tw61hLlxyXG4gICAgICAgICAgICA8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICA8L0ljb24+XHJcbiAgICAgICAgPC9EaXZJY29ub3M+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxEaXZUYXJqZXRhPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YVxyXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjUyNDExMjkvSWNvbm9zL1BhZ29fY29uX3RhcmpldGFfMjUweDI1MF9rd2RlbDMucG5nXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJJY29ub19QYWdvXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+wqFBY2VwdGFtb3MgcGFnbyBjb24gdGFyamV0YSE8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICAgIDxJTUdMb2dvc1xyXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjEwNjkvSWNvbm9zL21ldG9kb3NfZGVfcGFnb181MDB4MTIwXzFfemt1b3ljLnBuZ1wiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSW1hZ2VuX0xvZ29QYWdvXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvRGl2VGFyamV0YT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Db250ZW5lZG9yR3JpZD5cclxuXHJcbiAgICAgIDxNb2RhbFxyXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbFR9XHJcbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbFR9XHJcbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgIHNpemU9XCJsZ1wiXHJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcclxuICAgICAgPlxyXG4gICAgICAgIDxNb2RhbC5IZWFkZXIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICA8TW9kYWwuVGl0bGU+RW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYS48L01vZGFsLlRpdGxlPlxyXG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgIENvbnRhbW9zIGNvbiBlbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLCBub3NvdHJvcyBsZSBtYW5kYW1vcyBzaW4gY2FyZ28gYWRpY2lvbmFsLCBcclxuICAgICAgICAgICAgbGFzIGV0aXF1ZXRhcyBxdWUgbmVjZXNpdGUuIEltcHJlc2nDs24gZGUgZXRpcXVldGFzIGVuIHBvbGlvbGVmaW5hLCBwb2xpcHJvcGlsZW5vLCBwb2xpw6lzdGVyLCBwb2xpYW1pZGEgeSBwYXBlbC4gXHJcbiAgICAgICAgICAgIEltcHJlc2nDs24gZGUgZXRpcXVldGFzIGNhcGFjZXMgZGUgcmVzaXN0aXIgYmFqYXMgeSBhbHRhcyB0ZW1wZXJhdHVyYXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cclxuICAgICAgICAgICAgQ2VycmFyXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgPC9Nb2RhbD5cclxuICAgICAgPE1vZGFsXHJcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsRH1cclxuICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsRH1cclxuICAgICAgICBrZXlib2FyZD17ZmFsc2V9XHJcbiAgICAgICAgc2l6ZT1cImxnXCJcclxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxyXG4gICAgICA+XHJcbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cclxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5NZWpvcmVzIHByZWNpb3MgYWNvcmRlcyBhIHN1IGVjb25vbcOtYS48L01vZGFsLlRpdGxlPlxyXG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgIEVuIEhhbmQgSGVsZCBTb2x1dGlvbnMsIG5vcyBjb21wcm9tZXRlbW9zIGEgYnJpbmRhcmxlIGxvcyBtZWpvcmVzIHByZWNpb3MsIFxyXG4gICAgICAgIHBhcmEgbm9zb3Ryb3MgZXMgaW1wb3J0YW50ZSBxdWUgY3VlbnRlIGNvbiBldGlxdWV0YXMgcXVlIGN1YnJhbiBzdXMgbmVjZXNpZGFkZXMgYSBwcmVjaW9zIGFjY2VzaWJsZXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsRH0+XHJcbiAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XHJcbiAgICAgIDwvTW9kYWw+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybUV0aXF1ZXRhcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Img = _styled(\"img\", true ? {\n    target: \"efvklb12\"\n  } : {\n    target: \"efvklb12\",\n    label: \"Img\"\n  })(true ? {\n    name: \"fuo58s\",\n    styles: \"width:70%;height:90%;@media (max-width: 375px){width:70%;height:90%;}\"\n  } : {\n    name: \"fuo58s\",\n    styles: \"width:70%;height:90%;@media (max-width: 375px){width:70%;height:90%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TitDiv = _styled(\"div\", true ? {\n    target: \"efvklb11\"\n  } : {\n    target: \"efvklb11\",\n    label: \"TitDiv\"\n  })(true ? {\n    name: \"1h4mnaf\",\n    styles: \"text-align:center;width:100%;height:3rem\"\n  } : {\n    name: \"1h4mnaf\",\n    styles: \"text-align:center;width:100%;height:3rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Tit = _styled(\"h1\", true ? {\n    target: \"efvklb10\"\n  } : {\n    target: \"efvklb10\",\n    label: \"Tit\"\n  })(true ? {\n    name: \"15stcjl\",\n    styles: \"font-weight:bold;@media (max-width: 833px){font-size:35px!important;}@media (max-width: 550px){font-size:28px!important;}\"\n  } : {\n    name: \"15stcjl\",\n    styles: \"font-weight:bold;@media (max-width: 833px){font-size:35px!important;}@media (max-width: 550px){font-size:28px!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Contenedor = _styled(\"div\", true ? {\n    target: \"efvklb9\"\n  } : {\n    target: \"efvklb9\",\n    label: \"Contenedor\"\n  })(true ? {\n    name: \"9tzj48\",\n    styles: \"width:86%;margin:2rem auto\"\n  } : {\n    name: \"9tzj48\",\n    styles: \"width:86%;margin:2rem auto\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var FormularioDiv = _styled(\"div\", true ? {\n    target: \"efvklb8\"\n  } : {\n    target: \"efvklb8\",\n    label: \"FormularioDiv\"\n  })(true ? {\n    name: \"1twpw2l\",\n    styles: \"width:100%;background-color:#0076c0;color:white;padding:10px;border-radius:0.5rem\"\n  } : {\n    name: \"1twpw2l\",\n    styles: \"width:100%;background-color:#0076c0;color:white;padding:10px;border-radius:0.5rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXEZvcm1FdGlxdWV0YXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeURrQyIsImZpbGUiOiJDOlxcVXNlcnNcXFVTRVJcXERlc2t0b3BcXG51ZXZvIGNvZGlnbyBISFNcXGNvbXBvbmVudHNcXHBlc3RhbmFzXFxGb3JtRXRpcXVldGFzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBNb2RhbCwgQnV0dG9uIH0gZnJvbSBcInJlYWN0LWJvb3RzdHJhcFwiO1xyXG5pbXBvcnQgUG9saXRpY2FzIGZyb20gXCIuLi8uLi9zdGF0aWMvUG9saXRpY2FUZXhcIjtcclxuaW1wb3J0IEZvcm1IYW5kSGVsZCBmcm9tIFwiLi4vLi4vY29uZmlnL0Zvcm1IYW5kSGVsZFwiO1xyXG5pbXBvcnQgdXNlV2luZG93U2l6ZSBmcm9tIFwiLi4vLi4vaG9va3MvdXNlV2luZG93U2l6ZVwiO1xyXG5cclxuY29uc3QgRm9ybUV0aXF1ZXRhcyA9ICgpID0+IHtcclxuICBjb25zdCBDb250ZW5lZG9yR3JpZCA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIG1hcmdpbi10b3A6IDNyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2U2VsbG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDByZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSW1nID0gc3R5bGVkLmltZ2BcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBoZWlnaHQ6IDkwJTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMzc1cHgpIHtcclxuICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgaGVpZ2h0OiA5MCU7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0RGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRpdCA9IHN0eWxlZC5oMWBcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MzNweCkge1xyXG4gICAgICBmb250LXNpemU6IDM1cHggIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTUwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAyOHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgQ29udGVuZWRvciA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogODYlO1xyXG4gICAgbWFyZ2luOiAycmVtIGF1dG87XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRm9ybXVsYXJpb0RpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFBvbGl0aWNhc0RpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2VGFyamV0YSA9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUYXJqZXRhID0gc3R5bGVkLmltZ2BcclxuICAgIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDIzJTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDMzJTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUYXJqZXRhRCA9IHN0eWxlZC5pbWdgXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB3aWR0aDogMzclO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDVweCkge1xyXG4gICAgICB3aWR0aDogMzglO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICB3aWR0aDogNTYlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IElNR0xvZ29zID0gc3R5bGVkLmltZ2BcclxuICAgIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDY1JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XHJcbiAgICAgIGhlaWdodDogOHJlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICBoZWlnaHQ6IDUuNXJlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFR4dFRhcmpldGEgPSBzdHlsZWQucGBcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdkljb25vcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLXRvcDogNC41cmVtO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSWNvbiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICBgO1xyXG5cclxuICBjb25zdCBbYWJpZXJ0b0FudW5jaW9zLCBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3ModHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWwgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xyXG5cclxuICBjb25zdCBbYWJpZXJ0b01vZGFsVCwgY2FtYmlhckFiaWVydG9Nb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW2FiaWVydG9Nb2RhbEQsIGNhbWJpYXJBYmllcnRvTW9kYWxEXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbFQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsVCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWxEID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQodHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWxEID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8c3BhbiBpZD1cImNvbnRhY3RvXCI+PC9zcGFuPlxyXG4gICAgICA8Q29udGVuZWRvckdyaWQ+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPERpdlNlbGxvPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZJbWdcIj5cclxuICAgICAgICAgICAgPEltZ1xyXG4gICAgICAgICAgICAgIHNyYz1cImltZy9zZWxsb2dhcmFudGlhLndlYnBcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIlNlbGxvIGRlIEdhcmFudGlhIEhhbmQgSGVsZCBTb2x1dGlvbnNcIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9EaXZTZWxsbz5cclxuICAgICAgICA8VGl0RGl2PlxyXG4gICAgICAgICAgPFRpdD7CoUNvdGljZSBhaG9yYSE8L1RpdD5cclxuICAgICAgICA8L1RpdERpdj5cclxuICAgICAgICA8Q29udGVuZWRvcj5cclxuICAgICAgICAgIDxGb3JtdWxhcmlvRGl2PlxyXG4gICAgICAgICAgICA8Rm9ybUhhbmRIZWxkIC8+XHJcbiAgICAgICAgICAgIDxQb2xpdGljYXNEaXY+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwicG9saXRpY2FzXCI+XHJcbiAgICAgICAgICAgICAgICBBbCBkYXIgY2xpY2sgZW4gZWwgYm90w7NuIGRlIGVudmlhciBzZSBlc3RhIGFjZXB0YW5kbyBudWVzdHJhe1wiIFwifVxyXG4gICAgICAgICAgICAgICAgPGEgb25DbGljaz17YWJyaXJNb2RhbH0+cG9sw610aWNhIGRlIHByaXZhY2lkYWQuPC9hPlxyXG4gICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgPC9Qb2xpdGljYXNEaXY+XHJcbiAgICAgICAgICA8L0Zvcm11bGFyaW9EaXY+XHJcblxyXG4gICAgICAgICAgPE1vZGFsXHJcbiAgICAgICAgICAgIHNob3c9e2FiaWVydG9BbnVuY2lvc31cclxuICAgICAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cclxuICAgICAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgICAgIDxNb2RhbC5UaXRsZT5BbnVuY2lvczwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgICAgICA8TW9kYWwuQm9keT5cclxuICAgICAgICAgICAgICA8UG9saXRpY2FzIC8+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuQm9keT5cclxuICAgICAgICAgICAgPE1vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cclxuICAgICAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgIDwvTW9kYWw+XHJcbiAgICAgICAgPC9Db250ZW5lZG9yPlxyXG4gICAgICAgIDxEaXZJY29ub3M+XHJcbiAgICAgICAgICA8SWNvbj5cclxuICAgICAgICAgICAgPElNR1RhcmpldGFEXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY3JlaWNvblwiXHJcbiAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyNjQ2MTY4OS9OdWV2b3MlMjBJY29ub3MvQ29waWFfZGVfSUNPTk9TX1dFQl8yX2x3dWtlcC5wbmdcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkVudmlvcyBHcmF0aXNcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxUfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8VHh0VGFyamV0YT5cclxuICAgICAgICAgICAgRW52aW8gR1JBVElTIGEgdG9kYSBsYSBSZXB1YmxpY2EgTWV4aWNhbmEuXHJcbiAgICAgICAgICAgIDwvVHh0VGFyamV0YT5cclxuICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICAgIDxJY29uPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YURcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjcmVpY29uXCJcclxuICAgICAgICAgICAgICBzcmM9XCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kaWhhd3FybnQvaW1hZ2UvdXBsb2FkL3YxNjI1NzYyNDU4L051ZXZvcyUyMEljb25vcy9NZWpvcmVzX3ByZWNpb3NfYWNvcmRlc19hX3N1X2Vjb25vbSVDMyVBRGFfeDV4NnpsLnBuZ1wiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXthYnJpck1vZGFsRH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+XHJcbiAgICAgICAgICAgIE1lam9yZXMgcHJlY2lvcyBhY29yZGVzIGEgc3UgZWNvbm9tw61hLlxyXG4gICAgICAgICAgICA8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICA8L0ljb24+XHJcbiAgICAgICAgPC9EaXZJY29ub3M+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxEaXZUYXJqZXRhPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YVxyXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjUyNDExMjkvSWNvbm9zL1BhZ29fY29uX3RhcmpldGFfMjUweDI1MF9rd2RlbDMucG5nXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJJY29ub19QYWdvXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+wqFBY2VwdGFtb3MgcGFnbyBjb24gdGFyamV0YSE8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICAgIDxJTUdMb2dvc1xyXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjEwNjkvSWNvbm9zL21ldG9kb3NfZGVfcGFnb181MDB4MTIwXzFfemt1b3ljLnBuZ1wiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSW1hZ2VuX0xvZ29QYWdvXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvRGl2VGFyamV0YT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Db250ZW5lZG9yR3JpZD5cclxuXHJcbiAgICAgIDxNb2RhbFxyXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbFR9XHJcbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbFR9XHJcbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgIHNpemU9XCJsZ1wiXHJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcclxuICAgICAgPlxyXG4gICAgICAgIDxNb2RhbC5IZWFkZXIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICA8TW9kYWwuVGl0bGU+RW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYS48L01vZGFsLlRpdGxlPlxyXG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgIENvbnRhbW9zIGNvbiBlbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLCBub3NvdHJvcyBsZSBtYW5kYW1vcyBzaW4gY2FyZ28gYWRpY2lvbmFsLCBcclxuICAgICAgICAgICAgbGFzIGV0aXF1ZXRhcyBxdWUgbmVjZXNpdGUuIEltcHJlc2nDs24gZGUgZXRpcXVldGFzIGVuIHBvbGlvbGVmaW5hLCBwb2xpcHJvcGlsZW5vLCBwb2xpw6lzdGVyLCBwb2xpYW1pZGEgeSBwYXBlbC4gXHJcbiAgICAgICAgICAgIEltcHJlc2nDs24gZGUgZXRpcXVldGFzIGNhcGFjZXMgZGUgcmVzaXN0aXIgYmFqYXMgeSBhbHRhcyB0ZW1wZXJhdHVyYXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cclxuICAgICAgICAgICAgQ2VycmFyXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgPC9Nb2RhbD5cclxuICAgICAgPE1vZGFsXHJcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsRH1cclxuICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsRH1cclxuICAgICAgICBrZXlib2FyZD17ZmFsc2V9XHJcbiAgICAgICAgc2l6ZT1cImxnXCJcclxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxyXG4gICAgICA+XHJcbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cclxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5NZWpvcmVzIHByZWNpb3MgYWNvcmRlcyBhIHN1IGVjb25vbcOtYS48L01vZGFsLlRpdGxlPlxyXG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgIEVuIEhhbmQgSGVsZCBTb2x1dGlvbnMsIG5vcyBjb21wcm9tZXRlbW9zIGEgYnJpbmRhcmxlIGxvcyBtZWpvcmVzIHByZWNpb3MsIFxyXG4gICAgICAgIHBhcmEgbm9zb3Ryb3MgZXMgaW1wb3J0YW50ZSBxdWUgY3VlbnRlIGNvbiBldGlxdWV0YXMgcXVlIGN1YnJhbiBzdXMgbmVjZXNpZGFkZXMgYSBwcmVjaW9zIGFjY2VzaWJsZXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsRH0+XHJcbiAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XHJcbiAgICAgIDwvTW9kYWw+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybUV0aXF1ZXRhcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var PoliticasDiv = _styled(\"div\", true ? {\n    target: \"efvklb7\"\n  } : {\n    target: \"efvklb7\",\n    label: \"PoliticasDiv\"\n  })(true ? {\n    name: \"12dms0z\",\n    styles: \"margin-top:1rem;width:100%\"\n  } : {\n    name: \"12dms0z\",\n    styles: \"margin-top:1rem;width:100%\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivTarjeta = _styled(\"div\", true ? {\n    target: \"efvklb6\"\n  } : {\n    target: \"efvklb6\",\n    label: \"DivTarjeta\"\n  })(true ? {\n    name: \"c903m5\",\n    styles: \"margin:auto;width:100%;text-align:center\"\n  } : {\n    name: \"c903m5\",\n    styles: \"margin:auto;width:100%;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGTarjeta = _styled(\"img\", true ? {\n    target: \"efvklb5\"\n  } : {\n    target: \"efvklb5\",\n    label: \"IMGTarjeta\"\n  })(true ? {\n    name: \"r9y48n\",\n    styles: \"margin:auto!important;width:23%;@media (max-width: 500px){width:33%;}\"\n  } : {\n    name: \"r9y48n\",\n    styles: \"margin:auto!important;width:23%;@media (max-width: 500px){width:33%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGTarjetaD = _styled(\"img\", true ? {\n    target: \"efvklb4\"\n  } : {\n    target: \"efvklb4\",\n    label: \"IMGTarjetaD\"\n  })(true ? {\n    name: \"1y7yo48\",\n    styles: \"cursor:pointer;width:37%;@media (max-width: 605px){width:38%;}@media (max-width: 500px){width:56%;}\"\n  } : {\n    name: \"1y7yo48\",\n    styles: \"cursor:pointer;width:37%;@media (max-width: 605px){width:38%;}@media (max-width: 500px){width:56%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGLogos = _styled(\"img\", true ? {\n    target: \"efvklb3\"\n  } : {\n    target: \"efvklb3\",\n    label: \"IMGLogos\"\n  })(true ? {\n    name: \"13jsrr9\",\n    styles: \"margin:auto!important;@media (max-width: 1500px){width:65%;}@media (max-width: 1100px){width:80%;}@media (max-width: 800px){height:8rem!important;}@media (max-width: 500px){height:5.5rem!important;}\"\n  } : {\n    name: \"13jsrr9\",\n    styles: \"margin:auto!important;@media (max-width: 1500px){width:65%;}@media (max-width: 1100px){width:80%;}@media (max-width: 800px){height:8rem!important;}@media (max-width: 500px){height:5.5rem!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TxtTarjeta = _styled(\"p\", true ? {\n    target: \"efvklb2\"\n  } : {\n    target: \"efvklb2\",\n    label: \"TxtTarjeta\"\n  })(true ? {\n    name: \"ddq6ti\",\n    styles: \"font-size:19px;font-weight:bold\"\n  } : {\n    name: \"ddq6ti\",\n    styles: \"font-size:19px;font-weight:bold\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXEZvcm1FdGlxdWV0YXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0g2QiIsImZpbGUiOiJDOlxcVXNlcnNcXFVTRVJcXERlc2t0b3BcXG51ZXZvIGNvZGlnbyBISFNcXGNvbXBvbmVudHNcXHBlc3RhbmFzXFxGb3JtRXRpcXVldGFzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBNb2RhbCwgQnV0dG9uIH0gZnJvbSBcInJlYWN0LWJvb3RzdHJhcFwiO1xyXG5pbXBvcnQgUG9saXRpY2FzIGZyb20gXCIuLi8uLi9zdGF0aWMvUG9saXRpY2FUZXhcIjtcclxuaW1wb3J0IEZvcm1IYW5kSGVsZCBmcm9tIFwiLi4vLi4vY29uZmlnL0Zvcm1IYW5kSGVsZFwiO1xyXG5pbXBvcnQgdXNlV2luZG93U2l6ZSBmcm9tIFwiLi4vLi4vaG9va3MvdXNlV2luZG93U2l6ZVwiO1xyXG5cclxuY29uc3QgRm9ybUV0aXF1ZXRhcyA9ICgpID0+IHtcclxuICBjb25zdCBDb250ZW5lZG9yR3JpZCA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIG1hcmdpbi10b3A6IDNyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2U2VsbG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDByZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSW1nID0gc3R5bGVkLmltZ2BcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBoZWlnaHQ6IDkwJTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMzc1cHgpIHtcclxuICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgaGVpZ2h0OiA5MCU7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0RGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRpdCA9IHN0eWxlZC5oMWBcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MzNweCkge1xyXG4gICAgICBmb250LXNpemU6IDM1cHggIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTUwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAyOHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgQ29udGVuZWRvciA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogODYlO1xyXG4gICAgbWFyZ2luOiAycmVtIGF1dG87XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRm9ybXVsYXJpb0RpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFBvbGl0aWNhc0RpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2VGFyamV0YSA9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUYXJqZXRhID0gc3R5bGVkLmltZ2BcclxuICAgIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDIzJTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDMzJTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUYXJqZXRhRCA9IHN0eWxlZC5pbWdgXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB3aWR0aDogMzclO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDVweCkge1xyXG4gICAgICB3aWR0aDogMzglO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICB3aWR0aDogNTYlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IElNR0xvZ29zID0gc3R5bGVkLmltZ2BcclxuICAgIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDY1JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XHJcbiAgICAgIGhlaWdodDogOHJlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICBoZWlnaHQ6IDUuNXJlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFR4dFRhcmpldGEgPSBzdHlsZWQucGBcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdkljb25vcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLXRvcDogNC41cmVtO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSWNvbiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICBgO1xyXG5cclxuICBjb25zdCBbYWJpZXJ0b0FudW5jaW9zLCBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3ModHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWwgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xyXG5cclxuICBjb25zdCBbYWJpZXJ0b01vZGFsVCwgY2FtYmlhckFiaWVydG9Nb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW2FiaWVydG9Nb2RhbEQsIGNhbWJpYXJBYmllcnRvTW9kYWxEXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbFQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsVCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWxEID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQodHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWxEID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8c3BhbiBpZD1cImNvbnRhY3RvXCI+PC9zcGFuPlxyXG4gICAgICA8Q29udGVuZWRvckdyaWQ+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPERpdlNlbGxvPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZJbWdcIj5cclxuICAgICAgICAgICAgPEltZ1xyXG4gICAgICAgICAgICAgIHNyYz1cImltZy9zZWxsb2dhcmFudGlhLndlYnBcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIlNlbGxvIGRlIEdhcmFudGlhIEhhbmQgSGVsZCBTb2x1dGlvbnNcIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9EaXZTZWxsbz5cclxuICAgICAgICA8VGl0RGl2PlxyXG4gICAgICAgICAgPFRpdD7CoUNvdGljZSBhaG9yYSE8L1RpdD5cclxuICAgICAgICA8L1RpdERpdj5cclxuICAgICAgICA8Q29udGVuZWRvcj5cclxuICAgICAgICAgIDxGb3JtdWxhcmlvRGl2PlxyXG4gICAgICAgICAgICA8Rm9ybUhhbmRIZWxkIC8+XHJcbiAgICAgICAgICAgIDxQb2xpdGljYXNEaXY+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwicG9saXRpY2FzXCI+XHJcbiAgICAgICAgICAgICAgICBBbCBkYXIgY2xpY2sgZW4gZWwgYm90w7NuIGRlIGVudmlhciBzZSBlc3RhIGFjZXB0YW5kbyBudWVzdHJhe1wiIFwifVxyXG4gICAgICAgICAgICAgICAgPGEgb25DbGljaz17YWJyaXJNb2RhbH0+cG9sw610aWNhIGRlIHByaXZhY2lkYWQuPC9hPlxyXG4gICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgPC9Qb2xpdGljYXNEaXY+XHJcbiAgICAgICAgICA8L0Zvcm11bGFyaW9EaXY+XHJcblxyXG4gICAgICAgICAgPE1vZGFsXHJcbiAgICAgICAgICAgIHNob3c9e2FiaWVydG9BbnVuY2lvc31cclxuICAgICAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cclxuICAgICAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgICAgIDxNb2RhbC5UaXRsZT5BbnVuY2lvczwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgICAgICA8TW9kYWwuQm9keT5cclxuICAgICAgICAgICAgICA8UG9saXRpY2FzIC8+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuQm9keT5cclxuICAgICAgICAgICAgPE1vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cclxuICAgICAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgIDwvTW9kYWw+XHJcbiAgICAgICAgPC9Db250ZW5lZG9yPlxyXG4gICAgICAgIDxEaXZJY29ub3M+XHJcbiAgICAgICAgICA8SWNvbj5cclxuICAgICAgICAgICAgPElNR1RhcmpldGFEXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY3JlaWNvblwiXHJcbiAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyNjQ2MTY4OS9OdWV2b3MlMjBJY29ub3MvQ29waWFfZGVfSUNPTk9TX1dFQl8yX2x3dWtlcC5wbmdcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkVudmlvcyBHcmF0aXNcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxUfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8VHh0VGFyamV0YT5cclxuICAgICAgICAgICAgRW52aW8gR1JBVElTIGEgdG9kYSBsYSBSZXB1YmxpY2EgTWV4aWNhbmEuXHJcbiAgICAgICAgICAgIDwvVHh0VGFyamV0YT5cclxuICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICAgIDxJY29uPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YURcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjcmVpY29uXCJcclxuICAgICAgICAgICAgICBzcmM9XCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kaWhhd3FybnQvaW1hZ2UvdXBsb2FkL3YxNjI1NzYyNDU4L051ZXZvcyUyMEljb25vcy9NZWpvcmVzX3ByZWNpb3NfYWNvcmRlc19hX3N1X2Vjb25vbSVDMyVBRGFfeDV4NnpsLnBuZ1wiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXthYnJpck1vZGFsRH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+XHJcbiAgICAgICAgICAgIE1lam9yZXMgcHJlY2lvcyBhY29yZGVzIGEgc3UgZWNvbm9tw61hLlxyXG4gICAgICAgICAgICA8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICA8L0ljb24+XHJcbiAgICAgICAgPC9EaXZJY29ub3M+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxEaXZUYXJqZXRhPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YVxyXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjUyNDExMjkvSWNvbm9zL1BhZ29fY29uX3RhcmpldGFfMjUweDI1MF9rd2RlbDMucG5nXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJJY29ub19QYWdvXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+wqFBY2VwdGFtb3MgcGFnbyBjb24gdGFyamV0YSE8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICAgIDxJTUdMb2dvc1xyXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjEwNjkvSWNvbm9zL21ldG9kb3NfZGVfcGFnb181MDB4MTIwXzFfemt1b3ljLnBuZ1wiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSW1hZ2VuX0xvZ29QYWdvXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvRGl2VGFyamV0YT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Db250ZW5lZG9yR3JpZD5cclxuXHJcbiAgICAgIDxNb2RhbFxyXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbFR9XHJcbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbFR9XHJcbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgIHNpemU9XCJsZ1wiXHJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcclxuICAgICAgPlxyXG4gICAgICAgIDxNb2RhbC5IZWFkZXIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICA8TW9kYWwuVGl0bGU+RW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYS48L01vZGFsLlRpdGxlPlxyXG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgIENvbnRhbW9zIGNvbiBlbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLCBub3NvdHJvcyBsZSBtYW5kYW1vcyBzaW4gY2FyZ28gYWRpY2lvbmFsLCBcclxuICAgICAgICAgICAgbGFzIGV0aXF1ZXRhcyBxdWUgbmVjZXNpdGUuIEltcHJlc2nDs24gZGUgZXRpcXVldGFzIGVuIHBvbGlvbGVmaW5hLCBwb2xpcHJvcGlsZW5vLCBwb2xpw6lzdGVyLCBwb2xpYW1pZGEgeSBwYXBlbC4gXHJcbiAgICAgICAgICAgIEltcHJlc2nDs24gZGUgZXRpcXVldGFzIGNhcGFjZXMgZGUgcmVzaXN0aXIgYmFqYXMgeSBhbHRhcyB0ZW1wZXJhdHVyYXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cclxuICAgICAgICAgICAgQ2VycmFyXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgPC9Nb2RhbD5cclxuICAgICAgPE1vZGFsXHJcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsRH1cclxuICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsRH1cclxuICAgICAgICBrZXlib2FyZD17ZmFsc2V9XHJcbiAgICAgICAgc2l6ZT1cImxnXCJcclxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxyXG4gICAgICA+XHJcbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cclxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5NZWpvcmVzIHByZWNpb3MgYWNvcmRlcyBhIHN1IGVjb25vbcOtYS48L01vZGFsLlRpdGxlPlxyXG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgIEVuIEhhbmQgSGVsZCBTb2x1dGlvbnMsIG5vcyBjb21wcm9tZXRlbW9zIGEgYnJpbmRhcmxlIGxvcyBtZWpvcmVzIHByZWNpb3MsIFxyXG4gICAgICAgIHBhcmEgbm9zb3Ryb3MgZXMgaW1wb3J0YW50ZSBxdWUgY3VlbnRlIGNvbiBldGlxdWV0YXMgcXVlIGN1YnJhbiBzdXMgbmVjZXNpZGFkZXMgYSBwcmVjaW9zIGFjY2VzaWJsZXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsRH0+XHJcbiAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XHJcbiAgICAgIDwvTW9kYWw+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybUV0aXF1ZXRhcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivIconos = _styled(\"div\", true ? {\n    target: \"efvklb1\"\n  } : {\n    target: \"efvklb1\",\n    label: \"DivIconos\"\n  })(true ? {\n    name: \"1pzfeih\",\n    styles: \"display:flex;margin-top:4.5rem;justify-content:space-around;text-align:center\"\n  } : {\n    name: \"1pzfeih\",\n    styles: \"display:flex;margin-top:4.5rem;justify-content:space-around;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Icon = _styled(\"div\", true ? {\n    target: \"efvklb0\"\n  } : {\n    target: \"efvklb0\",\n    label: \"Icon\"\n  })(true ? {\n    name: \"1d3w5wq\",\n    styles: \"width:100%\"\n  } : {\n    name: \"1d3w5wq\",\n    styles: \"width:100%\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var _useState = useState(false),\n      abiertoAnuncios = _useState[0],\n      cambiarAbiertoAnuncios = _useState[1];\n\n  var abrirModal = function abrirModal() {\n    cambiarAbiertoAnuncios(true);\n  };\n\n  var cerrarModal = function cerrarModal() {\n    cambiarAbiertoAnuncios(false);\n  };\n\n  var size = useWindowSize();\n\n  var _useState2 = useState(false),\n      abiertoModalT = _useState2[0],\n      cambiarAbiertoModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      abiertoModalD = _useState3[0],\n      cambiarAbiertoModalD = _useState3[1];\n\n  var abrirModalT = function abrirModalT() {\n    cambiarAbiertoModal(true);\n  };\n\n  var cerrarModalT = function cerrarModalT() {\n    cambiarAbiertoModal(false);\n  };\n\n  var abrirModalD = function abrirModalD() {\n    cambiarAbiertoModalD(true);\n  };\n\n  var cerrarModalD = function cerrarModalD() {\n    cambiarAbiertoModalD(false);\n  };\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"span\", {\n    id: \"contacto\"\n  }), ___EmotionJSX(ContenedorGrid, null, ___EmotionJSX(DivSello, null, ___EmotionJSX(\"div\", {\n    className: \"DivImg\"\n  }, ___EmotionJSX(Img, {\n    src: \"img/sellogarantia.webp\",\n    alt: \"Sello de Garantia Hand Held Solutions\"\n  }))), ___EmotionJSX(TitDiv, null, ___EmotionJSX(Tit, null, \"\\xA1Cotice ahora!\")), ___EmotionJSX(Contenedor, null, ___EmotionJSX(FormularioDiv, null, ___EmotionJSX(FormHandHeld, null), ___EmotionJSX(PoliticasDiv, null, ___EmotionJSX(\"p\", {\n    className: \"politicas\"\n  }, \"Al dar click en el bot\\xF3n de enviar se esta aceptando nuestra\", \" \", ___EmotionJSX(\"a\", {\n    onClick: abrirModal\n  }, \"pol\\xEDtica de privacidad.\")))), ___EmotionJSX(Modal, {\n    show: abiertoAnuncios,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\"\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true\n  }, ___EmotionJSX(Modal.Title, null, \"Anuncios\")), ___EmotionJSX(Modal.Body, null, ___EmotionJSX(Politicas, null)), ___EmotionJSX(Modal.Footer, null, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal\n  }, \"Cerrar\")))), ___EmotionJSX(DivIconos, null, ___EmotionJSX(Icon, null, ___EmotionJSX(IMGTarjetaD, {\n    className: \"creicon\",\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1626461689/Nuevos%20Iconos/Copia_de_ICONOS_WEB_2_lwukep.png\",\n    alt: \"Envios Gratis\",\n    onClick: abrirModalT\n  }), ___EmotionJSX(TxtTarjeta, null, \"Envio GRATIS a toda la Republica Mexicana.\")), ___EmotionJSX(Icon, null, ___EmotionJSX(IMGTarjetaD, {\n    className: \"creicon\",\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Mejores_precios_acordes_a_su_econom%C3%ADa_x5x6zl.png\",\n    alt: \"Icono Mejores Precios\",\n    onClick: abrirModalD\n  }), ___EmotionJSX(TxtTarjeta, null, \"Mejores precios acordes a su econom\\xEDa.\"))), ___EmotionJSX(\"div\", null, ___EmotionJSX(DivTarjeta, null, ___EmotionJSX(IMGTarjeta, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625241129/Iconos/Pago_con_tarjeta_250x250_kwdel3.png\",\n    alt: \"Icono_Pago\"\n  }), ___EmotionJSX(TxtTarjeta, null, \"\\xA1Aceptamos pago con tarjeta!\"), ___EmotionJSX(IMGLogos, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625761069/Iconos/metodos_de_pago_500x120_1_zkuoyc.png\",\n    alt: \"Imagen_LogoPago\"\n  })))), ___EmotionJSX(Modal, {\n    show: abiertoModalT,\n    onHide: cerrarModalT,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\"\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true\n  }, ___EmotionJSX(Modal.Title, null, \"Env\\xEDo gratis a toda la Rep\\xFAblica Mexicana.\")), ___EmotionJSX(Modal.Body, null, \"Contamos con env\\xEDo gratis a toda la Rep\\xFAblica Mexicana, nosotros le mandamos sin cargo adicional, las etiquetas que necesite. Impresi\\xF3n de etiquetas en poliolefina, polipropileno, poli\\xE9ster, poliamida y papel. Impresi\\xF3n de etiquetas capaces de resistir bajas y altas temperaturas.\"), ___EmotionJSX(Modal.Footer, null, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalD,\n    onHide: cerrarModalD,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\"\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true\n  }, ___EmotionJSX(Modal.Title, null, \"Mejores precios acordes a su econom\\xEDa.\")), ___EmotionJSX(Modal.Body, null, \"En Hand Held Solutions, nos comprometemos a brindarle los mejores precios, para nosotros es importante que cuente con etiquetas que cubran sus necesidades a precios accesibles.\"), ___EmotionJSX(Modal.Footer, null, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalD\n  }, \"Cerrar\"))));\n};\n\nexport default FormEtiquetas;","import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport Header from \"../components/layout/Header\";\nimport EtiquetasH from \"../components/pestanas/EtiquetasH\";\nimport TextoEtiquetas from \"../components/pestanas/TextoEtiquetas\";\nimport FormEtiquetas from \"../components/pestanas/FormEtiquetas\";\nimport BotonFundas from \"../components/pestanas/BotonFundas\";\nimport Ubicacion from \"../components/pestanas/Ubicacion\";\nimport Servicios from \"../components/pestanas/ServiciosCredenciales\";\nimport MapaDuns from \"../components/pestanas/MapaDuns\";\nimport Footer from \"../components/layout/Footer\";\nimport { Modal, Button, Carousel } from \"react-bootstrap\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar Etiquetas = function Etiquetas() {\n  var ContenedorFlexa = _styled(\"div\", true ? {\n    target: \"ecgcexk4\"\n  } : {\n    target: \"ecgcexk4\",\n    label: \"ContenedorFlexa\"\n  })(true ? {\n    name: \"3o1miv\",\n    styles: \"display:flex;@media (max-width: 995px){display:block;}\"\n  } : {\n    name: \"3o1miv\",\n    styles: \"display:flex;@media (max-width: 995px){display:block;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ContenedorFlex = _styled(\"div\", true ? {\n    target: \"ecgcexk3\"\n  } : {\n    target: \"ecgcexk3\",\n    label: \"ContenedorFlex\"\n  })(true ? {\n    name: \"o0r707\",\n    styles: \"display:flex;@media (max-width: 700px){display:block;}\"\n  } : {\n    name: \"o0r707\",\n    styles: \"display:flex;@media (max-width: 700px){display:block;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ContenedorBotona = _styled(\"div\", true ? {\n    target: \"ecgcexk2\"\n  } : {\n    target: \"ecgcexk2\",\n    label: \"ContenedorBotona\"\n  })(true ? {\n    name: \"udt92q\",\n    styles: \"@media (max-width: 995px){display:block;}\"\n  } : {\n    name: \"udt92q\",\n    styles: \"@media (max-width: 995px){display:block;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ImgModal = _styled(\"img\", true ? {\n    target: \"ecgcexk1\"\n  } : {\n    target: \"ecgcexk1\",\n    label: \"ImgModal\"\n  })(true ? {\n    name: \"16na1d5\",\n    styles: \"max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important\"\n  } : {\n    name: \"16na1d5\",\n    styles: \"max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Puntero = _styled(\"a\", true ? {\n    target: \"ecgcexk0\"\n  } : {\n    target: \"ecgcexk0\",\n    label: \"Puntero\"\n  })(true ? {\n    name: \"e0dnmk\",\n    styles: \"cursor:pointer\"\n  } : {\n    name: \"e0dnmk\",\n    styles: \"cursor:pointer\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Redirigir = function Redirigir(e) {\n    e.preventDefault();\n    cambiarAbiertoAnuncios(false);\n    document.location.href = \"/#reparacion\";\n  };\n\n  var _useState = useState(false),\n      abiertoAnuncios = _useState[0],\n      cambiarAbiertoAnuncios = _useState[1];\n\n  var _useState2 = useState(true),\n      abiertoCupon = _useState2[0],\n      cambiarAbiertoCupon = _useState2[1];\n\n  var cerrarModal = function cerrarModal() {\n    cambiarAbiertoAnuncios(false);\n  }; // const cerrarModalCupon = () => {\n  //   cambiarAbiertoCupon(false);\n  //   setTimeout(() => {\n  //     cambiarAbiertoAnuncios(true);\n  //   }, 6000);\n  // };\n\n\n  useEffect(function () {\n    setTimeout(function () {\n      cambiarAbiertoAnuncios(true);\n    }, 6000);\n  }, []);\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Head, null, ___EmotionJSX(\"html\", {\n    lang: \"es\"\n  }), ___EmotionJSX(\"title\", null, \"Impresi\\xF3n de Etiquetas | Etiquetas Adhesivas | Fabricaci\\xF3n de Etiquetas\"), ___EmotionJSX(\"meta\", {\n    name: \"description\",\n    content: \"Somos especialistas en la impresi\\xF3n de etiquetas. Impresi\\xF3n t\\xE9rmico directo y transferencia t\\xE9rmica. Impresi\\xF3n de etiquetas en poliolefina, polipropileno, poli\\xE9ster, poliamida y papel. Impresi\\xF3n de etiquetas para el sector automotriz, control de productos, manufactura, salud, textil y m\\xE1s. Impresi\\xF3n de etiquetas con adhesivos permanentes, removibles y de alta adherencia. Impresi\\xF3n de etiquetas capaces de resistir bajas y altas temperaturas.\\xA1LLame ahora, asistencia inmediata! \"\n  }), ___EmotionJSX(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"/logo-copia.png\"\n  }), ___EmotionJSX(\"meta\", {\n    name: \"keywords\",\n    content: \"Impresi\\xF3n, etiquetas, adhesivas, fabricacion, policarbonato, PET, holograma de seguridad, credencializaci\\xF3n, tarjetas pl\\xE1sticas, elaboraci\\xF3n, dise\\xF1o, impresiones, Certificado, covid, c\\xF3digo QR, empresas, instituciones educativas, asociaciones, eventos, control de acceso, materiales resistentes, materiales duraderos, a domicilio, cotizaci\\xF3n, identificaci\\xF3n.\"\n  }), ___EmotionJSX(\"meta\", {\n    name: \"robots\",\n    content: \"index,follow,all\"\n  }), ___EmotionJSX(\"meta\", {\n    property: \"og:title\",\n    content: \"Hand held para Inventarios | Renta de PDA | Arrendamiento de HandHelds | Terminales Port\\xE1tiles\"\n  }), ___EmotionJSX(\"meta\", {\n    property: \"og:image\",\n    content: \"https://i.ibb.co/42K3Zdn/logo-copia.png\"\n  }), ___EmotionJSX(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), ___EmotionJSX(\"meta\", {\n    property: \"og:description\",\n    content: \"Somos especialistas en la impresi\\xF3n de etiquetas. Impresi\\xF3n t\\xE9rmico directo y transferencia t\\xE9rmica. Impresi\\xF3n de etiquetas en poliolefina, polipropileno, poli\\xE9ster, poliamida y papel. Impresi\\xF3n de etiquetas para el sector automotriz, control de productos, manufactura, salud, textil y m\\xE1s. Impresi\\xF3n de etiquetas con adhesivos permanentes, removibles y de alta adherencia. Impresi\\xF3n de etiquetas capaces de resistir bajas y altas temperaturas.\\xA1LLame ahora, asistencia inmediata!\"\n  }), ___EmotionJSX(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\"\n  }), ___EmotionJSX(\"link\", {\n    rel: \"icon\",\n    type: \"image/png\",\n    sizes: \"160x99\",\n    href: \"https://i.ibb.co/42K3Zdn/logo-copia.png\"\n  }), ___EmotionJSX(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://fonts.gstatic.com\"\n  }), ___EmotionJSX(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Raleway&display=swap\",\n    rel: \"stylesheet\"\n  }), ___EmotionJSX(\"script\", {\n    async: true,\n    src: \"https://www.googletagmanager.com/gtag/js?id=AW-728249895\"\n  }), ___EmotionJSX(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: \"window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'AW-728249895');\"\n    }\n  })), ___EmotionJSX(\"noscript\", {\n    dangerouslySetInnerHTML: {\n      __html: \"<iframe src=\\\"https://www.googletagmanager.com/ns.html?id=GTM-KXHWDC2\\\"\\n          height=\\\"0\\\" width=\\\"0\\\" style=\\\"display:none;visibility:hidden\\\"></iframe>\"\n    }\n  }), ___EmotionJSX(Header, null), ___EmotionJSX(EtiquetasH, null), ___EmotionJSX(ContenedorFlexa, null, ___EmotionJSX(TextoEtiquetas, null), ___EmotionJSX(FormEtiquetas, null)), ___EmotionJSX(ContenedorBotona, null, ___EmotionJSX(BotonFundas, null)), ___EmotionJSX(ContenedorFlex, null, ___EmotionJSX(Ubicacion, null), ___EmotionJSX(Servicios, null)), ___EmotionJSX(MapaDuns, null), ___EmotionJSX(Footer, null), ___EmotionJSX(Modal, {\n    show: abiertoAnuncios,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura ppp\"\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true\n  }, ___EmotionJSX(Modal.Title, null, \"Noticias\")), ___EmotionJSX(Modal.Body, null, ___EmotionJSX(Carousel, null, ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/Promoci\\xF3n_mc9090_funcional_po83sk.webp\",\n    alt: \"Hand Held MC9090\"\n  })), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/evolis_adikio.webp\",\n    alt: \"evolis adikio\"\n  })), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/evolis_impresoras.webp\",\n    alt: \"evolis impresoras\"\n  })), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/impresora_IMZ320.webp\",\n    alt: \"Renta de Impresora IMZ320\"\n  })), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/Promoci\\xF3n_MC9190_sricb6.webp\",\n    alt: \"Hand Held MC9190\"\n  })), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/IMAGEN_ZEBRA_BANNER_800X500_lyqnpu.webp\",\n    alt: \"Zebra Hand Held Impresoras Lectores\"\n  })), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/Copia_de_promoci\\xF3n_redimensi\\xF3n_web_tgvrfp.webp\",\n    alt: \"Hand Held Intermec Honeywell CN51\"\n  })), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(Puntero, {\n    onClick: Redirigir\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/Copia_de_p\\xF3lizas_reparaci\\xF3n_sg0xim.webp\",\n    alt: \"Polizas de reparacion handheld impresoras de etiquetas y lectores\"\n  }))), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(\"a\", {\n    className: \"clicks\",\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098014/banner/publicaci%C3%B3n_nuevo_lanzamiento_ec50_y_ec55_fmwnhz.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/Copia_de_ec50_y_ec55_en_web_kyx6mp.webp\",\n    alt: \"Zebra EC50 EC55\"\n  }))), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/IMAGEN_ZEBRA_BANNER_800X500_vr6p1d.webp\",\n    alt: \"Zebra Hand Held Impresoras Lectores\"\n  })), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(Puntero, {\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098012/banner/EDA61K_FB_o2obod.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/EDA61K_WEB_luqnfs.webp\",\n    alt: \"Hand Held EDA61K Zebra\"\n  }))), ___EmotionJSX(Carousel.Item, null, ___EmotionJSX(Puntero, {\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098010/banner/ck65_FB_1_rj8z3u.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/CK65_WEB_l9akm3.webp\",\n    alt: \"Hand Held CK65 Zebra\"\n  }))))), ___EmotionJSX(Modal.Footer, null, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal\n  }, \"Cerrar\"))));\n};\n\nexport default Etiquetas;"]}}