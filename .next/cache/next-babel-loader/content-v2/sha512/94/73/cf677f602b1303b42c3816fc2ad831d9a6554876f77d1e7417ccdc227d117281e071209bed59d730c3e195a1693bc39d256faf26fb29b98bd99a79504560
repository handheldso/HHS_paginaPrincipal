{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nexport const useForm = (initialState = {}) => {\n  const {\n    0: contacto,\n    1: cambiarContacto\n  } = useState(initialState);\n\n  const leerForm = e => {\n    cambiarContacto(_objectSpread(_objectSpread({}, contacto), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const sinValores = () => {\n    cambiarContacto({\n      nameUser: \"\",\n      emailUser: \"\",\n      phoneNumber: \"\",\n      company: \"\",\n      message: \"\"\n    });\n  };\n\n  const sinValoresSegundoForm = () => {\n    cambiarContacto({\n      nameUser: \"\",\n      emailUser: \"\",\n      phoneNumber: \"\",\n      company: \"\",\n      message: \"\",\n      model: \"\",\n      servicio: \"\",\n      hhnumber: \"\"\n    });\n  };\n\n  return [contacto, leerForm, sinValores, sinValoresSegundoForm];\n};","map":null,"metadata":{},"sourceType":"module"}