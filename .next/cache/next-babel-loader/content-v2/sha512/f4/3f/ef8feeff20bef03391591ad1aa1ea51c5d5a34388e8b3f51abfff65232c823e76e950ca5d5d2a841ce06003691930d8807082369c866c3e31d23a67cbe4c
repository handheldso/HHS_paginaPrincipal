{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React from \"react\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst AyC = () => {\n  const TitImgDiv = _styled(\"div\", true ? {\n    target: \"erbap6t9\"\n  } : {\n    target: \"erbap6t9\",\n    label: \"TitImgDiv\"\n  })(true ? {\n    name: \"1v6s3ge\",\n    styles: \"width:100%;display:flex;@media (max-width: 2000px){margin-bottom:2rem;}@media (max-width: 1230px){margin-bottom:4rem;}@media (max-width: 995px){margin-bottom:7rem;}@media (max-width: 720px){margin-bottom:4rem;}@media (max-width: 638px){margin-bottom:4.5rem;}@media (max-width: 512px){margin-bottom:2rem;}\"\n  } : {\n    name: \"1v6s3ge\",\n    styles: \"width:100%;display:flex;@media (max-width: 2000px){margin-bottom:2rem;}@media (max-width: 1230px){margin-bottom:4rem;}@media (max-width: 995px){margin-bottom:7rem;}@media (max-width: 720px){margin-bottom:4rem;}@media (max-width: 638px){margin-bottom:4.5rem;}@media (max-width: 512px){margin-bottom:2rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIUyAtIGNvcGlhXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcQWNjZXNvcmlvc1RpdEltZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJOEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxudWV2byBjb2RpZ28gSEhTIC0gY29waWFcXGNvbXBvbmVudHNcXHBlc3RhbmFzXFxBY2Nlc29yaW9zVGl0SW1nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5cbmNvbnN0IEF5QyA9ICgpID0+IHtcbiAgY29uc3QgVGl0SW1nRGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDIwMDBweCkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTIzMHB4KSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5OTVweCkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogN3JlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzIwcHgpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDRyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYzOHB4KSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiA0LjVyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUxMnB4KSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBNaXRhZEl6cSA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDUwJTtcbiAgYDtcblxuICBjb25zdCBNaXRhZERlciA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDUwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGA7XG5cbiAgY29uc3QgTGVtYURpdiA9IHN0eWxlZC5kaXZgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzZjMDtcbiAgICB3aWR0aDogNTUlO1xuICAgIG1pbi1oZWlnaHQ6IDQwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDNyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDEycmVtO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDdyZW07XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMDhweCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDZyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc4MnB4KSB7XG4gICAgICBtYXJnaW4tbGVmdDogNS4ycmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NDJweCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDQuMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDU2cHgpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyLjhyZW07XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IExlbWEgPSBzdHlsZWQuaDFgXG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBwYWRkaW5nLXRvcDogOHB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDA4cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzgxcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjk4cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjIwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTQycHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogOXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTZweCkge1xuICAgICAgZm9udC1zaXplOiA4cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ1NnB4KSB7XG4gICAgICBmb250LXNpemU6IDdweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgUkRIRGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogODglO1xuICAgIG1hcmdpbi1sZWZ0OiA3cmVtO1xuICAgIG1hcmdpbi10b3A6IDIuNXJlbTtcbiAgICBib3JkZXItbGVmdDogOHB4IHNvbGlkICMwMDc2YzA7XG4gICAgaGVpZ2h0OiAyNjBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDVweCA1cHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMjUwMHB4KSB7XG4gICAgICBtYXJnaW4tbGVmdDogMS44cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxLjhyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE1MDBweCkge1xuICAgICAgaGVpZ2h0OiAzMDVweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTM0NHB4KSB7XG4gICAgICBoZWlnaHQ6IDIyNXB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNTBweCkge1xuICAgICAgaGVpZ2h0OiAxNzVweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAxMHB4KSB7XG4gICAgICBoZWlnaHQ6IDE4NXB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDg2OXB4KSB7XG4gICAgICBoZWlnaHQ6IDEzMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3ODhweCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDEuOHJlbTtcbiAgICAgIGhlaWdodDogMTQ1cHggIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzMzcHgpIHtcbiAgICAgIGhlaWdodDogMTE1cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDY5OHB4KSB7XG4gICAgICBoZWlnaHQ6IDk1cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUxMnB4KSB7XG4gICAgICBoZWlnaHQ6IDE3NXB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ1NnB4KSB7XG4gICAgICBtYXJnaW4tbGVmdDogMC44cmVtO1xuICAgICAgaGVpZ2h0OiAxNDBweCAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MTJweCkge1xuICAgICAgaGVpZ2h0OiAyMTBweCAhaW1wb3J0YW50O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBSREhUaXQgPSBzdHlsZWQuaDFgXG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDYwcHg7XG4gICAgYm9yZGVyLWJvdHRvbTogOHB4IHNvbGlkICMwMDc2YzA7XG4gICAgYm9yZGVyLXJhZGl1czogMHB4IDBweCA1cHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTgyNXB4KSB7XG4gICAgICBmb250LXNpemU6IDY1cHg7XG4gICAgICB3aWR0aDogNzMlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzM5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogNjBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTY1MHB4KSB7XG4gICAgICBmb250LXNpemU6IDYwcHg7XG4gICAgICB3aWR0aDogNzglO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTYzcHgpIHtcbiAgICAgIHdpZHRoOiA4MyU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE0NzBweCkge1xuICAgICAgZm9udC1zaXplOiA1NXB4O1xuICAgICAgd2lkdGg6IDgzJTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTM0NHB4KSB7XG4gICAgICBmb250LXNpemU6IDUwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyMTVweCkge1xuICAgICAgd2lkdGg6IDg2JTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTE1NXB4KSB7XG4gICAgICBmb250LXNpemU6IDQycHg7XG4gICAgICB3aWR0aDogODMlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDEwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODc5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzg4cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMC4xcmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2OThweCkge1xuICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MjBweCkge1xuICAgICAgZm9udC1zaXplOiAyMXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NDJweCkge1xuICAgICAgZm9udC1zaXplOiAyMXB4O1xuICAgICAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUxMnB4KSB7XG4gICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM1MHB4KSB7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IFNlcnZpY2lvRGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NmMwO1xuICAgIGJvcmRlci1yYWRpdXM6IDBweCA1MHB4IDUwcHggMHB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNTBweCkge1xuICAgICAgd2lkdGg6IDkwJTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTQycHgpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwLjVyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUxMnB4KSB7XG4gICAgICB3aWR0aDogOTAlO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBTZXJ2aWNpb0RpdlR4dCA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XG4gICAgY29sb3I6IHdoaXRlO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE4MjVweCkge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNDcwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTM0NHB4KSB7XG4gICAgICBmb250LXNpemU6IDIzcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgICAgZm9udC1zaXplOiAyMXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDA4cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODczcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzMzcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzMzcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTQycHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTEycHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIHBhZGRpbmctbGVmdDogMC41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTZweCkge1xuICAgICAgZm9udC1zaXplOiAxMXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MTVweCkge1xuICAgICAgZm9udC1zaXplOiA5LjVweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogNy41cHg7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IElNRyA9IHN0eWxlZC5pbWdgXG4gICAgd2lkdGg6IDk1JTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4IDI1cHggMjVweCAyNXB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUxMHB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogMi41cmVtO1xuICAgICAgd2lkdGg6IDk1JTtcbiAgICAgIGhlaWdodDogOTAlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgICAgcGFkZGluZy10b3A6IDIuNXJlbTtcbiAgICAgIHdpZHRoOiA5NSU7XG4gICAgICBoZWlnaHQ6IDkwJTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFRpdEltZ0Rpdj5cbiAgICAgICAgPE1pdGFkSXpxPlxuICAgICAgICAgIDxMZW1hRGl2PlxuICAgICAgICAgICAgPExlbWE+wqFGw4FDSUwsIFLDgVBJRE8gWSBGTEVYSUJMRSE8L0xlbWE+XG4gICAgICAgICAgPC9MZW1hRGl2PlxuICAgICAgICAgIDxSREhEaXY+XG4gICAgICAgICAgICA8UkRIVGl0PkFjY2Vzb3Jpb3MgeSBDb25zdW1pYmxlczwvUkRIVGl0PlxuICAgICAgICAgICAgPFNlcnZpY2lvRGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNkXCI+XG4gICAgICAgICAgICAgICAgPFNlcnZpY2lvRGl2VHh0PlxuICAgICAgICAgICAgICAgICAgVmVudGEgZGUgYWNjZXNvcmlvcyB5IGNvbnN1bWlibGVzLiA8YnIgLz5cbiAgICAgICAgICAgICAgICAgIENhcmNhc2FzLCBiYXRlcsOtYXMsIHJpYmJvbnMsIFN0eWx1cywgZnVuZGFzLCBjYXJnYWRvcmVzIGRlXG4gICAgICAgICAgICAgICAgICBiYXRlcsOtYXMgeSBtw6FzLiA8YnIgLz5cbiAgICAgICAgICAgICAgICAgIEJlbmVmaWNpb3M6XG4gICAgICAgICAgICAgICAgPC9TZXJ2aWNpb0RpdlR4dD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1NlcnZpY2lvRGl2PlxuICAgICAgICAgIDwvUkRIRGl2PlxuICAgICAgICA8L01pdGFkSXpxPlxuICAgICAgICA8TWl0YWREZXI+XG4gICAgICAgICAgPElNR1xuICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyNzMxOTQwMC9wcmluY2lwYWxwZXN0YW5hcy9Db3BpYV9kZV9Db25zdW1pYmxlc18yX3NlNmRveS5wbmdcIlxuICAgICAgICAgICAgYWx0PVwiVmVudGEgZGUgQWNjZXNvcmlvcyB5IENvbnN1bWlibGVzIHBhcmEgSGFuZCBIZWxkcyBJbXByZXNvcmFzIGRlIEV0aXF1ZXRhcyB5IExlY3RvcmVzIGRlIENvZGlnb3NcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvTWl0YWREZXI+XG4gICAgICA8L1RpdEltZ0Rpdj5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEF5QztcbiJdfQ== */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const MitadIzq = _styled(\"div\", true ? {\n    target: \"erbap6t8\"\n  } : {\n    target: \"erbap6t8\",\n    label: \"MitadIzq\"\n  })(true ? {\n    name: \"1t29t6p\",\n    styles: \"width:50%\"\n  } : {\n    name: \"1t29t6p\",\n    styles: \"width:50%\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const MitadDer = _styled(\"div\", true ? {\n    target: \"erbap6t7\"\n  } : {\n    target: \"erbap6t7\",\n    label: \"MitadDer\"\n  })(true ? {\n    name: \"2971l7\",\n    styles: \"width:50%;text-align:center\"\n  } : {\n    name: \"2971l7\",\n    styles: \"width:50%;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const LemaDiv = _styled(\"div\", true ? {\n    target: \"erbap6t6\"\n  } : {\n    target: \"erbap6t6\",\n    label: \"LemaDiv\"\n  })(true ? {\n    name: \"8xbak1\",\n    styles: \"background-color:#0076c0;width:55%;min-height:40px;text-align:center;margin-top:3rem;margin-left:12rem;@media (max-width: 1100px){margin-left:7rem;align-items:center;display:grid;margin-top:1rem;}@media (max-width: 1008px){margin-left:6rem;}@media (max-width: 782px){margin-left:5.2rem;}@media (max-width: 542px){margin-left:4.2rem;}@media (max-width: 456px){margin-left:2.8rem;}\"\n  } : {\n    name: \"8xbak1\",\n    styles: \"background-color:#0076c0;width:55%;min-height:40px;text-align:center;margin-top:3rem;margin-left:12rem;@media (max-width: 1100px){margin-left:7rem;align-items:center;display:grid;margin-top:1rem;}@media (max-width: 1008px){margin-left:6rem;}@media (max-width: 782px){margin-left:5.2rem;}@media (max-width: 542px){margin-left:4.2rem;}@media (max-width: 456px){margin-left:2.8rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Lema = _styled(\"h1\", true ? {\n    target: \"erbap6t5\"\n  } : {\n    target: \"erbap6t5\",\n    label: \"Lema\"\n  })(true ? {\n    name: \"1fokj6k\",\n    styles: \"color:white;font-weight:bold;font-size:20px;padding-top:8px;@media (max-width: 1100px){font-size:18px;}@media (max-width: 1008px){font-size:16px;}@media (max-width: 781px){font-size:14px;}@media (max-width: 698px){font-size:12px;}@media (max-width: 620px){font-size:11px;}@media (max-width: 542px){font-size:9px;}@media (max-width: 456px){font-size:8px;}@media (max-width: 456px){font-size:7px;}\"\n  } : {\n    name: \"1fokj6k\",\n    styles: \"color:white;font-weight:bold;font-size:20px;padding-top:8px;@media (max-width: 1100px){font-size:18px;}@media (max-width: 1008px){font-size:16px;}@media (max-width: 781px){font-size:14px;}@media (max-width: 698px){font-size:12px;}@media (max-width: 620px){font-size:11px;}@media (max-width: 542px){font-size:9px;}@media (max-width: 456px){font-size:8px;}@media (max-width: 456px){font-size:7px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const RDHDiv = _styled(\"div\", true ? {\n    target: \"erbap6t4\"\n  } : {\n    target: \"erbap6t4\",\n    label: \"RDHDiv\"\n  })(true ? {\n    name: \"16xtf1h\",\n    styles: \"width:88%;margin-left:7rem;margin-top:2.5rem;border-left:8px solid #0076c0;height:260px;border-radius:5px 5px 5px 5px;@media (max-width: 2500px){margin-left:1.8rem;}@media (max-width: 1500px){margin-left:1.8rem;}@media (max-width: 1500px){height:305px;}@media (max-width: 1344px){height:225px!important;}@media (max-width: 1150px){height:175px;}@media (max-width: 1010px){height:185px!important;}@media (max-width: 869px){height:130px;}@media (max-width: 788px){margin-left:1.8rem;height:145px!important;}@media (max-width: 733px){height:115px;}@media (max-width: 698px){height:95px;}@media (max-width: 512px){height:175px!important;}@media (max-width: 456px){margin-left:0.8rem;height:140px!important;}@media (max-width: 512px){height:210px!important;}\"\n  } : {\n    name: \"16xtf1h\",\n    styles: \"width:88%;margin-left:7rem;margin-top:2.5rem;border-left:8px solid #0076c0;height:260px;border-radius:5px 5px 5px 5px;@media (max-width: 2500px){margin-left:1.8rem;}@media (max-width: 1500px){margin-left:1.8rem;}@media (max-width: 1500px){height:305px;}@media (max-width: 1344px){height:225px!important;}@media (max-width: 1150px){height:175px;}@media (max-width: 1010px){height:185px!important;}@media (max-width: 869px){height:130px;}@media (max-width: 788px){margin-left:1.8rem;height:145px!important;}@media (max-width: 733px){height:115px;}@media (max-width: 698px){height:95px;}@media (max-width: 512px){height:175px!important;}@media (max-width: 456px){margin-left:0.8rem;height:140px!important;}@media (max-width: 512px){height:210px!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIUyAtIGNvcGlhXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcQWNjZXNvcmlvc1RpdEltZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpSDJCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcbnVldm8gY29kaWdvIEhIUyAtIGNvcGlhXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcQWNjZXNvcmlvc1RpdEltZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuXG5jb25zdCBBeUMgPSAoKSA9PiB7XG4gIGNvbnN0IFRpdEltZ0RpdiA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAyMDAwcHgpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyMzBweCkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNHJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDdyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDcyMHB4KSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MzhweCkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNC41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MTJweCkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgTWl0YWRJenEgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA1MCU7XG4gIGA7XG5cbiAgY29uc3QgTWl0YWREZXIgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA1MCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBgO1xuXG4gIGNvbnN0IExlbWFEaXYgPSBzdHlsZWQuZGl2YFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XG4gICAgd2lkdGg6IDU1JTtcbiAgICBtaW4taGVpZ2h0OiA0MHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAxMnJlbTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3cmVtO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDA4cHgpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA2cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3ODJweCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDUuMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTQycHgpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA0LjJyZW07XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ1NnB4KSB7XG4gICAgICBtYXJnaW4tbGVmdDogMi44cmVtO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBMZW1hID0gc3R5bGVkLmgxYFxuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgcGFkZGluZy10b3A6IDhweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAwOHB4KSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc4MXB4KSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDY5OHB4KSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYyMHB4KSB7XG4gICAgICBmb250LXNpemU6IDExcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU0MnB4KSB7XG4gICAgICBmb250LXNpemU6IDlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDU2cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogOHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTZweCkge1xuICAgICAgZm9udC1zaXplOiA3cHg7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IFJESERpdiA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDg4JTtcbiAgICBtYXJnaW4tbGVmdDogN3JlbTtcbiAgICBtYXJnaW4tdG9wOiAyLjVyZW07XG4gICAgYm9yZGVyLWxlZnQ6IDhweCBzb2xpZCAjMDA3NmMwO1xuICAgIGhlaWdodDogMjYwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4IDVweCA1cHggNXB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDI1MDBweCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDEuOHJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTUwMHB4KSB7XG4gICAgICBtYXJnaW4tbGVmdDogMS44cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcbiAgICAgIGhlaWdodDogMzA1cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNDRweCkge1xuICAgICAgaGVpZ2h0OiAyMjVweCAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTUwcHgpIHtcbiAgICAgIGhlaWdodDogMTc1cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMTBweCkge1xuICAgICAgaGVpZ2h0OiAxODVweCAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4NjlweCkge1xuICAgICAgaGVpZ2h0OiAxMzBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzg4cHgpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxLjhyZW07XG4gICAgICBoZWlnaHQ6IDE0NXB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDczM3B4KSB7XG4gICAgICBoZWlnaHQ6IDExNXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2OThweCkge1xuICAgICAgaGVpZ2h0OiA5NXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MTJweCkge1xuICAgICAgaGVpZ2h0OiAxNzVweCAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTZweCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDAuOHJlbTtcbiAgICAgIGhlaWdodDogMTQwcHggIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTEycHgpIHtcbiAgICAgIGhlaWdodDogMjEwcHggIWltcG9ydGFudDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgUkRIVGl0ID0gc3R5bGVkLmgxYFxuICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiA2MHB4O1xuICAgIGJvcmRlci1ib3R0b206IDhweCBzb2xpZCAjMDA3NmMwO1xuICAgIGJvcmRlci1yYWRpdXM6IDBweCAwcHggNXB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE4MjVweCkge1xuICAgICAgZm9udC1zaXplOiA2NXB4O1xuICAgICAgd2lkdGg6IDczJTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTczOXB4KSB7XG4gICAgICBmb250LXNpemU6IDYwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE2NTBweCkge1xuICAgICAgZm9udC1zaXplOiA2MHB4O1xuICAgICAgd2lkdGg6IDc4JTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTU2M3B4KSB7XG4gICAgICB3aWR0aDogODMlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNDcwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogNTVweDtcbiAgICAgIHdpZHRoOiA4MyU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNDRweCkge1xuICAgICAgZm9udC1zaXplOiA1MHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMjE1cHgpIHtcbiAgICAgIHdpZHRoOiA4NiU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExNTVweCkge1xuICAgICAgZm9udC1zaXplOiA0MnB4O1xuICAgICAgd2lkdGg6IDgzJTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAxMHB4KSB7XG4gICAgICBmb250LXNpemU6IDM2cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDg3OXB4KSB7XG4gICAgICBmb250LXNpemU6IDMycHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc4OHB4KSB7XG4gICAgICBmb250LXNpemU6IDI4cHg7XG4gICAgICBtYXJnaW4tbGVmdDogLTAuMXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjk4cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjIwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTQycHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgICAgIHBhZGRpbmctbGVmdDogMC41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MTJweCkge1xuICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNTBweCkge1xuICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBTZXJ2aWNpb0RpdiA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzZjMDtcbiAgICBib3JkZXItcmFkaXVzOiAwcHggNTBweCA1MHB4IDBweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTUwcHgpIHtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU0MnB4KSB7XG4gICAgICBtYXJnaW4tbGVmdDogMC41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MTJweCkge1xuICAgICAgd2lkdGg6IDkwJTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgU2VydmljaW9EaXZUeHQgPSBzdHlsZWQucGBcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgIGNvbG9yOiB3aGl0ZTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxODI1cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQ3MHB4KSB7XG4gICAgICBmb250LXNpemU6IDI2cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNDRweCkge1xuICAgICAgZm9udC1zaXplOiAyM3B4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAwOHB4KSB7XG4gICAgICBmb250LXNpemU6IDE5cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDg3M3B4KSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDczM3B4KSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDczM3B4KSB7XG4gICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU0MnB4KSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUxMnB4KSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDU2cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDE1cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogOS41cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM1MHB4KSB7XG4gICAgICBmb250LXNpemU6IDcuNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBJTUcgPSBzdHlsZWQuaW1nYFxuICAgIHdpZHRoOiA5NSU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMjVweCAyNXB4IDI1cHggMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MTBweCkge1xuICAgICAgcGFkZGluZy10b3A6IDIuNXJlbTtcbiAgICAgIHdpZHRoOiA5NSU7XG4gICAgICBoZWlnaHQ6IDkwJTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAgIHBhZGRpbmctdG9wOiAyLjVyZW07XG4gICAgICB3aWR0aDogOTUlO1xuICAgICAgaGVpZ2h0OiA5MCU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxUaXRJbWdEaXY+XG4gICAgICAgIDxNaXRhZEl6cT5cbiAgICAgICAgICA8TGVtYURpdj5cbiAgICAgICAgICAgIDxMZW1hPsKhRsOBQ0lMLCBSw4FQSURPIFkgRkxFWElCTEUhPC9MZW1hPlxuICAgICAgICAgIDwvTGVtYURpdj5cbiAgICAgICAgICA8UkRIRGl2PlxuICAgICAgICAgICAgPFJESFRpdD5BY2Nlc29yaW9zIHkgQ29uc3VtaWJsZXM8L1JESFRpdD5cbiAgICAgICAgICAgIDxTZXJ2aWNpb0Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZFwiPlxuICAgICAgICAgICAgICAgIDxTZXJ2aWNpb0RpdlR4dD5cbiAgICAgICAgICAgICAgICAgIFZlbnRhIGRlIGFjY2Vzb3Jpb3MgeSBjb25zdW1pYmxlcy4gPGJyIC8+XG4gICAgICAgICAgICAgICAgICBDYXJjYXNhcywgYmF0ZXLDrWFzLCByaWJib25zLCBTdHlsdXMsIGZ1bmRhcywgY2FyZ2Fkb3JlcyBkZVxuICAgICAgICAgICAgICAgICAgYmF0ZXLDrWFzIHkgbcOhcy4gPGJyIC8+XG4gICAgICAgICAgICAgICAgICBCZW5lZmljaW9zOlxuICAgICAgICAgICAgICAgIDwvU2VydmljaW9EaXZUeHQ+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9TZXJ2aWNpb0Rpdj5cbiAgICAgICAgICA8L1JESERpdj5cbiAgICAgICAgPC9NaXRhZEl6cT5cbiAgICAgICAgPE1pdGFkRGVyPlxuICAgICAgICAgIDxJTUdcbiAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjczMTk0MDAvcHJpbmNpcGFscGVzdGFuYXMvQ29waWFfZGVfQ29uc3VtaWJsZXNfMl9zZTZkb3kucG5nXCJcbiAgICAgICAgICAgIGFsdD1cIlZlbnRhIGRlIEFjY2Vzb3Jpb3MgeSBDb25zdW1pYmxlcyBwYXJhIEhhbmQgSGVsZHMgSW1wcmVzb3JhcyBkZSBFdGlxdWV0YXMgeSBMZWN0b3JlcyBkZSBDb2RpZ29zXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L01pdGFkRGVyPlxuICAgICAgPC9UaXRJbWdEaXY+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBeUM7XG4iXX0= */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const RDHTit = _styled(\"h1\", true ? {\n    target: \"erbap6t3\"\n  } : {\n    target: \"erbap6t3\",\n    label: \"RDHTit\"\n  })(true ? {\n    name: \"1ws1vzm\",\n    styles: \"width:90%!important;padding-left:1rem;font-weight:bold;font-size:60px;border-bottom:8px solid #0076c0;border-radius:0px 0px 5px;@media (max-width: 1825px){font-size:65px;width:73%;}@media (max-width: 1739px){font-size:60px;}@media (max-width: 1650px){font-size:60px;width:78%;}@media (max-width: 1563px){width:83%;}@media (max-width: 1470px){font-size:55px;width:83%;}@media (max-width: 1344px){font-size:50px;}@media (max-width: 1215px){width:86%;}@media (max-width: 1155px){font-size:42px;width:83%;}@media (max-width: 1010px){font-size:36px;}@media (max-width: 879px){font-size:32px;}@media (max-width: 788px){font-size:28px;margin-left:-0.1rem;}@media (max-width: 698px){font-size:24px;}@media (max-width: 620px){font-size:21px;}@media (max-width: 542px){font-size:21px;padding-left:0.5rem;}@media (max-width: 512px){font-size:25px;}@media (max-width: 350px){font-size:20px;}\"\n  } : {\n    name: \"1ws1vzm\",\n    styles: \"width:90%!important;padding-left:1rem;font-weight:bold;font-size:60px;border-bottom:8px solid #0076c0;border-radius:0px 0px 5px;@media (max-width: 1825px){font-size:65px;width:73%;}@media (max-width: 1739px){font-size:60px;}@media (max-width: 1650px){font-size:60px;width:78%;}@media (max-width: 1563px){width:83%;}@media (max-width: 1470px){font-size:55px;width:83%;}@media (max-width: 1344px){font-size:50px;}@media (max-width: 1215px){width:86%;}@media (max-width: 1155px){font-size:42px;width:83%;}@media (max-width: 1010px){font-size:36px;}@media (max-width: 879px){font-size:32px;}@media (max-width: 788px){font-size:28px;margin-left:-0.1rem;}@media (max-width: 698px){font-size:24px;}@media (max-width: 620px){font-size:21px;}@media (max-width: 542px){font-size:21px;padding-left:0.5rem;}@media (max-width: 512px){font-size:25px;}@media (max-width: 350px){font-size:20px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const ServicioDiv = _styled(\"div\", true ? {\n    target: \"erbap6t2\"\n  } : {\n    target: \"erbap6t2\",\n    label: \"ServicioDiv\"\n  })(true ? {\n    name: \"wjjn6n\",\n    styles: \"width:90%!important;margin-left:1rem;margin-top:1rem;background-color:#0076c0;border-radius:0px 50px 50px 0px;@media (max-width: 1150px){width:90%;}@media (max-width: 542px){margin-left:0.5rem;}@media (max-width: 512px){width:90%;}\"\n  } : {\n    name: \"wjjn6n\",\n    styles: \"width:90%!important;margin-left:1rem;margin-top:1rem;background-color:#0076c0;border-radius:0px 50px 50px 0px;@media (max-width: 1150px){width:90%;}@media (max-width: 542px){margin-left:0.5rem;}@media (max-width: 512px){width:90%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const ServicioDivTxt = _styled(\"p\", true ? {\n    target: \"erbap6t1\"\n  } : {\n    target: \"erbap6t1\",\n    label: \"ServicioDivTxt\"\n  })(true ? {\n    name: \"xb1y\",\n    styles: \"font-size:30px;padding-left:1rem;color:white;@media (max-width: 1825px){font-size:30px;}@media (max-width: 1470px){font-size:26px;}@media (max-width: 1344px){font-size:23px;}@media (max-width: 1100px){font-size:21px;}@media (max-width: 1008px){font-size:19px;}@media (max-width: 873px){font-size:16px;}@media (max-width: 733px){font-size:14px;}@media (max-width: 733px){font-size:13px;}@media (max-width: 542px){font-size:12px;}@media (max-width: 512px){font-size:12px;padding-left:0.5rem;}@media (max-width: 456px){font-size:11px;}@media (max-width: 415px){font-size:9.5px;}@media (max-width: 350px){font-size:7.5px;}\"\n  } : {\n    name: \"xb1y\",\n    styles: \"font-size:30px;padding-left:1rem;color:white;@media (max-width: 1825px){font-size:30px;}@media (max-width: 1470px){font-size:26px;}@media (max-width: 1344px){font-size:23px;}@media (max-width: 1100px){font-size:21px;}@media (max-width: 1008px){font-size:19px;}@media (max-width: 873px){font-size:16px;}@media (max-width: 733px){font-size:14px;}@media (max-width: 733px){font-size:13px;}@media (max-width: 542px){font-size:12px;}@media (max-width: 512px){font-size:12px;padding-left:0.5rem;}@media (max-width: 456px){font-size:11px;}@media (max-width: 415px){font-size:9.5px;}@media (max-width: 350px){font-size:7.5px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IMG = _styled(\"img\", true ? {\n    target: \"erbap6t0\"\n  } : {\n    target: \"erbap6t0\",\n    label: \"IMG\"\n  })(true ? {\n    name: \"1ufmkq7\",\n    styles: \"width:95%;height:100%;margin-top:1rem;border-radius:25px 25px 25px 25px;@media (max-width: 510px){padding-top:2.5rem;width:95%;height:90%;}@media (max-width: 400px){padding-top:2.5rem;width:95%;height:90%;}\"\n  } : {\n    name: \"1ufmkq7\",\n    styles: \"width:95%;height:100%;margin-top:1rem;border-radius:25px 25px 25px 25px;@media (max-width: 510px){padding-top:2.5rem;width:95%;height:90%;}@media (max-width: 400px){padding-top:2.5rem;width:95%;height:90%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(TitImgDiv, null, ___EmotionJSX(MitadIzq, null, ___EmotionJSX(LemaDiv, null, ___EmotionJSX(Lema, null, \"\\xA1F\\xC1CIL, R\\xC1PIDO Y FLEXIBLE!\")), ___EmotionJSX(RDHDiv, null, ___EmotionJSX(RDHTit, null, \"Accesorios y Consumibles\"), ___EmotionJSX(ServicioDiv, null, ___EmotionJSX(\"div\", {\n    className: \"sd\"\n  }, ___EmotionJSX(ServicioDivTxt, null, \"Venta de accesorios y consumibles. \", ___EmotionJSX(\"br\", null), \"Carcasas, bater\\xEDas, ribbons, Stylus, fundas, cargadores de bater\\xEDas y m\\xE1s. \", ___EmotionJSX(\"br\", null), \"Beneficios:\"))))), ___EmotionJSX(MitadDer, null, ___EmotionJSX(IMG, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1627319400/principalpestanas/Copia_de_Consumibles_2_se6doy.png\",\n    alt: \"Venta de Accesorios y Consumibles para Hand Helds Impresoras de Etiquetas y Lectores de Codigos\"\n  }))));\n};\n\nexport default AyC;","map":null,"metadata":{},"sourceType":"module"}