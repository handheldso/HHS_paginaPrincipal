{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport Header from \"../components/layout/Header\";\nimport VentaH from \"../components/pestanas/VentaH\";\nimport IconosVentaGeneral from \"../components/pestanas/IconosVentaGeneral\";\nimport Form from \"../components/pestanas/Form\";\nimport Ubicacion from \"../components/pestanas/Ubicacion\";\nimport Servicios from \"../components/pestanas/DnuestrosS\";\nimport MapaDuns from \"../components/pestanas/MapaDuns\";\nimport BotonesMovilCinco from \"../components/pestanas/BotonesMovilCinco\";\nimport Footer from \"../components/layout/Footer\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst Vhandhelds = () => {\n  const ContenedorFlexa = _styled(\"div\", true ? {\n    target: \"etpuw8v3\"\n  } : {\n    target: \"etpuw8v3\",\n    label: \"ContenedorFlexa\"\n  })(true ? {\n    name: \"3o1miv\",\n    styles: \"display:flex;@media (max-width: 995px){display:block;}\"\n  } : {\n    name: \"3o1miv\",\n    styles: \"display:flex;@media (max-width: 995px){display:block;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const ContenedorFlex = _styled(\"div\", true ? {\n    target: \"etpuw8v2\"\n  } : {\n    target: \"etpuw8v2\",\n    label: \"ContenedorFlex\"\n  })(true ? {\n    name: \"o0r707\",\n    styles: \"display:flex;@media (max-width: 700px){display:block;}\"\n  } : {\n    name: \"o0r707\",\n    styles: \"display:flex;@media (max-width: 700px){display:block;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcY29kaWdvIGRlIHBydWViYSBISFNcXHBhZ2VzXFx2ZW50YS1kZS1oYW5kaGVsZHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0JtQyIsImZpbGUiOiJDOlxcVXNlcnNcXFVTRVJcXERlc2t0b3BcXGNvZGlnbyBkZSBwcnVlYmEgSEhTXFxwYWdlc1xcdmVudGEtZGUtaGFuZGhlbGRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IEhlYWRlciBmcm9tIFwiLi4vY29tcG9uZW50cy9sYXlvdXQvSGVhZGVyXCI7XG5pbXBvcnQgVmVudGFIIGZyb20gXCIuLi9jb21wb25lbnRzL3Blc3RhbmFzL1ZlbnRhSFwiO1xuaW1wb3J0IEljb25vc1ZlbnRhR2VuZXJhbCBmcm9tIFwiLi4vY29tcG9uZW50cy9wZXN0YW5hcy9JY29ub3NWZW50YUdlbmVyYWxcIjtcbmltcG9ydCBGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL3Blc3RhbmFzL0Zvcm1cIjtcbmltcG9ydCBVYmljYWNpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvcGVzdGFuYXMvVWJpY2FjaW9uXCI7XG5pbXBvcnQgU2VydmljaW9zIGZyb20gXCIuLi9jb21wb25lbnRzL3Blc3RhbmFzL0RudWVzdHJvc1NcIjtcbmltcG9ydCBNYXBhRHVucyBmcm9tIFwiLi4vY29tcG9uZW50cy9wZXN0YW5hcy9NYXBhRHVuc1wiO1xuaW1wb3J0IEJvdG9uZXNNb3ZpbENpbmNvIGZyb20gXCIuLi9jb21wb25lbnRzL3Blc3RhbmFzL0JvdG9uZXNNb3ZpbENpbmNvXCI7XG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuLi9jb21wb25lbnRzL2xheW91dC9Gb290ZXJcIjtcbmltcG9ydCB7IE1vZGFsLCBCdXR0b24gfSBmcm9tIFwicmVhY3QtYm9vdHN0cmFwXCI7XG5cbmNvbnN0IFZoYW5kaGVsZHMgPSAoKSA9PiB7XG4gIGNvbnN0IENvbnRlbmVkb3JGbGV4YSA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5OTVweCkge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IENvbnRlbmVkb3JGbGV4ID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQ29udGVuZWRvckJvdG9uYSA9IHN0eWxlZC5kaXZgXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgSW1nTW9kYWwgPSBzdHlsZWQuaW1nYFxuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIG1pbi13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIG1heC1oZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbiAgICBtaW4taGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICBgO1xuXG4gIGNvbnN0IFthYmllcnRvQW51bmNpb3MsIGNhbWJpYXJBYmllcnRvQW51bmNpb3NdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbYWJpZXJ0b0N1cG9uLCBjYW1iaWFyQWJpZXJ0b0N1cG9uXSA9IHVzZVN0YXRlKHRydWUpO1xuXG4gIGNvbnN0IGNlcnJhck1vZGFsID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3MoZmFsc2UpO1xuICB9O1xuXG4gIC8vICBjb25zdCBjZXJyYXJNb2RhbEN1cG9uID0gKCkgPT4ge1xuICAvLyAgICBjYW1iaWFyQWJpZXJ0b0N1cG9uKGZhbHNlKTtcbiAgLy8gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gIC8vICAgICAgY2FtYmlhckFiaWVydG9BbnVuY2lvcyh0cnVlKTtcbiAgLy8gICAgfSwgNjAwMCk7XG4gIC8vICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKHRydWUpO1xuICAgIH0sIDYwMDApO1xuICB9LCBbXSlcblxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJ5YVwiPlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDxodG1sIGxhbmc9XCJlc1wiIC8+XG4gICAgICAgIDx0aXRsZT5cbiAgICAgICAgICBWZW50YSBkZSBIYW5kaGVsZHMgfCBIYW5kaGVsZCBIb25leXdlbGwgeSBaZWJyYSBhIFByZWNpb3MgQWNjZXNpYmxlcyB8IFBEQVxuICAgICAgICAgIHBhcmEgaW52ZW50YXJpb3NcbiAgICAgICAgPC90aXRsZT5cbiAgICAgICAgPG1ldGFcbiAgICAgICAgICBuYW1lPVwiZGVzY3JpcHRpb25cIlxuICAgICAgICAgIGNvbnRlbnQ9XCJWZW50YSBkZSBUZXJtaW5hbCBQb3J0w6F0aWwgWmVicmEgeSBIb25leXdlbGwgwqFBc2Vzb3LDrWEgQ29tZXJjaWFsIHkgVMOpY25pY2EgcGFyYSBsYSBFbGVjY2nDs24gZGUgbG9zIEVxdWlwb3MgSGFuZGhlbGQgQWRlY3VhZG9zISBDb250YW1vcyBjb24gRXF1aXBvcyBQREEgY29uIFNpc3RlbWEgT3BlcmF0aXZvIEFuZHJvaWQgeSBXaW5kb3dzIE1vYmlsZS4gwqFFcXVpcG8gRGVtbyBTaW4gQ29zdG8gcGFyYSBQcnVlYmFzIGVuIHN1cyBJbnN0YWxhY2lvbmVzIVwiXG4gICAgICAgIC8+XG4gICAgICAgIDxsaW5rIHJlbD1cInNob3J0Y3V0IGljb25cIiBocmVmPVwiL2xvZ28tY29waWEucG5nXCIgLz5cbiAgICAgICAgPG1ldGFcbiAgICAgICAgICBuYW1lPVwia2V5d29yZHNcIlxuICAgICAgICAgIGNvbnRlbnQ9XCJWZW50YSwgY29tcHJhLCBwcmVjaW8sIGhhbmQgaGVsZCwgaGFuZGhlbGQsIFBEQSwgdGVybWluYWwgcG9ydMOhdGlsLCB0ZXJtaW5hbCBkZSBkYXRvcywgaG9uZXl3ZWxsLCBpbnRlcm1lYywgc3ltYm9sLCBtb3Rvcm9sYSwgemVicmEsIGRpc3Bvc2l0aXZvcyBtw7N2aWxlcywgZXF1aXBvIGRlIHVzbyBydWRvXCJcbiAgICAgICAgLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInJvYm90c1wiIGNvbnRlbnQ9XCJpbmRleCxmb2xsb3csYWxsXCIgLz5cbiAgICAgICAgPG1ldGFcbiAgICAgICAgICBwcm9wZXJ0eT1cIm9nOnRpdGxlXCJcbiAgICAgICAgICBjb250ZW50PVwiVmVudGEgZGUgSGFuZGhlbGRzIHwgSGFuZGhlbGQgSG9uZXl3ZWxsIHkgWmVicmEgYSBQcmVjaW9zIEFjY2VzaWJsZXMgfCBQREEgcGFyYSBpbnZlbnRhcmlvc1wiXG4gICAgICAgIC8+XG4gICAgICAgIDxtZXRhXG4gICAgICAgICAgcHJvcGVydHk9XCJvZzppbWFnZVwiXG4gICAgICAgICAgY29udGVudD1cImh0dHBzOi8vaS5pYmIuY28vNDJLM1pkbi9sb2dvLWNvcGlhLnBuZ1wiXG4gICAgICAgIC8+XG4gICAgICAgIDxtZXRhIHByb3BlcnR5PVwib2c6dHlwZVwiIGNvbnRlbnQ9XCJ3ZWJzaXRlXCIgLz5cbiAgICAgICAgPG1ldGFcbiAgICAgICAgICBwcm9wZXJ0eT1cIm9nOmRlc2NyaXB0aW9uXCJcbiAgICAgICAgICBjb250ZW50PVwiVmVudGEgZGUgVGVybWluYWwgUG9ydMOhdGlsIFplYnJhIHkgSG9uZXl3ZWxsIMKhQXNlc29yw61hIENvbWVyY2lhbCB5IFTDqWNuaWNhIHBhcmEgbGEgRWxlY2Npw7NuIGRlIGxvcyBFcXVpcG9zIEhhbmRoZWxkIEFkZWN1YWRvcyEgQ29udGFtb3MgY29uIEVxdWlwb3MgUERBIGNvbiBTaXN0ZW1hIE9wZXJhdGl2byBBbmRyb2lkIHkgV2luZG93cyBNb2JpbGUuIMKhRXF1aXBvIERlbW8gU2luIENvc3RvIHBhcmEgUHJ1ZWJhcyBlbiBzdXMgSW5zdGFsYWNpb25lcyFcIlxuICAgICAgICAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwidHdpdHRlcjpjYXJkXCIgY29udGVudD1cInN1bW1hcnlfbGFyZ2VfaW1hZ2VcIiAvPlxuICAgICAgICA8bGlua1xuICAgICAgICAgIHJlbD1cImljb25cIlxuICAgICAgICAgIHR5cGU9XCJpbWFnZS9wbmdcIlxuICAgICAgICAgIHNpemVzPVwiMTYweDk5XCJcbiAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9pLmliYi5jby80MkszWmRuL2xvZ28tY29waWEucG5nXCJcbiAgICAgICAgLz5cbiAgICAgICAgPGxpbmsgcmVsPVwicHJlY29ubmVjdFwiIGhyZWY9XCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tXCIgLz5cbiAgICAgICAgPGxpbmtcbiAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1SYWxld2F5JmRpc3BsYXk9c3dhcFwiXG4gICAgICAgICAgcmVsPVwic3R5bGVzaGVldFwiXG4gICAgICAgIC8+XG4gICAgICAgIDxzY3JpcHRcbiAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17e1xuICAgICAgICAgICAgX19odG1sOiBgKGZ1bmN0aW9uKHcsZCxzLGwsaSl7d1tsXT13W2xdfHxbXTt3W2xdLnB1c2goeydndG0uc3RhcnQnOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sXG4gICAgICAgICAgICAgICAgaj1kLmNyZWF0ZUVsZW1lbnQocyksZGw9bCE9J2RhdGFMYXllcic/JyZsPScrbDonJztqLmFzeW5jPXRydWU7ai5zcmM9XG4gICAgICAgICAgICAgICAgJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0bS5qcz9pZD0nK2krZGw7Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqLGYpO1xuICAgICAgICAgICAgICAgIH0pKHdpbmRvdyxkb2N1bWVudCwnc2NyaXB0JywnZGF0YUxheWVyJywnR1RNLUtYSFdEQzInKTtgLFxuICAgICAgICAgIH19XG4gICAgICAgID48L3NjcmlwdD5cblxuICAgICAgICB7LyogRXN0byBlcyBwYXJhIHRhd2sgKi99XG4gICAgICAgIDxzY3JpcHRcbiAgICAgICAgICBhc3luY1xuICAgICAgICAgIHNyYz1cImh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0YWcvanM/aWQ9QVctNzI4MjQ5ODk1XCJcbiAgICAgICAgPjwvc2NyaXB0PlxuICAgICAgICA8c2NyaXB0XG4gICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgICAgICAgIF9faHRtbDogYHdpbmRvdy5kYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdOyBmdW5jdGlvbiBndGFnKCl7ZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKTt9IGd0YWcoJ2pzJywgbmV3IERhdGUoKSk7IGd0YWcoJ2NvbmZpZycsICdBVy03MjgyNDk4OTUnKTtgLFxuICAgICAgICAgIH19XG4gICAgICAgID48L3NjcmlwdD5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgPG5vc2NyaXB0XG4gICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7XG4gICAgICAgICAgX19odG1sOiBgPGlmcmFtZSBzcmM9XCJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS1LWEhXREMyXCJcbiAgICAgICAgICBoZWlnaHQ9XCIwXCIgd2lkdGg9XCIwXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW5cIj48L2lmcmFtZT5gLFxuICAgICAgICB9fVxuICAgICAgPjwvbm9zY3JpcHQ+XG5cbiAgICAgIDxIZWFkZXIgLz5cblxuICAgICAgPFZlbnRhSCAvPlxuXG4gICAgICA8Q29udGVuZWRvckZsZXhhPlxuICAgICAgICA8SWNvbm9zVmVudGFHZW5lcmFsXG4gICAgICAgICAgdW5vaT1cIi9pbWcvSGFuZGhlbGRzIGFkZWN1YWRhcyBjb24gc2lzdGVtYSBvcGVyYXRpdm8gQW5kcm9pZCB5IFdpbmRvd3MgTW9iaWxlLndlYnBcIlxuICAgICAgICAgIHVub209XCJIYW5kaGVsZHMgYWRlY3VhZGFzIGNvbiBzaXN0ZW1hIG9wZXJhdGl2byBBbmRyb2lkIHkgV2luZG93c1xuICAgICAgICBNb2JpbGUuXCJcbiAgICAgICAgICBkb3NtPVwiwr9OZWNlc2l0YSBkYXIgbWFudGVuaW1pZW50byBhIHN1cyBoYW5kaGVsZHM/LlwiXG4gICAgICAgICAgdHJlc209XCLCv05lY2VzaXRhIHVuIHBsYW4gZGUgcmVudGEgcGFyYSBoYW5kaGVsZHM/LlwiXG4gICAgICAgICAgbHVubz1cInJlcGFyYWNpb24tZGUtaGFuZGhlbGRzXCJcbiAgICAgICAgICBsZG9zPVwicmVudGEtZGUtaGFuZGhlbGRzXCJcbiAgICAgICAgLz5cbiAgICAgICAgPEZvcm0gLz5cbiAgICAgIDwvQ29udGVuZWRvckZsZXhhPlxuXG4gICAgICA8Q29udGVuZWRvckJvdG9uYT5cbiAgICAgICAgPEJvdG9uZXNNb3ZpbENpbmNvXG4gICAgICAgICAgbXVubz1cIsK/TmVjZXNpdGEgZGFyIG1hbnRlbmltaWVudG8gYSBzdXMgaGFuZGhlbGRzPy5cIlxuICAgICAgICAgIG1kb3M9XCLCoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZXBhcmFjacOzbiFcIlxuICAgICAgICAgIG10cmVzPVwiwr9OZWNlc2l0YSB1biBwbGFuIGRlIHJlbnRhIHBhcmEgaGFuZGhlbGRzPy5cIlxuICAgICAgICAgIG1jdWF0cm89XCLCoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZW50YSFcIlxuICAgICAgICAgIG1jaW5jbz1cIkFkcXVpZXJhIGxvcyBhY2Nlc29yaW9zIHkgY29uc3VtaWJsZXMgcXVlIG5lY2VzaXRhLlwiXG4gICAgICAgICAgbXNlaXM9XCLCoUNvbnTDoWN0ZW5vcyFcIlxuICAgICAgICAgIG1zaWV0ZT0nUG9uZW1vcyBhIHN1IGRpc3Bvc2ljacOzbiBsYSBzb2x1Y2nDs24gXCJEU0RcIiBwYXJhIHZlbnRhIGVuIHJ1dGEuJ1xuICAgICAgICAgIG1vY2hvPVwiwqFDb27Ds3pjYWxvIVwiXG4gICAgICAgICAgbW51ZXZlPVwiQ29udGFtb3MgY29uIGZ1bmRhcyBkaXNlw7FhZGFzIGEgbGEgbWVkaWRhIHBhcmEgY3VtcGxpciBjb24gc3VzIG5lY2VzaWRhZGVzLlwiXG4gICAgICAgICAgbWRpZXo9XCLCoUFkcXVpZXJhIGxhIHByb3RlY2Npw7NuIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4hXCJcbiAgICAgICAgICBsdW5vPVwicmVwYXJhY2lvbi1kZS1oYW5kaGVsZHNcIlxuICAgICAgICAgIGxkb3M9XCJyZW50YS1kZS1oYW5kaGVsZHNcIlxuICAgICAgICAgIGx0cmVzPVwidmVudGEtZGUtYWNjZXNvcmlvcy15LWNvbnN1bWlibGVzXCJcbiAgICAgICAgICBsY3VhdHJvPVwiRFNELXZlbnRhLWVuLXJ1dGFcIlxuICAgICAgICAgIGxjaW5jbz1cInZlbnRhLWZ1bmRhcy1oYW5kaGVsZC1pbXByZXNvcmEtcG9ydGF0aWxcIlxuICAgICAgICAvPlxuICAgICAgPC9Db250ZW5lZG9yQm90b25hPlxuXG4gICAgICA8Q29udGVuZWRvckZsZXg+XG4gICAgICAgIDxVYmljYWNpb24gLz5cbiAgICAgICAgPFNlcnZpY2lvcyAvPlxuICAgICAgPC9Db250ZW5lZG9yRmxleD5cblxuICAgICAgPE1hcGFEdW5zIC8+XG5cbiAgICAgIDxGb290ZXIgLz5cblxuICAgICAgey8qIHs8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b0N1cG9ufVxuICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsQ3Vwb259XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cIm1kXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhIHBwcCBcIlxuICAgICAgPlxuICAgICAgICA8TW9kYWwuQm9keT5cbiAgICAgICAgICA8SW1nTW9kYWwgc3JjPVwiaW1nL2N1cG9uLndlYnBcIiBhbHQ9XCJjdXBvbiBoYW5kIGhlbGRcIiAvPlxuICAgICAgICA8L01vZGFsLkJvZHk+XG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XG4gICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwibGlnaHRcIiBvbkNsaWNrPXtjZXJyYXJNb2RhbEN1cG9ufT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+fSAqL31cblxuICAgICAgPE1vZGFsXG4gICAgICAgIHNob3c9e2FiaWVydG9BbnVuY2lvc31cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxuICAgICAgICBzaXplPVwibGdcIlxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmEgcHBwIFwiXG4gICAgICA+XG4gICAgICAgIDxNb2RhbC5Cb2R5PlxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcmVudGEtZGUtaGFuZGhlbGRzXCI+XG4gICAgICAgICAgICA8SW1nTW9kYWxcbiAgICAgICAgICAgICAgc3JjPVwiaW1nL1JWaGFuZGhlbGRzLndlYnBcIlxuICAgICAgICAgICAgICBhbHQ9XCJlbmxhY2UgcmVudGEgdmVudGEgZGUgaGFuZCBoZWxkXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9MaW5rPlxuICAgICAgICA8L01vZGFsLkJvZHk+XG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XG4gICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwibGlnaHRcIiBvbkNsaWNrPXtjZXJyYXJNb2RhbH0+XG4gICAgICAgICAgICBDZXJyYXJcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICA8L01vZGFsPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVmhhbmRoZWxkcztcbiJdfQ== */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const ContenedorBotona = _styled(\"div\", true ? {\n    target: \"etpuw8v1\"\n  } : {\n    target: \"etpuw8v1\",\n    label: \"ContenedorBotona\"\n  })(true ? {\n    name: \"udt92q\",\n    styles: \"@media (max-width: 995px){display:block;}\"\n  } : {\n    name: \"udt92q\",\n    styles: \"@media (max-width: 995px){display:block;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const ImgModal = _styled(\"img\", true ? {\n    target: \"etpuw8v0\"\n  } : {\n    target: \"etpuw8v0\",\n    label: \"ImgModal\"\n  })(true ? {\n    name: \"1czw170\",\n    styles: \"max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important;cursor:pointer\"\n  } : {\n    name: \"1czw170\",\n    styles: \"max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important;cursor:pointer\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const {\n    0: abiertoAnuncios,\n    1: cambiarAbiertoAnuncios\n  } = useState(false);\n  const {\n    0: abiertoCupon,\n    1: cambiarAbiertoCupon\n  } = useState(true);\n\n  const cerrarModal = () => {\n    cambiarAbiertoAnuncios(false);\n  }; //  const cerrarModalCupon = () => {\n  //    cambiarAbiertoCupon(false);\n  //    setTimeout(() => {\n  //      cambiarAbiertoAnuncios(true);\n  //    }, 6000);\n  //  };\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      cambiarAbiertoAnuncios(true);\n    }, 6000);\n  }, []);\n  return ___EmotionJSX(\"div\", {\n    className: \"ya\"\n  }, ___EmotionJSX(Head, null, ___EmotionJSX(\"html\", {\n    lang: \"es\"\n  }), ___EmotionJSX(\"title\", null, \"Venta de Handhelds | Handheld Honeywell y Zebra a Precios Accesibles | PDA para inventarios\"), ___EmotionJSX(\"meta\", {\n    name: \"description\",\n    content: \"Venta de Terminal Port\\xE1til Zebra y Honeywell \\xA1Asesor\\xEDa Comercial y T\\xE9cnica para la Elecci\\xF3n de los Equipos Handheld Adecuados! Contamos con Equipos PDA con Sistema Operativo Android y Windows Mobile. \\xA1Equipo Demo Sin Costo para Pruebas en sus Instalaciones!\"\n  }), ___EmotionJSX(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"/logo-copia.png\"\n  }), ___EmotionJSX(\"meta\", {\n    name: \"keywords\",\n    content: \"Venta, compra, precio, hand held, handheld, PDA, terminal port\\xE1til, terminal de datos, honeywell, intermec, symbol, motorola, zebra, dispositivos m\\xF3viles, equipo de uso rudo\"\n  }), ___EmotionJSX(\"meta\", {\n    name: \"robots\",\n    content: \"index,follow,all\"\n  }), ___EmotionJSX(\"meta\", {\n    property: \"og:title\",\n    content: \"Venta de Handhelds | Handheld Honeywell y Zebra a Precios Accesibles | PDA para inventarios\"\n  }), ___EmotionJSX(\"meta\", {\n    property: \"og:image\",\n    content: \"https://i.ibb.co/42K3Zdn/logo-copia.png\"\n  }), ___EmotionJSX(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), ___EmotionJSX(\"meta\", {\n    property: \"og:description\",\n    content: \"Venta de Terminal Port\\xE1til Zebra y Honeywell \\xA1Asesor\\xEDa Comercial y T\\xE9cnica para la Elecci\\xF3n de los Equipos Handheld Adecuados! Contamos con Equipos PDA con Sistema Operativo Android y Windows Mobile. \\xA1Equipo Demo Sin Costo para Pruebas en sus Instalaciones!\"\n  }), ___EmotionJSX(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\"\n  }), ___EmotionJSX(\"link\", {\n    rel: \"icon\",\n    type: \"image/png\",\n    sizes: \"160x99\",\n    href: \"https://i.ibb.co/42K3Zdn/logo-copia.png\"\n  }), ___EmotionJSX(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://fonts.gstatic.com\"\n  }), ___EmotionJSX(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Raleway&display=swap\",\n    rel: \"stylesheet\"\n  }), ___EmotionJSX(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n                j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n                'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n                })(window,document,'script','dataLayer','GTM-KXHWDC2');`\n    }\n  }), ___EmotionJSX(\"script\", {\n    async: true,\n    src: \"https://www.googletagmanager.com/gtag/js?id=AW-728249895\"\n  }), ___EmotionJSX(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'AW-728249895');`\n    }\n  })), ___EmotionJSX(\"noscript\", {\n    dangerouslySetInnerHTML: {\n      __html: `<iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-KXHWDC2\"\n          height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>`\n    }\n  }), ___EmotionJSX(Header, null), ___EmotionJSX(VentaH, null), ___EmotionJSX(ContenedorFlexa, null, ___EmotionJSX(IconosVentaGeneral, {\n    unoi: \"/img/Handhelds adecuadas con sistema operativo Android y Windows Mobile.webp\",\n    unom: \"Handhelds adecuadas con sistema operativo Android y Windows Mobile.\",\n    dosm: \"\\xBFNecesita dar mantenimiento a sus handhelds?.\",\n    tresm: \"\\xBFNecesita un plan de renta para handhelds?.\",\n    luno: \"reparacion-de-handhelds\",\n    ldos: \"renta-de-handhelds\"\n  }), ___EmotionJSX(Form, null)), ___EmotionJSX(ContenedorBotona, null, ___EmotionJSX(BotonesMovilCinco, {\n    muno: \"\\xBFNecesita dar mantenimiento a sus handhelds?.\",\n    mdos: \"\\xA1Conozca nuestro servicio de Reparaci\\xF3n!\",\n    mtres: \"\\xBFNecesita un plan de renta para handhelds?.\",\n    mcuatro: \"\\xA1Conozca nuestro servicio de Renta!\",\n    mcinco: \"Adquiera los accesorios y consumibles que necesita.\",\n    mseis: \"\\xA1Cont\\xE1ctenos!\",\n    msiete: \"Ponemos a su disposici\\xF3n la soluci\\xF3n \\\"DSD\\\" para venta en ruta.\",\n    mocho: \"\\xA1Con\\xF3zcalo!\",\n    mnueve: \"Contamos con fundas dise\\xF1adas a la medida para cumplir con sus necesidades.\",\n    mdiez: \"\\xA1Adquiera la protecci\\xF3n que sus equipos necesitan!\",\n    luno: \"reparacion-de-handhelds\",\n    ldos: \"renta-de-handhelds\",\n    ltres: \"venta-de-accesorios-y-consumibles\",\n    lcuatro: \"DSD-venta-en-ruta\",\n    lcinco: \"venta-fundas-handheld-impresora-portatil\"\n  })), ___EmotionJSX(ContenedorFlex, null, ___EmotionJSX(Ubicacion, null), ___EmotionJSX(Servicios, null)), ___EmotionJSX(MapaDuns, null), ___EmotionJSX(Footer, null), ___EmotionJSX(Modal, {\n    show: abiertoAnuncios,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura ppp \"\n  }, ___EmotionJSX(Modal.Body, null, ___EmotionJSX(Link, {\n    href: \"/renta-de-handhelds\"\n  }, ___EmotionJSX(ImgModal, {\n    src: \"img/RVhandhelds.webp\",\n    alt: \"enlace renta venta de hand held\"\n  }))), ___EmotionJSX(Modal.Footer, null, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal\n  }, \"Cerrar\"))));\n};\n\nexport default Vhandhelds;","map":null,"metadata":{},"sourceType":"module"}