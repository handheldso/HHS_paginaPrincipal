{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar TextoSoftware = function TextoSoftware() {\n  var Contenedor = _styled(\"div\", true ? {\n    target: \"eeeoumt11\"\n  } : {\n    target: \"eeeoumt11\",\n    label: \"Contenedor\"\n  })(true ? {\n    name: \"hyck8i\",\n    styles: \"width:100%;text-align:center\"\n  } : {\n    name: \"hyck8i\",\n    styles: \"width:100%;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ContenedorD = _styled(\"div\", true ? {\n    target: \"eeeoumt10\"\n  } : {\n    target: \"eeeoumt10\",\n    label: \"ContenedorD\"\n  })(true ? {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\"\n  } : {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var OvaTexDiv = _styled(\"div\", true ? {\n    target: \"eeeoumt9\"\n  } : {\n    target: \"eeeoumt9\",\n    label: \"OvaTexDiv\"\n  })(true ? {\n    name: \"1lm7jsb\",\n    styles: \"width:78%;height:5.5rem;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"\n  } : {\n    name: \"1lm7jsb\",\n    styles: \"width:78%;height:5.5rem;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var OvaTex = _styled(\"p\", true ? {\n    target: \"eeeoumt8\"\n  } : {\n    target: \"eeeoumt8\",\n    label: \"OvaTex\"\n  })(true ? {\n    name: \"1s2v5ew\",\n    styles: \"font-size:20px;padding-top:30px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\"\n  } : {\n    name: \"1s2v5ew\",\n    styles: \"font-size:20px;padding-top:30px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcY29kaWdvIGRlIHBydWViYSBISFNcXGNvbXBvbmVudHNcXHBlc3RhbmFzXFxUZXh0b1NvZnR3YXJlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlDeUIiLCJmaWxlIjoiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxjb2RpZ28gZGUgcHJ1ZWJhIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvU29mdHdhcmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcblxuY29uc3QgVGV4dG9Tb2Z0d2FyZSA9ICgpID0+IHtcbiAgY29uc3QgQ29udGVuZWRvciA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBgO1xuXG4gIGNvbnN0IENvbnRlbmVkb3JEID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiA0cmVtO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBPdmFUZXhEaXYgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA3OCU7XG4gICAgaGVpZ2h0OiA1LjVyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzZjMDtcbiAgICBib3JkZXItcmFkaXVzOiA0cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDg5OXB4KSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBPdmFUZXggPSBzdHlsZWQucGBcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgcGFkZGluZy10b3A6IDMwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgY29sb3I6IHdoaXRlO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE1MDBweCkge1xuICAgICAgZm9udC1zaXplOiAxOXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMzU1cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTI1MHB4KSB7XG4gICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IE92YVRleFUgPSBzdHlsZWQucGBcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgY29sb3I6IHdoaXRlO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE4MzBweCkge1xuICAgICAgcGFkZGluZzogNHB4O1xuICAgICAgcGFkZGluZy10b3A6IDE1cHg7XG4gICAgICBmb250LXNpemU6IDE5cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3MzBweCkge1xuICAgICAgcGFkZGluZy10b3A6IDNweDtcbiAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTUwMHB4KSB7XG4gICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEzNTVweCkge1xuICAgICAgZm9udC1zaXplOiAxN3B4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMjUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBEaXZJTUcgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDByZW07XG4gIGA7XG5cbiAgY29uc3QgSU1HID0gc3R5bGVkLmltZ2BcbiAgICB3aWR0aDogODAlO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4NTBweCkge1xuICAgICAgd2lkdGg6IDY4JTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICB3aWR0aDogODklO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBEaXZUZXh0byA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogNHJlbTtcbiAgYDtcblxuICBjb25zdCBUZXh0b0lNRyA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMzVweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBwYWRkaW5nOiAyNXB4O1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTc1MHB4KSB7XG4gICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE1NTBweCkge1xuICAgICAgcGFkZGluZy10b3A6IDRyZW07XG4gICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IFRpdHVsb0JlbmVmaWNpb3MgPSBzdHlsZWQucGBcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nOiAyNXB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTUwcHgpIHtcbiAgICAgIHBhZGRpbmctdG9wOiA0cmVtO1xuICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBCZW5lZmljaW9zID0gc3R5bGVkLnVsYFxuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xuICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBCZW5lZmljaW9zTGlzdGEgPSBzdHlsZWQubGlgXG4gICAgbGlzdC1zdHlsZTogb3V0c2lkZTtcbiAgYDtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm90cm9cIj5cbiAgICAgICAgPENvbnRlbmVkb3I+XG4gICAgICAgICAgPERpdklNRz5cbiAgICAgICAgICAgIDxJTUdcbiAgICAgICAgICAgICAgc3JjPVwiL2ltZy9zb2Z0d2FyZWhocy53ZWJwXCJcbiAgICAgICAgICAgICAgYWx0PVwiU29mdHdhcmUgVmVudGEgZW4gUnV0YSBIYW5kIEhlbGRcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0RpdklNRz5cbiAgICAgICAgICA8RGl2VGV4dG8+XG4gICAgICAgICAgICA8VGV4dG9JTUc+XG4gICAgICAgICAgICAgIEFwbGljYWNpw7NuIFwiRGlyZWN0IFN0b3JlIERlbGl2ZXJ5XCIgKERTRCksIGJhc2FkYSBlbiB0ZWNub2xvZ8OtYXNcbiAgICAgICAgICAgICAgbcOzdmlsZXMsIGNhcGF6IGRlIGhhYmlsaXRhciBsb3MgcHJvY2Vzb3MgZGUgdmVudGEgYWJvcmRvLCBwcmV2ZW50YVxuICAgICAgICAgICAgICB5IHJlcGFydG8uIEhlcnJhbWllbnRhIHF1ZSBjb250cm9sYSBsYSBmdWVyemEgZGUgdmVudGFzIHlcbiAgICAgICAgICAgICAgbW9uaXRvcmVhIHN1IGRlc2VtcGXDsW8uXG4gICAgICAgICAgICA8L1RleHRvSU1HPlxuICAgICAgICAgICAgPFRpdHVsb0JlbmVmaWNpb3M+XG4gICAgICAgICAgICAgIEJlbmVmaWNpb3M6IDxiciAvPlxuICAgICAgICAgICAgPC9UaXR1bG9CZW5lZmljaW9zPlxuICAgICAgICAgICAgPEJlbmVmaWNpb3M+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgQWRxdWllcmEgbGEgXCJTb2x1Y2nDs24gRFNEXCIgeSBkaXNwb25nYSBzaW4gY29zdG8gYWRpY2lvbmFsIGRlIGxhXG4gICAgICAgICAgICAgICAgcmVudGEgZGUgdW5hIGhhbmRoZWxkIGUgaW1wcmVzb3JhIHBvcnTDoXRpbC5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+Q29udHJvbCBkZSBpbnZlbnRhcmlvczwvQmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPkdlc3Rpw7NuIGRlIHBlZGlkb3MuPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+UHJvZ3JhbWFjacOzbiBkZSB2aXNpdGFzLjwvQmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICAgIENvbnRyb2wgdG90YWwgZGVsIHByb2Nlc28gZGUgcnV0YS5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgQ29tcGF0aWJpbGlkYWQgY29uIGRpZmVyZW50ZXMgbW9kZWxvcyBkZSBoYW5kaGVsZHMuXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICAgIEltcGxlbWVudGFjacOzbiByw6FwaWRhIHkgc2VuY2lsbGEuXG4gICAgICAgICAgICAgIDwvQmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgPC9CZW5lZmljaW9zPlxuICAgICAgICAgIDwvRGl2VGV4dG8+XG4gICAgICAgIDwvQ29udGVuZWRvcj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XG4gICAgICAgICAgPENvbnRlbmVkb3JEPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVudGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj7CoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZW50YSE8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZXBhcmFjacOzbiFcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWFjY2Vzb3Jpb3MteS1jb25zdW1pYmxlc1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUFkcXVpZXJhIGxvcyBhY2Nlc29yaW9zIHkgY29uc3VtaWJsZXMgcXVlIG5lY2VzaXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdmVudGEtZnVuZGFzLWhhbmRoZWxkLWltcHJlc29yYS1wb3J0YXRpbFwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXNcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdmVudGEtZnVuZGFzLWhhbmRoZWxkLWltcHJlc29yYS1wb3J0YXRpbFwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2PlxuICAgICAgICAgICAgICAgIDxPdmFUZXhVPlxuICAgICAgICAgICAgICAgICAgQ29udGFtb3MgY29uIGZ1bmRhcyBkaXNlw7FhZGFzIGEgbGEgbWVkaWRhIHBhcmEgY3VtcGxpciBjb24gc3VzXG4gICAgICAgICAgICAgICAgICBuZWNlc2lkYWRlcy5cbiAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUFkcXVpZXJhIGxhIHByb3RlY2Npw7NuIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4hXG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9PdmFUZXhVPlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8L0NvbnRlbmVkb3JEPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGV4dG9Tb2Z0d2FyZTtcbiJdfQ== */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var OvaTexU = _styled(\"p\", true ? {\n    target: \"eeeoumt7\"\n  } : {\n    target: \"eeeoumt7\",\n    label: \"OvaTexU\"\n  })(true ? {\n    name: \"z95kzc\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1830px){padding:4px;padding-top:15px;font-size:19px;}@media (max-width: 1730px){padding-top:3px;font-size:19px;}@media (max-width: 1500px){font-size:17px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;padding-top:10px;}\"\n  } : {\n    name: \"z95kzc\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1830px){padding:4px;padding-top:15px;font-size:19px;}@media (max-width: 1730px){padding-top:3px;font-size:19px;}@media (max-width: 1500px){font-size:17px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;padding-top:10px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivIMG = _styled(\"div\", true ? {\n    target: \"eeeoumt6\"\n  } : {\n    target: \"eeeoumt6\",\n    label: \"DivIMG\"\n  })(true ? {\n    name: \"1af3zmi\",\n    styles: \"width:100%;margin-top:0rem\"\n  } : {\n    name: \"1af3zmi\",\n    styles: \"width:100%;margin-top:0rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMG = _styled(\"img\", true ? {\n    target: \"eeeoumt5\"\n  } : {\n    target: \"eeeoumt5\",\n    label: \"IMG\"\n  })(true ? {\n    name: \"1i6lw1j\",\n    styles: \"width:80%;height:100%;@media (max-width: 850px){width:68%;}@media (max-width: 500px){width:80%;}@media (max-width: 500px){width:89%;}\"\n  } : {\n    name: \"1i6lw1j\",\n    styles: \"width:80%;height:100%;@media (max-width: 850px){width:68%;}@media (max-width: 500px){width:80%;}@media (max-width: 500px){width:89%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivTexto = _styled(\"div\", true ? {\n    target: \"eeeoumt4\"\n  } : {\n    target: \"eeeoumt4\",\n    label: \"DivTexto\"\n  })(true ? {\n    name: \"8snisg\",\n    styles: \"width:100%;margin-top:4rem\"\n  } : {\n    name: \"8snisg\",\n    styles: \"width:100%;margin-top:4rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TextoIMG = _styled(\"p\", true ? {\n    target: \"eeeoumt3\"\n  } : {\n    target: \"eeeoumt3\",\n    label: \"TextoIMG\"\n  })(true ? {\n    name: \"ryqqyi\",\n    styles: \"font-size:35px;font-weight:bold;padding:25px;text-align:justify;@media (max-width: 1750px){font-size:30px;}@media (max-width: 1550px){padding-top:4rem;font-size:25px;}\"\n  } : {\n    name: \"ryqqyi\",\n    styles: \"font-size:35px;font-weight:bold;padding:25px;text-align:justify;@media (max-width: 1750px){font-size:30px;}@media (max-width: 1550px){padding-top:4rem;font-size:25px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TituloBeneficios = _styled(\"p\", true ? {\n    target: \"eeeoumt2\"\n  } : {\n    target: \"eeeoumt2\",\n    label: \"TituloBeneficios\"\n  })(true ? {\n    name: \"1neu3bp\",\n    styles: \"font-size:35px;font-weight:bold;text-align:left;padding:25px;@media (max-width: 1750px){font-size:30px;}@media (max-width: 1550px){padding-top:4rem;font-size:25px;}\"\n  } : {\n    name: \"1neu3bp\",\n    styles: \"font-size:35px;font-weight:bold;text-align:left;padding:25px;@media (max-width: 1750px){font-size:30px;}@media (max-width: 1550px){padding-top:4rem;font-size:25px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Beneficios = _styled(\"ul\", true ? {\n    target: \"eeeoumt1\"\n  } : {\n    target: \"eeeoumt1\",\n    label: \"Beneficios\"\n  })(true ? {\n    name: \"onfebd\",\n    styles: \"font-size:30px;text-align:left;margin-left:25px;@media (max-width: 1750px){font-size:20px;}\"\n  } : {\n    name: \"onfebd\",\n    styles: \"font-size:30px;text-align:left;margin-left:25px;@media (max-width: 1750px){font-size:20px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var BeneficiosLista = _styled(\"li\", true ? {\n    target: \"eeeoumt0\"\n  } : {\n    target: \"eeeoumt0\",\n    label: \"BeneficiosLista\"\n  })(true ? {\n    name: \"1gax00t\",\n    styles: \"list-style:outside\"\n  } : {\n    name: \"1gax00t\",\n    styles: \"list-style:outside\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"div\", {\n    className: \"otro\"\n  }, ___EmotionJSX(Contenedor, null, ___EmotionJSX(DivIMG, null, ___EmotionJSX(IMG, {\n    src: \"/img/softwarehhs.webp\",\n    alt: \"Software Venta en Ruta Hand Held\"\n  })), ___EmotionJSX(DivTexto, null, ___EmotionJSX(TextoIMG, null, \"Aplicaci\\xF3n \\\"Direct Store Delivery\\\" (DSD), basada en tecnolog\\xEDas m\\xF3viles, capaz de habilitar los procesos de venta abordo, preventa y reparto. Herramienta que controla la fuerza de ventas y monitorea su desempe\\xF1o.\"), ___EmotionJSX(TituloBeneficios, null, \"Beneficios: \", ___EmotionJSX(\"br\", null)), ___EmotionJSX(Beneficios, null, ___EmotionJSX(BeneficiosLista, null, \"Adquiera la \\\"Soluci\\xF3n DSD\\\" y disponga sin costo adicional de la renta de una handheld e impresora port\\xE1til.\"), ___EmotionJSX(BeneficiosLista, null, \"Control de inventarios\"), ___EmotionJSX(BeneficiosLista, null, \"Gesti\\xF3n de pedidos.\"), ___EmotionJSX(BeneficiosLista, null, \"Programaci\\xF3n de visitas.\"), ___EmotionJSX(BeneficiosLista, null, \"Control total del proceso de ruta.\"), ___EmotionJSX(BeneficiosLista, null, \"Compatibilidad con diferentes modelos de handhelds.\"), ___EmotionJSX(BeneficiosLista, null, \"Implementaci\\xF3n r\\xE1pida y sencilla.\")))), ___EmotionJSX(\"div\", {\n    className: \"DivR\"\n  }, ___EmotionJSX(ContenedorD, null, ___EmotionJSX(Link, {\n    href: \"/#renta\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Renta!\")))), ___EmotionJSX(Link, {\n    href: \"/#reparacion\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Reparaci\\xF3n!\")))), ___EmotionJSX(Link, {\n    href: \"/#venta\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Conozca nuestro servicio de Venta!\")))), ___EmotionJSX(Link, {\n    href: \"/venta-de-accesorios-y-consumibles\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Adquiera los accesorios y consumibles que necesita!\")))), ___EmotionJSX(Link, {\n    href: \"/venta-fundas-handheld-impresora-portatil\"\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\"\n  }, ___EmotionJSX(OvaTex, null, ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"Conozca nuestro servicio de impresion de credenciales\")))), ___EmotionJSX(Link, {\n    href: \"/venta-fundas-handheld-impresora-portatil\"\n  }, ___EmotionJSX(OvaTexDiv, null, ___EmotionJSX(OvaTexU, null, \"Contamos con fundas dise\\xF1adas a la medida para cumplir con sus necesidades.\", ___EmotionJSX(\"br\", null), ___EmotionJSX(\"span\", {\n    className: \"n\"\n  }, \"\\xA1Adquiera la protecci\\xF3n que sus equipos necesitan!\"))))))));\n};\n\nexport default TextoSoftware;","map":null,"metadata":{},"sourceType":"module"}