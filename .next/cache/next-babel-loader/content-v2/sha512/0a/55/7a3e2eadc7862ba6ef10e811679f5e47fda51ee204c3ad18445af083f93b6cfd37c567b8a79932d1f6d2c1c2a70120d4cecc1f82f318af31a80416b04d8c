{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jhino\\\\OneDrive\\\\Escritorio\\\\codigo de prueba HHS\\\\components\\\\pestanas\\\\FormCredenciales.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Politicas from \"../../static/PoliticaTex\";\nimport FormHandHeld from \"../../config/FormHandHeld\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar FormCredenciales = function FormCredenciales() {\n  _s();\n\n  var ContenedorGrid = _styled(\"div\", false ? {\n    target: \"eszycxf14\"\n  } : {\n    target: \"eszycxf14\",\n    label: \"ContenedorGrid\"\n  })(false ? {\n    name: \"qyt0rj\",\n    styles: \"width:50%;margin-top:2rem;@media (max-width: 995px){width:100%;margin-top:3rem;}\"\n  } : {\n    name: \"qyt0rj\",\n    styles: \"width:50%;margin-top:2rem;@media (max-width: 995px){width:100%;margin-top:3rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXE9uZURyaXZlXFxFc2NyaXRvcmlvXFxjb2RpZ28gZGUgcHJ1ZWJhIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXEZvcm1DcmVkZW5jaWFsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUW1DIiwiZmlsZSI6IkM6XFxVc2Vyc1xcamhpbm9cXE9uZURyaXZlXFxFc2NyaXRvcmlvXFxjb2RpZ28gZGUgcHJ1ZWJhIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXEZvcm1DcmVkZW5jaWFsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XHJcbmltcG9ydCB7IE1vZGFsLCBCdXR0b24gfSBmcm9tIFwicmVhY3QtYm9vdHN0cmFwXCI7XHJcbmltcG9ydCBQb2xpdGljYXMgZnJvbSBcIi4uLy4uL3N0YXRpYy9Qb2xpdGljYVRleFwiO1xyXG5pbXBvcnQgRm9ybUhhbmRIZWxkIGZyb20gXCIuLi8uLi9jb25maWcvRm9ybUhhbmRIZWxkXCI7XHJcbmltcG9ydCB1c2VXaW5kb3dTaXplIGZyb20gXCIuLi8uLi9ob29rcy91c2VXaW5kb3dTaXplXCI7XHJcblxyXG5jb25zdCBGb3JtQ3JlZGVuY2lhbGVzID0gKCkgPT4ge1xyXG4gIGNvbnN0IENvbnRlbmVkb3JHcmlkID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5OTVweCkge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgbWFyZ2luLXRvcDogM3JlbTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBEaXZTZWxsbyA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nLXRvcDogMHJlbTtcclxuICBgO1xyXG5cclxuICBjb25zdCBJbWcgPSBzdHlsZWQuaW1nYFxyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIGhlaWdodDogOTAlO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNzVweCkge1xyXG4gICAgICB3aWR0aDogNzAlO1xyXG4gICAgICBoZWlnaHQ6IDkwJTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBUaXREaXYgPSBzdHlsZWQuZGl2YFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDNyZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0ID0gc3R5bGVkLmgxYFxyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgzM3B4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMzVweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NTBweCkge1xyXG4gICAgICBmb250LXNpemU6IDI4cHggIWltcG9ydGFudDtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBDb250ZW5lZG9yID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiA4NiU7XHJcbiAgICBtYXJnaW46IDJyZW0gYXV0bztcclxuICBgO1xyXG5cclxuICBjb25zdCBGb3JtdWxhcmlvRGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzZjMDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgUG9saXRpY2FzRGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICBgO1xyXG5cclxuICBjb25zdCBEaXZUYXJqZXRhID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IElNR1RhcmpldGEgPSBzdHlsZWQuaW1nYFxyXG4gICAgbWFyZ2luOiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgICB3aWR0aDogMjMlO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICB3aWR0aDogMzMlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IElNR1RhcmpldGFEID0gc3R5bGVkLmltZ2BcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHdpZHRoOiAzNyU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwNXB4KSB7XHJcbiAgICAgIHdpZHRoOiAzOCU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA1NiU7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HTG9nb3MgPSBzdHlsZWQuaW1nYFxyXG4gICAgbWFyZ2luOiBhdXRvICFpbXBvcnRhbnQ7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE1MDBweCkge1xyXG4gICAgICB3aWR0aDogNjUlO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDgwJTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcclxuICAgICAgaGVpZ2h0OiA4cmVtICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgIGhlaWdodDogNS41cmVtICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVHh0VGFyamV0YSA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAxOXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2SWNvbm9zID0gc3R5bGVkLmRpdmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXJnaW4tdG9wOiA0LjVyZW07XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBgO1xyXG5cclxuICBjb25zdCBJY29uID0gc3R5bGVkLmRpdmBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFthYmllcnRvQW51bmNpb3MsIGNhbWJpYXJBYmllcnRvQW51bmNpb3NdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuICBjb25zdCBhYnJpck1vZGFsID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9BbnVuY2lvcyh0cnVlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBjZXJyYXJNb2RhbCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3MoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHNpemUgPSB1c2VXaW5kb3dTaXplKCk7XHJcblxyXG4gIGNvbnN0IFthYmllcnRvTW9kYWxULCBjYW1iaWFyQWJpZXJ0b01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBbYWJpZXJ0b01vZGFsRCwgY2FtYmlhckFiaWVydG9Nb2RhbERdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuICBjb25zdCBhYnJpck1vZGFsVCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwodHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWxUID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbChmYWxzZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbEQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsRCh0cnVlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBjZXJyYXJNb2RhbEQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsRChmYWxzZSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxzcGFuIGlkPVwiY29udGFjdG9cIj48L3NwYW4+XHJcbiAgICAgIDxDb250ZW5lZG9yR3JpZD5cclxuICAgICAgICB7c2l6ZSA+IDk5NSA/IChcclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2VudFwiPlxyXG4gICAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwiZm9udGhkXCI+XHJcbiAgICAgICAgICAgICAgSW1wcmVzacOzbiBkZSBjcmVkZW5jaWFsZXMgYSBkb21pY2lsaW8gcGFyYSBlbXByZXNhcyBlXHJcbiAgICAgICAgICAgICAgaW5zdGl0dWNpb25lcyBlZHVjYXRpdmFzLiA8YnIgLz5cclxuICAgICAgICAgICAgICA8Yj7CoUxsYW1lIGFob3JhIHBhcmEgbcOhcyBpbmZvcm1hY2nDs24hPC9iPlxyXG4gICAgICAgICAgICA8L2gyPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKSA6IChcclxuICAgICAgICAgIDw+IDwvPlxyXG4gICAgICAgICl9XHJcbiAgICAgICAgPERpdlNlbGxvPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZJbWdcIj5cclxuICAgICAgICAgICAgPEltZ1xyXG4gICAgICAgICAgICAgIHNyYz1cImltZy9zZWxsb2dhcmFudGlhLndlYnBcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIlNlbGxvIGRlIEdhcmFudGlhIEhhbmQgSGVsZCBTb2x1dGlvbnNcIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9EaXZTZWxsbz5cclxuICAgICAgICA8VGl0RGl2PlxyXG4gICAgICAgICAgPFRpdD7CoUNvdGljZSBhaG9yYSE8L1RpdD5cclxuICAgICAgICA8L1RpdERpdj5cclxuICAgICAgICA8Q29udGVuZWRvcj5cclxuICAgICAgICAgIDxGb3JtdWxhcmlvRGl2PlxyXG4gICAgICAgICAgICA8Rm9ybUhhbmRIZWxkIC8+XHJcbiAgICAgICAgICAgIDxQb2xpdGljYXNEaXY+XHJcbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwicG9saXRpY2FzXCI+XHJcbiAgICAgICAgICAgICAgICBBbCBkYXIgY2xpY2sgZW4gZWwgYm90w7NuIGRlIGVudmlhciBzZSBlc3RhIGFjZXB0YW5kbyBudWVzdHJhe1wiIFwifVxyXG4gICAgICAgICAgICAgICAgPGEgb25DbGljaz17YWJyaXJNb2RhbH0+cG9sw610aWNhIGRlIHByaXZhY2lkYWQuPC9hPlxyXG4gICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgPC9Qb2xpdGljYXNEaXY+XHJcbiAgICAgICAgICA8L0Zvcm11bGFyaW9EaXY+XHJcblxyXG4gICAgICAgICAgPE1vZGFsXHJcbiAgICAgICAgICAgIHNob3c9e2FiaWVydG9BbnVuY2lvc31cclxuICAgICAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cclxuICAgICAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgICAgIDxNb2RhbC5UaXRsZT5BbnVuY2lvczwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgICAgICA8TW9kYWwuQm9keT5cclxuICAgICAgICAgICAgICA8UG9saXRpY2FzIC8+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuQm9keT5cclxuICAgICAgICAgICAgPE1vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cclxuICAgICAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgIDwvTW9kYWw+XHJcbiAgICAgICAgPC9Db250ZW5lZG9yPlxyXG4gICAgICAgIDxEaXZJY29ub3M+XHJcbiAgICAgICAgICA8SWNvbj5cclxuICAgICAgICAgICAgPElNR1RhcmpldGFEXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY3JlaWNvblwiXHJcbiAgICAgICAgICAgICAgc3JjPVwiL2ltZy9FbnZpbyBncmF0aXMud2VicFwiXHJcbiAgICAgICAgICAgICAgYWx0PVwiRW52aW9zIEdyYXRpc1wiXHJcbiAgICAgICAgICAgICAgb25DbGljaz17YWJyaXJNb2RhbFR9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxUeHRUYXJqZXRhPlxyXG4gICAgICAgICAgICAgIEVudsOtbyBncmF0aXMgYSB0b2RhIGxhXHJcbiAgICAgICAgICAgICAgPGJyIC8+IFJlcMO6YmxpY2EgTWV4aWNhbmEuXHJcbiAgICAgICAgICAgIDwvVHh0VGFyamV0YT5cclxuICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICAgIDxJY29uPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YURcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjcmVpY29uXCJcclxuICAgICAgICAgICAgICBzcmM9XCIvaW1nL0xvcyBtZWpvcmVzIHByZWNpb3MgZGVsIG1lcmNhZG8ud2VicFwiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXthYnJpck1vZGFsRH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+XHJcbiAgICAgICAgICAgICAgTWVqb3JlcyBwcmVjaW9zIGFjb3JkZXNcclxuICAgICAgICAgICAgICA8YnIgLz4gYSBzdSBlY29ub23DrWEuXHJcbiAgICAgICAgICAgIDwvVHh0VGFyamV0YT5cclxuICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICA8L0Rpdkljb25vcz5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPERpdlRhcmpldGE+XHJcbiAgICAgICAgICAgIDxJTUdUYXJqZXRhXHJcbiAgICAgICAgICAgICAgc3JjPVwiL2ltZy9QYWdvIGNvbiB0YXJqZXRhLndlYnBcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkljb25vX1BhZ29cIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8VHh0VGFyamV0YT7CoUFjZXB0YW1vcyBwYWdvIGNvbiB0YXJqZXRhITwvVHh0VGFyamV0YT5cclxuICAgICAgICAgICAgPElNR0xvZ29zXHJcbiAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyNTc2MTA2OS9JY29ub3MvbWV0b2Rvc19kZV9wYWdvXzUwMHgxMjBfMV96a3VveWMucG5nXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJJbWFnZW5fTG9nb1BhZ29cIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9EaXZUYXJqZXRhPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRlbmVkb3JHcmlkPlxyXG5cclxuICAgICAgPE1vZGFsXHJcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsVH1cclxuICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsVH1cclxuICAgICAgICBrZXlib2FyZD17ZmFsc2V9XHJcbiAgICAgICAgc2l6ZT1cImxnXCJcclxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxyXG4gICAgICA+XHJcbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cclxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5FbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLjwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgPE1vZGFsLkJvZHk+XHJcbiAgICAgICAgQ29udGFtb3MgY29uIGVudsOtbyBncmF0aXMgYSB0b2RhIGxhIFJlcMO6YmxpY2EgTWV4aWNhbmEsIG5vc290cm9zIGxlIG1hbmRhbW9zIHNpbiBjYXJnbyBhZGljaW9uYWwsIGxhcyBjcmVkZW5jaWFsZXMgcXVlIG5lY2VzaXRlLiBUb2RhcyBudWVzdHJhcyBpbXByZXNpb25lcyBkZSB0YXJqZXRhcyBzb24gZGUgbWF0ZXJpYWxlcyBhbHRhbWVudGUgcmVzaXN0ZW50ZXMgeSBkdXJhZGVyb3MgKFBWQywgUEVUIHkgcG9saWNhcmJvbmF0bykgcXVlIGxlIGRhbiBhIGNhZGEgY3JlZGVuY2lhbCB1bmEgbGFyZ2EgdmlkYSBkZSB1c28uXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cclxuICAgICAgICAgICAgQ2VycmFyXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgPC9Nb2RhbD5cclxuICAgICAgPE1vZGFsXHJcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsRH1cclxuICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsRH1cclxuICAgICAgICBrZXlib2FyZD17ZmFsc2V9XHJcbiAgICAgICAgc2l6ZT1cImxnXCJcclxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxyXG4gICAgICA+XHJcbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cclxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5NZWpvcmVzIHByZWNpb3MgYWNvcmRlcyBhIHN1IGVjb25vbcOtYS48L01vZGFsLlRpdGxlPlxyXG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgICAgRW4gSGFuZCBIZWxkIFNvbHV0aW9ucywgbm9zIGNvbXByb21ldGVtb3MgYSBicmluZGFybGUgbG9zIG1lam9yZXNcclxuICAgICAgICAgIHByZWNpb3MsIHBhcmEgbm9zb3Ryb3MgZXMgaW1wb3J0YW50ZSBxdWUgY3VlbnRlIGNvbiBjcmVkZW5jaWFsZXMgcXVlXHJcbiAgICAgICAgICBjdWJyYW4gc3VzIG5lY2VzaWRhZGVzIGEgcHJlY2lvcyBhY2Nlc2libGVzLlxyXG4gICAgICAgIDwvTW9kYWwuQm9keT5cclxuICAgICAgICA8TW9kYWwuRm9vdGVyPlxyXG4gICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwibGlnaHRcIiBvbkNsaWNrPXtjZXJyYXJNb2RhbER9PlxyXG4gICAgICAgICAgICBDZXJyYXJcclxuICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDwvTW9kYWwuRm9vdGVyPlxyXG4gICAgICA8L01vZGFsPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1DcmVkZW5jaWFsZXM7XHJcbiJdfQ== */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivSello = _styled(\"div\", false ? {\n    target: \"eszycxf13\"\n  } : {\n    target: \"eszycxf13\",\n    label: \"DivSello\"\n  })(false ? {\n    name: \"15ev6lr\",\n    styles: \"display:flex;justify-content:center;padding-top:0rem\"\n  } : {\n    name: \"15ev6lr\",\n    styles: \"display:flex;justify-content:center;padding-top:0rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Img = _styled(\"img\", false ? {\n    target: \"eszycxf12\"\n  } : {\n    target: \"eszycxf12\",\n    label: \"Img\"\n  })(false ? {\n    name: \"fuo58s\",\n    styles: \"width:70%;height:90%;@media (max-width: 375px){width:70%;height:90%;}\"\n  } : {\n    name: \"fuo58s\",\n    styles: \"width:70%;height:90%;@media (max-width: 375px){width:70%;height:90%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TitDiv = _styled(\"div\", false ? {\n    target: \"eszycxf11\"\n  } : {\n    target: \"eszycxf11\",\n    label: \"TitDiv\"\n  })(false ? {\n    name: \"1h4mnaf\",\n    styles: \"text-align:center;width:100%;height:3rem\"\n  } : {\n    name: \"1h4mnaf\",\n    styles: \"text-align:center;width:100%;height:3rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Tit = _styled(\"h1\", false ? {\n    target: \"eszycxf10\"\n  } : {\n    target: \"eszycxf10\",\n    label: \"Tit\"\n  })(false ? {\n    name: \"15stcjl\",\n    styles: \"font-weight:bold;@media (max-width: 833px){font-size:35px!important;}@media (max-width: 550px){font-size:28px!important;}\"\n  } : {\n    name: \"15stcjl\",\n    styles: \"font-weight:bold;@media (max-width: 833px){font-size:35px!important;}@media (max-width: 550px){font-size:28px!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Contenedor = _styled(\"div\", false ? {\n    target: \"eszycxf9\"\n  } : {\n    target: \"eszycxf9\",\n    label: \"Contenedor\"\n  })(false ? {\n    name: \"9tzj48\",\n    styles: \"width:86%;margin:2rem auto\"\n  } : {\n    name: \"9tzj48\",\n    styles: \"width:86%;margin:2rem auto\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var FormularioDiv = _styled(\"div\", false ? {\n    target: \"eszycxf8\"\n  } : {\n    target: \"eszycxf8\",\n    label: \"FormularioDiv\"\n  })(false ? {\n    name: \"1twpw2l\",\n    styles: \"width:100%;background-color:#0076c0;color:white;padding:10px;border-radius:0.5rem\"\n  } : {\n    name: \"1twpw2l\",\n    styles: \"width:100%;background-color:#0076c0;color:white;padding:10px;border-radius:0.5rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var PoliticasDiv = _styled(\"div\", false ? {\n    target: \"eszycxf7\"\n  } : {\n    target: \"eszycxf7\",\n    label: \"PoliticasDiv\"\n  })(false ? {\n    name: \"12dms0z\",\n    styles: \"margin-top:1rem;width:100%\"\n  } : {\n    name: \"12dms0z\",\n    styles: \"margin-top:1rem;width:100%\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivTarjeta = _styled(\"div\", false ? {\n    target: \"eszycxf6\"\n  } : {\n    target: \"eszycxf6\",\n    label: \"DivTarjeta\"\n  })(false ? {\n    name: \"c903m5\",\n    styles: \"margin:auto;width:100%;text-align:center\"\n  } : {\n    name: \"c903m5\",\n    styles: \"margin:auto;width:100%;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGTarjeta = _styled(\"img\", false ? {\n    target: \"eszycxf5\"\n  } : {\n    target: \"eszycxf5\",\n    label: \"IMGTarjeta\"\n  })(false ? {\n    name: \"r9y48n\",\n    styles: \"margin:auto!important;width:23%;@media (max-width: 500px){width:33%;}\"\n  } : {\n    name: \"r9y48n\",\n    styles: \"margin:auto!important;width:23%;@media (max-width: 500px){width:33%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGTarjetaD = _styled(\"img\", false ? {\n    target: \"eszycxf4\"\n  } : {\n    target: \"eszycxf4\",\n    label: \"IMGTarjetaD\"\n  })(false ? {\n    name: \"1y7yo48\",\n    styles: \"cursor:pointer;width:37%;@media (max-width: 605px){width:38%;}@media (max-width: 500px){width:56%;}\"\n  } : {\n    name: \"1y7yo48\",\n    styles: \"cursor:pointer;width:37%;@media (max-width: 605px){width:38%;}@media (max-width: 500px){width:56%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMGLogos = _styled(\"img\", false ? {\n    target: \"eszycxf3\"\n  } : {\n    target: \"eszycxf3\",\n    label: \"IMGLogos\"\n  })(false ? {\n    name: \"13jsrr9\",\n    styles: \"margin:auto!important;@media (max-width: 1500px){width:65%;}@media (max-width: 1100px){width:80%;}@media (max-width: 800px){height:8rem!important;}@media (max-width: 500px){height:5.5rem!important;}\"\n  } : {\n    name: \"13jsrr9\",\n    styles: \"margin:auto!important;@media (max-width: 1500px){width:65%;}@media (max-width: 1100px){width:80%;}@media (max-width: 800px){height:8rem!important;}@media (max-width: 500px){height:5.5rem!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TxtTarjeta = _styled(\"p\", false ? {\n    target: \"eszycxf2\"\n  } : {\n    target: \"eszycxf2\",\n    label: \"TxtTarjeta\"\n  })(false ? {\n    name: \"ddq6ti\",\n    styles: \"font-size:19px;font-weight:bold\"\n  } : {\n    name: \"ddq6ti\",\n    styles: \"font-size:19px;font-weight:bold\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXE9uZURyaXZlXFxFc2NyaXRvcmlvXFxjb2RpZ28gZGUgcHJ1ZWJhIEhIU1xcY29tcG9uZW50c1xccGVzdGFuYXNcXEZvcm1DcmVkZW5jaWFsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0g2QiIsImZpbGUiOiJDOlxcVXNlcnNcXGpoaW5vXFxPbmVEcml2ZVxcRXNjcml0b3Jpb1xcY29kaWdvIGRlIHBydWViYSBISFNcXGNvbXBvbmVudHNcXHBlc3RhbmFzXFxGb3JtQ3JlZGVuY2lhbGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5pbXBvcnQgeyBNb2RhbCwgQnV0dG9uIH0gZnJvbSBcInJlYWN0LWJvb3RzdHJhcFwiO1xyXG5pbXBvcnQgUG9saXRpY2FzIGZyb20gXCIuLi8uLi9zdGF0aWMvUG9saXRpY2FUZXhcIjtcclxuaW1wb3J0IEZvcm1IYW5kSGVsZCBmcm9tIFwiLi4vLi4vY29uZmlnL0Zvcm1IYW5kSGVsZFwiO1xyXG5pbXBvcnQgdXNlV2luZG93U2l6ZSBmcm9tIFwiLi4vLi4vaG9va3MvdXNlV2luZG93U2l6ZVwiO1xyXG5cclxuY29uc3QgRm9ybUNyZWRlbmNpYWxlcyA9ICgpID0+IHtcclxuICBjb25zdCBDb250ZW5lZG9yR3JpZCA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIG1hcmdpbi10b3A6IDNyZW07XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2U2VsbG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDByZW07XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSW1nID0gc3R5bGVkLmltZ2BcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBoZWlnaHQ6IDkwJTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMzc1cHgpIHtcclxuICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgaGVpZ2h0OiA5MCU7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgVGl0RGl2ID0gc3R5bGVkLmRpdmBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRpdCA9IHN0eWxlZC5oMWBcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MzNweCkge1xyXG4gICAgICBmb250LXNpemU6IDM1cHggIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTUwcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAyOHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgQ29udGVuZWRvciA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogODYlO1xyXG4gICAgbWFyZ2luOiAycmVtIGF1dG87XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRm9ybXVsYXJpb0RpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFBvbGl0aWNhc0RpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgRGl2VGFyamV0YSA9IHN0eWxlZC5kaXZgXHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUYXJqZXRhID0gc3R5bGVkLmltZ2BcclxuICAgIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDIzJTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDMzJTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdUYXJqZXRhRCA9IHN0eWxlZC5pbWdgXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB3aWR0aDogMzclO1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDVweCkge1xyXG4gICAgICB3aWR0aDogMzglO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICB3aWR0aDogNTYlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IElNR0xvZ29zID0gc3R5bGVkLmltZ2BcclxuICAgIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDY1JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDgwMHB4KSB7XHJcbiAgICAgIGhlaWdodDogOHJlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xyXG4gICAgICBoZWlnaHQ6IDUuNXJlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFR4dFRhcmpldGEgPSBzdHlsZWQucGBcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdkljb25vcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLXRvcDogNC41cmVtO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSWNvbiA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICBgO1xyXG5cclxuICBjb25zdCBbYWJpZXJ0b0FudW5jaW9zLCBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3ModHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWwgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xyXG5cclxuICBjb25zdCBbYWJpZXJ0b01vZGFsVCwgY2FtYmlhckFiaWVydG9Nb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW2FiaWVydG9Nb2RhbEQsIGNhbWJpYXJBYmllcnRvTW9kYWxEXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3QgYWJyaXJNb2RhbFQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsVCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWxEID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQodHJ1ZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2VycmFyTW9kYWxEID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQoZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8c3BhbiBpZD1cImNvbnRhY3RvXCI+PC9zcGFuPlxyXG4gICAgICA8Q29udGVuZWRvckdyaWQ+XHJcbiAgICAgICAge3NpemUgPiA5OTUgPyAoXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNlbnRcIj5cclxuICAgICAgICAgICAgPGgyIGNsYXNzTmFtZT1cImZvbnRoZFwiPlxyXG4gICAgICAgICAgICAgIEltcHJlc2nDs24gZGUgY3JlZGVuY2lhbGVzIGEgZG9taWNpbGlvIHBhcmEgZW1wcmVzYXMgZVxyXG4gICAgICAgICAgICAgIGluc3RpdHVjaW9uZXMgZWR1Y2F0aXZhcy4gPGJyIC8+XHJcbiAgICAgICAgICAgICAgPGI+wqFMbGFtZSBhaG9yYSBwYXJhIG3DoXMgaW5mb3JtYWNpw7NuITwvYj5cclxuICAgICAgICAgICAgPC9oMj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICkgOiAoXHJcbiAgICAgICAgICA8PiA8Lz5cclxuICAgICAgICApfVxyXG4gICAgICAgIDxEaXZTZWxsbz5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiRGl2SW1nXCI+XHJcbiAgICAgICAgICAgIDxJbWdcclxuICAgICAgICAgICAgICBzcmM9XCJpbWcvc2VsbG9nYXJhbnRpYS53ZWJwXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJTZWxsbyBkZSBHYXJhbnRpYSBIYW5kIEhlbGQgU29sdXRpb25zXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvRGl2U2VsbG8+XHJcbiAgICAgICAgPFRpdERpdj5cclxuICAgICAgICAgIDxUaXQ+wqFDb3RpY2UgYWhvcmEhPC9UaXQ+XHJcbiAgICAgICAgPC9UaXREaXY+XHJcbiAgICAgICAgPENvbnRlbmVkb3I+XHJcbiAgICAgICAgICA8Rm9ybXVsYXJpb0Rpdj5cclxuICAgICAgICAgICAgPEZvcm1IYW5kSGVsZCAvPlxyXG4gICAgICAgICAgICA8UG9saXRpY2FzRGl2PlxyXG4gICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInBvbGl0aWNhc1wiPlxyXG4gICAgICAgICAgICAgICAgQWwgZGFyIGNsaWNrIGVuIGVsIGJvdMOzbiBkZSBlbnZpYXIgc2UgZXN0YSBhY2VwdGFuZG8gbnVlc3RyYXtcIiBcIn1cclxuICAgICAgICAgICAgICAgIDxhIG9uQ2xpY2s9e2FicmlyTW9kYWx9PnBvbMOtdGljYSBkZSBwcml2YWNpZGFkLjwvYT5cclxuICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgIDwvUG9saXRpY2FzRGl2PlxyXG4gICAgICAgICAgPC9Gb3JtdWxhcmlvRGl2PlxyXG5cclxuICAgICAgICAgIDxNb2RhbFxyXG4gICAgICAgICAgICBzaG93PXthYmllcnRvQW51bmNpb3N9XHJcbiAgICAgICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWx9XHJcbiAgICAgICAgICAgIGtleWJvYXJkPXtmYWxzZX1cclxuICAgICAgICAgICAgc2l6ZT1cImxnXCJcclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cclxuICAgICAgICAgICAgICA8TW9kYWwuVGl0bGU+QW51bmNpb3M8L01vZGFsLlRpdGxlPlxyXG4gICAgICAgICAgICA8L01vZGFsLkhlYWRlcj5cclxuICAgICAgICAgICAgPE1vZGFsLkJvZHk+XHJcbiAgICAgICAgICAgICAgPFBvbGl0aWNhcyAvPlxyXG4gICAgICAgICAgICA8L01vZGFsLkJvZHk+XHJcbiAgICAgICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwibGlnaHRcIiBvbkNsaWNrPXtjZXJyYXJNb2RhbH0+XHJcbiAgICAgICAgICAgICAgICBDZXJyYXJcclxuICAgICAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8L01vZGFsPlxyXG4gICAgICAgIDwvQ29udGVuZWRvcj5cclxuICAgICAgICA8RGl2SWNvbm9zPlxyXG4gICAgICAgICAgPEljb24+XHJcbiAgICAgICAgICAgIDxJTUdUYXJqZXRhRFxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNyZWljb25cIlxyXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvRW52aW8gZ3JhdGlzLndlYnBcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkVudmlvcyBHcmF0aXNcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxUfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8VHh0VGFyamV0YT5cclxuICAgICAgICAgICAgICBFbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYVxyXG4gICAgICAgICAgICAgIDxiciAvPiBSZXDDumJsaWNhIE1leGljYW5hLlxyXG4gICAgICAgICAgICA8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICA8L0ljb24+XHJcbiAgICAgICAgICA8SWNvbj5cclxuICAgICAgICAgICAgPElNR1RhcmpldGFEXHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY3JlaWNvblwiXHJcbiAgICAgICAgICAgICAgc3JjPVwiL2ltZy9Mb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLndlYnBcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkljb25vIE1lam9yZXMgUHJlY2lvc1wiXHJcbiAgICAgICAgICAgICAgb25DbGljaz17YWJyaXJNb2RhbER9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxUeHRUYXJqZXRhPlxyXG4gICAgICAgICAgICAgIE1lam9yZXMgcHJlY2lvcyBhY29yZGVzXHJcbiAgICAgICAgICAgICAgPGJyIC8+IGEgc3UgZWNvbm9tw61hLlxyXG4gICAgICAgICAgICA8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICA8L0ljb24+XHJcbiAgICAgICAgPC9EaXZJY29ub3M+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxEaXZUYXJqZXRhPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YVxyXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvUGFnbyBjb24gdGFyamV0YS53ZWJwXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJJY29ub19QYWdvXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+wqFBY2VwdGFtb3MgcGFnbyBjb24gdGFyamV0YSE8L1R4dFRhcmpldGE+XHJcbiAgICAgICAgICAgIDxJTUdMb2dvc1xyXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjEwNjkvSWNvbm9zL21ldG9kb3NfZGVfcGFnb181MDB4MTIwXzFfemt1b3ljLnBuZ1wiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSW1hZ2VuX0xvZ29QYWdvXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvRGl2VGFyamV0YT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Db250ZW5lZG9yR3JpZD5cclxuXHJcbiAgICAgIDxNb2RhbFxyXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbFR9XHJcbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbFR9XHJcbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgIHNpemU9XCJsZ1wiXHJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcclxuICAgICAgPlxyXG4gICAgICAgIDxNb2RhbC5IZWFkZXIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICA8TW9kYWwuVGl0bGU+RW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYS48L01vZGFsLlRpdGxlPlxyXG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxyXG4gICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgIENvbnRhbW9zIGNvbiBlbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLCBub3NvdHJvcyBsZSBtYW5kYW1vcyBzaW4gY2FyZ28gYWRpY2lvbmFsLCBsYXMgY3JlZGVuY2lhbGVzIHF1ZSBuZWNlc2l0ZS4gVG9kYXMgbnVlc3RyYXMgaW1wcmVzaW9uZXMgZGUgdGFyamV0YXMgc29uIGRlIG1hdGVyaWFsZXMgYWx0YW1lbnRlIHJlc2lzdGVudGVzIHkgZHVyYWRlcm9zIChQVkMsIFBFVCB5IHBvbGljYXJib25hdG8pIHF1ZSBsZSBkYW4gYSBjYWRhIGNyZWRlbmNpYWwgdW5hIGxhcmdhIHZpZGEgZGUgdXNvLlxyXG4gICAgICAgIDwvTW9kYWwuQm9keT5cclxuICAgICAgICA8TW9kYWwuRm9vdGVyPlxyXG4gICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwibGlnaHRcIiBvbkNsaWNrPXtjZXJyYXJNb2RhbH0+XHJcbiAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XHJcbiAgICAgIDwvTW9kYWw+XHJcbiAgICAgIDxNb2RhbFxyXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbER9XHJcbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbER9XHJcbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxyXG4gICAgICAgIHNpemU9XCJsZ1wiXHJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcclxuICAgICAgPlxyXG4gICAgICAgIDxNb2RhbC5IZWFkZXIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TWVqb3JlcyBwcmVjaW9zIGFjb3JkZXMgYSBzdSBlY29ub23DrWEuPC9Nb2RhbC5UaXRsZT5cclxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cclxuICAgICAgICA8TW9kYWwuQm9keT5cclxuICAgICAgICAgIEVuIEhhbmQgSGVsZCBTb2x1dGlvbnMsIG5vcyBjb21wcm9tZXRlbW9zIGEgYnJpbmRhcmxlIGxvcyBtZWpvcmVzXHJcbiAgICAgICAgICBwcmVjaW9zLCBwYXJhIG5vc290cm9zIGVzIGltcG9ydGFudGUgcXVlIGN1ZW50ZSBjb24gY3JlZGVuY2lhbGVzIHF1ZVxyXG4gICAgICAgICAgY3VicmFuIHN1cyBuZWNlc2lkYWRlcyBhIHByZWNpb3MgYWNjZXNpYmxlcy5cclxuICAgICAgICA8L01vZGFsLkJvZHk+XHJcbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWxEfT5cclxuICAgICAgICAgICAgQ2VycmFyXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cclxuICAgICAgPC9Nb2RhbD5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtQ3JlZGVuY2lhbGVzO1xyXG4iXX0= */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivIconos = _styled(\"div\", false ? {\n    target: \"eszycxf1\"\n  } : {\n    target: \"eszycxf1\",\n    label: \"DivIconos\"\n  })(false ? {\n    name: \"1pzfeih\",\n    styles: \"display:flex;margin-top:4.5rem;justify-content:space-around;text-align:center\"\n  } : {\n    name: \"1pzfeih\",\n    styles: \"display:flex;margin-top:4.5rem;justify-content:space-around;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Icon = _styled(\"div\", false ? {\n    target: \"eszycxf0\"\n  } : {\n    target: \"eszycxf0\",\n    label: \"Icon\"\n  })(false ? {\n    name: \"1d3w5wq\",\n    styles: \"width:100%\"\n  } : {\n    name: \"1d3w5wq\",\n    styles: \"width:100%\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var _useState = useState(false),\n      abiertoAnuncios = _useState[0],\n      cambiarAbiertoAnuncios = _useState[1];\n\n  var abrirModal = function abrirModal() {\n    cambiarAbiertoAnuncios(true);\n  };\n\n  var cerrarModal = function cerrarModal() {\n    cambiarAbiertoAnuncios(false);\n  };\n\n  var size = useWindowSize();\n\n  var _useState2 = useState(false),\n      abiertoModalT = _useState2[0],\n      cambiarAbiertoModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      abiertoModalD = _useState3[0],\n      cambiarAbiertoModalD = _useState3[1];\n\n  var abrirModalT = function abrirModalT() {\n    cambiarAbiertoModal(true);\n  };\n\n  var cerrarModalT = function cerrarModalT() {\n    cambiarAbiertoModal(false);\n  };\n\n  var abrirModalD = function abrirModalD() {\n    cambiarAbiertoModalD(true);\n  };\n\n  var cerrarModalD = function cerrarModalD() {\n    cambiarAbiertoModalD(false);\n  };\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"span\", {\n    id: \"contacto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(ContenedorGrid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, size > 995 ? ___EmotionJSX(\"div\", {\n    className: \"cent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"h2\", {\n    className: \"fonthd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Impresi\\xF3n de credenciales a domicilio para empresas e instituciones educativas. \", ___EmotionJSX(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 41\n    }\n  }), ___EmotionJSX(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"\\xA1Llame ahora para m\\xE1s informaci\\xF3n!\"))) : ___EmotionJSX(React.Fragment, null, \" \"), ___EmotionJSX(DivSello, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"DivImg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Img, {\n    src: \"img/sellogarantia.webp\",\n    alt: \"Sello de Garantia Hand Held Solutions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }))), ___EmotionJSX(TitDiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Tit, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"\\xA1Cotice ahora!\")), ___EmotionJSX(Contenedor, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(FormularioDiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(FormHandHeld, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(PoliticasDiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(\"p\", {\n    className: \"politicas\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Al dar click en el bot\\xF3n de enviar se esta aceptando nuestra\", \" \", ___EmotionJSX(\"a\", {\n    onClick: abrirModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"pol\\xEDtica de privacidad.\")))), ___EmotionJSX(Modal, {\n    show: abiertoAnuncios,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"Anuncios\")), ___EmotionJSX(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Politicas, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  })), ___EmotionJSX(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, \"Cerrar\")))), ___EmotionJSX(DivIconos, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(IMGTarjetaD, {\n    className: \"creicon\",\n    src: \"/img/Envio gratis.webp\",\n    alt: \"Envios Gratis\",\n    onClick: abrirModalT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TxtTarjeta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"Env\\xEDo gratis a toda la\", ___EmotionJSX(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }), \" Rep\\xFAblica Mexicana.\")), ___EmotionJSX(Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(IMGTarjetaD, {\n    className: \"creicon\",\n    src: \"/img/Los mejores precios del mercado.webp\",\n    alt: \"Icono Mejores Precios\",\n    onClick: abrirModalD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TxtTarjeta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"Mejores precios acordes\", ___EmotionJSX(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }), \" a su econom\\xEDa.\"))), ___EmotionJSX(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(DivTarjeta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(IMGTarjeta, {\n    src: \"/img/Pago con tarjeta.webp\",\n    alt: \"Icono_Pago\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TxtTarjeta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \"\\xA1Aceptamos pago con tarjeta!\"), ___EmotionJSX(IMGLogos, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625761069/Iconos/metodos_de_pago_500x120_1_zkuoyc.png\",\n    alt: \"Imagen_LogoPago\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  })))), ___EmotionJSX(Modal, {\n    show: abiertoModalT,\n    onHide: cerrarModalT,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \"Env\\xEDo gratis a toda la Rep\\xFAblica Mexicana.\")), ___EmotionJSX(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, \"Contamos con env\\xEDo gratis a toda la Rep\\xFAblica Mexicana, nosotros le mandamos sin cargo adicional, las credenciales que necesite. Todas nuestras impresiones de tarjetas son de materiales altamente resistentes y duraderos (PVC, PET y policarbonato) que le dan a cada credencial una larga vida de uso.\"), ___EmotionJSX(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalD,\n    onHide: cerrarModalD,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"Mejores precios acordes a su econom\\xEDa.\")), ___EmotionJSX(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, \"En Hand Held Solutions, nos comprometemos a brindarle los mejores precios, para nosotros es importante que cuente con credenciales que cubran sus necesidades a precios accesibles.\"), ___EmotionJSX(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))));\n};\n\n_s(FormCredenciales, \"h4yGzXDzHJI15+2QuXJSp9RsZJA=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = FormCredenciales;\nexport default FormCredenciales;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCredenciales\");","map":{"version":3,"sources":["C:/Users/jhino/OneDrive/Escritorio/codigo de prueba HHS/components/pestanas/FormCredenciales.js"],"names":["React","useState","Modal","Button","Politicas","FormHandHeld","useWindowSize","FormCredenciales","ContenedorGrid","DivSello","Img","TitDiv","Tit","Contenedor","FormularioDiv","PoliticasDiv","DivTarjeta","IMGTarjeta","IMGTarjetaD","IMGLogos","TxtTarjeta","DivIconos","Icon","abiertoAnuncios","cambiarAbiertoAnuncios","abrirModal","cerrarModal","size","abiertoModalT","cambiarAbiertoModal","abiertoModalD","cambiarAbiertoModalD","abrirModalT","cerrarModalT","abrirModalD","cerrarModalD"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Politicas from \"../../static/PoliticaTex\";\r\nimport FormHandHeld from \"../../config/FormHandHeld\";\r\nimport useWindowSize from \"../../hooks/useWindowSize\";\r\n\r\nconst FormCredenciales = () => {\r\n  const ContenedorGrid = styled.div`\r\n    width: 50%;\r\n    margin-top: 2rem;\r\n\r\n    @media (max-width: 995px) {\r\n      width: 100%;\r\n      margin-top: 3rem;\r\n    }\r\n  `;\r\n\r\n  const DivSello = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-top: 0rem;\r\n  `;\r\n\r\n  const Img = styled.img`\r\n    width: 70%;\r\n    height: 90%;\r\n\r\n    @media (max-width: 375px) {\r\n      width: 70%;\r\n      height: 90%;\r\n    }\r\n  `;\r\n\r\n  const TitDiv = styled.div`\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 3rem;\r\n  `;\r\n\r\n  const Tit = styled.h1`\r\n    font-weight: bold;\r\n\r\n    @media (max-width: 833px) {\r\n      font-size: 35px !important;\r\n    }\r\n\r\n    @media (max-width: 550px) {\r\n      font-size: 28px !important;\r\n    }\r\n  `;\r\n\r\n  const Contenedor = styled.div`\r\n    width: 86%;\r\n    margin: 2rem auto;\r\n  `;\r\n\r\n  const FormularioDiv = styled.div`\r\n    width: 100%;\r\n    background-color: #0076c0;\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 0.5rem;\r\n  `;\r\n\r\n  const PoliticasDiv = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n  `;\r\n\r\n  const DivTarjeta = styled.div`\r\n    margin: auto;\r\n    width: 100%;\r\n    text-align: center;\r\n  `;\r\n\r\n  const IMGTarjeta = styled.img`\r\n    margin: auto !important;\r\n    width: 23%;\r\n\r\n    @media (max-width: 500px) {\r\n      width: 33%;\r\n    }\r\n  `;\r\n\r\n  const IMGTarjetaD = styled.img`\r\n    cursor: pointer;\r\n    width: 37%;\r\n\r\n    @media (max-width: 605px) {\r\n      width: 38%;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      width: 56%;\r\n    }\r\n  `;\r\n\r\n  const IMGLogos = styled.img`\r\n    margin: auto !important;\r\n\r\n    @media (max-width: 1500px) {\r\n      width: 65%;\r\n    }\r\n\r\n    @media (max-width: 1100px) {\r\n      width: 80%;\r\n    }\r\n\r\n    @media (max-width: 800px) {\r\n      height: 8rem !important;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      height: 5.5rem !important;\r\n    }\r\n  `;\r\n\r\n  const TxtTarjeta = styled.p`\r\n    font-size: 19px;\r\n    font-weight: bold;\r\n  `;\r\n\r\n  const DivIconos = styled.div`\r\n    display: flex;\r\n    margin-top: 4.5rem;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n  `;\r\n\r\n  const Icon = styled.div`\r\n    width: 100%;\r\n  `;\r\n\r\n  const [abiertoAnuncios, cambiarAbiertoAnuncios] = useState(false);\r\n\r\n  const abrirModal = () => {\r\n    cambiarAbiertoAnuncios(true);\r\n  };\r\n\r\n  const cerrarModal = () => {\r\n    cambiarAbiertoAnuncios(false);\r\n  };\r\n\r\n  const size = useWindowSize();\r\n\r\n  const [abiertoModalT, cambiarAbiertoModal] = useState(false);\r\n  const [abiertoModalD, cambiarAbiertoModalD] = useState(false);\r\n\r\n  const abrirModalT = () => {\r\n    cambiarAbiertoModal(true);\r\n  };\r\n\r\n  const cerrarModalT = () => {\r\n    cambiarAbiertoModal(false);\r\n  };\r\n\r\n  const abrirModalD = () => {\r\n    cambiarAbiertoModalD(true);\r\n  };\r\n\r\n  const cerrarModalD = () => {\r\n    cambiarAbiertoModalD(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span id=\"contacto\"></span>\r\n      <ContenedorGrid>\r\n        {size > 995 ? (\r\n          <div className=\"cent\">\r\n            <h2 className=\"fonthd\">\r\n              Impresión de credenciales a domicilio para empresas e\r\n              instituciones educativas. <br />\r\n              <b>¡Llame ahora para más información!</b>\r\n            </h2>\r\n          </div>\r\n        ) : (\r\n          <> </>\r\n        )}\r\n        <DivSello>\r\n          <div className=\"DivImg\">\r\n            <Img\r\n              src=\"img/sellogarantia.webp\"\r\n              alt=\"Sello de Garantia Hand Held Solutions\"\r\n            />\r\n          </div>\r\n        </DivSello>\r\n        <TitDiv>\r\n          <Tit>¡Cotice ahora!</Tit>\r\n        </TitDiv>\r\n        <Contenedor>\r\n          <FormularioDiv>\r\n            <FormHandHeld />\r\n            <PoliticasDiv>\r\n              <p className=\"politicas\">\r\n                Al dar click en el botón de enviar se esta aceptando nuestra{\" \"}\r\n                <a onClick={abrirModal}>política de privacidad.</a>\r\n              </p>\r\n            </PoliticasDiv>\r\n          </FormularioDiv>\r\n\r\n          <Modal\r\n            show={abiertoAnuncios}\r\n            onHide={cerrarModal}\r\n            keyboard={false}\r\n            size=\"lg\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Anuncios</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Politicas />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"light\" onClick={cerrarModal}>\r\n                Cerrar\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Contenedor>\r\n        <DivIconos>\r\n          <Icon>\r\n            <IMGTarjetaD\r\n              className=\"creicon\"\r\n              src=\"/img/Envio gratis.webp\"\r\n              alt=\"Envios Gratis\"\r\n              onClick={abrirModalT}\r\n            />\r\n            <TxtTarjeta>\r\n              Envío gratis a toda la\r\n              <br /> República Mexicana.\r\n            </TxtTarjeta>\r\n          </Icon>\r\n          <Icon>\r\n            <IMGTarjetaD\r\n              className=\"creicon\"\r\n              src=\"/img/Los mejores precios del mercado.webp\"\r\n              alt=\"Icono Mejores Precios\"\r\n              onClick={abrirModalD}\r\n            />\r\n            <TxtTarjeta>\r\n              Mejores precios acordes\r\n              <br /> a su economía.\r\n            </TxtTarjeta>\r\n          </Icon>\r\n        </DivIconos>\r\n        <div>\r\n          <DivTarjeta>\r\n            <IMGTarjeta\r\n              src=\"/img/Pago con tarjeta.webp\"\r\n              alt=\"Icono_Pago\"\r\n            />\r\n            <TxtTarjeta>¡Aceptamos pago con tarjeta!</TxtTarjeta>\r\n            <IMGLogos\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625761069/Iconos/metodos_de_pago_500x120_1_zkuoyc.png\"\r\n              alt=\"Imagen_LogoPago\"\r\n            />\r\n          </DivTarjeta>\r\n        </div>\r\n      </ContenedorGrid>\r\n\r\n      <Modal\r\n        show={abiertoModalT}\r\n        onHide={cerrarModalT}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Envío gratis a toda la República Mexicana.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        Contamos con envío gratis a toda la República Mexicana, nosotros le mandamos sin cargo adicional, las credenciales que necesite. Todas nuestras impresiones de tarjetas son de materiales altamente resistentes y duraderos (PVC, PET y policarbonato) que le dan a cada credencial una larga vida de uso.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModal}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={abiertoModalD}\r\n        onHide={cerrarModalD}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Mejores precios acordes a su economía.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          En Hand Held Solutions, nos comprometemos a brindarle los mejores\r\n          precios, para nosotros es importante que cuente con credenciales que\r\n          cubran sus necesidades a precios accesibles.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModalD}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormCredenciales;\r\n"]},"metadata":{},"sourceType":"module"}