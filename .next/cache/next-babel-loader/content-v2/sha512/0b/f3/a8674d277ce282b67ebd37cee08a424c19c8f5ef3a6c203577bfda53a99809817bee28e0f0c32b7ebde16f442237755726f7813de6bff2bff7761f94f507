{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\nvar _jsxFileName = \"C:\\\\Users\\\\jhino\\\\Desktop\\\\codigo de prueba HHS\\\\components\\\\pestanas\\\\FormCredenciales.js\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Politicas from \"../../static/PoliticaTex\";\nimport FormHandHeld from \"../../config/FormHandHeld\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst FormCredenciales = () => {\n  const ContenedorGrid = _styled(\"div\", false ? {\n    target: \"eszycxf14\"\n  } : {\n    target: \"eszycxf14\",\n    label: \"ContenedorGrid\"\n  })(false ? {\n    name: \"qyt0rj\",\n    styles: \"width:50%;margin-top:2rem;@media (max-width: 995px){width:100%;margin-top:3rem;}\"\n  } : {\n    name: \"qyt0rj\",\n    styles: \"width:50%;margin-top:2rem;@media (max-width: 995px){width:100%;margin-top:3rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const DivSello = _styled(\"div\", false ? {\n    target: \"eszycxf13\"\n  } : {\n    target: \"eszycxf13\",\n    label: \"DivSello\"\n  })(false ? {\n    name: \"15ev6lr\",\n    styles: \"display:flex;justify-content:center;padding-top:0rem\"\n  } : {\n    name: \"15ev6lr\",\n    styles: \"display:flex;justify-content:center;padding-top:0rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Img = _styled(\"img\", false ? {\n    target: \"eszycxf12\"\n  } : {\n    target: \"eszycxf12\",\n    label: \"Img\"\n  })(false ? {\n    name: \"fuo58s\",\n    styles: \"width:70%;height:90%;@media (max-width: 375px){width:70%;height:90%;}\"\n  } : {\n    name: \"fuo58s\",\n    styles: \"width:70%;height:90%;@media (max-width: 375px){width:70%;height:90%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const TitDiv = _styled(\"div\", false ? {\n    target: \"eszycxf11\"\n  } : {\n    target: \"eszycxf11\",\n    label: \"TitDiv\"\n  })(false ? {\n    name: \"1h4mnaf\",\n    styles: \"text-align:center;width:100%;height:3rem\"\n  } : {\n    name: \"1h4mnaf\",\n    styles: \"text-align:center;width:100%;height:3rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Tit = _styled(\"h1\", false ? {\n    target: \"eszycxf10\"\n  } : {\n    target: \"eszycxf10\",\n    label: \"Tit\"\n  })(false ? {\n    name: \"15stcjl\",\n    styles: \"font-weight:bold;@media (max-width: 833px){font-size:35px!important;}@media (max-width: 550px){font-size:28px!important;}\"\n  } : {\n    name: \"15stcjl\",\n    styles: \"font-weight:bold;@media (max-width: 833px){font-size:35px!important;}@media (max-width: 550px){font-size:28px!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Contenedor = _styled(\"div\", false ? {\n    target: \"eszycxf9\"\n  } : {\n    target: \"eszycxf9\",\n    label: \"Contenedor\"\n  })(false ? {\n    name: \"9tzj48\",\n    styles: \"width:86%;margin:2rem auto\"\n  } : {\n    name: \"9tzj48\",\n    styles: \"width:86%;margin:2rem auto\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXERlc2t0b3BcXGNvZGlnbyBkZSBwcnVlYmEgSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcRm9ybUNyZWRlbmNpYWxlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRCtCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcamhpbm9cXERlc2t0b3BcXGNvZGlnbyBkZSBwcnVlYmEgSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcRm9ybUNyZWRlbmNpYWxlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvbiB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcclxuaW1wb3J0IFBvbGl0aWNhcyBmcm9tIFwiLi4vLi4vc3RhdGljL1BvbGl0aWNhVGV4XCI7XHJcbmltcG9ydCBGb3JtSGFuZEhlbGQgZnJvbSBcIi4uLy4uL2NvbmZpZy9Gb3JtSGFuZEhlbGRcIjtcclxuaW1wb3J0IHVzZVdpbmRvd1NpemUgZnJvbSBcIi4uLy4uL2hvb2tzL3VzZVdpbmRvd1NpemVcIjtcclxuXHJcbmNvbnN0IEZvcm1DcmVkZW5jaWFsZXMgPSAoKSA9PiB7XHJcbiAgY29uc3QgQ29udGVuZWRvckdyaWQgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlNlbGxvID0gc3R5bGVkLmRpdmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAwcmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEltZyA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgaGVpZ2h0OiA5MCU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM3NXB4KSB7XHJcbiAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgIGhlaWdodDogOTAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRpdERpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogM3JlbTtcclxuICBgO1xyXG5cclxuICBjb25zdCBUaXQgPSBzdHlsZWQuaDFgXHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODMzcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAzNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU1MHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjhweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IENvbnRlbmVkb3IgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDg2JTtcclxuICAgIG1hcmdpbjogMnJlbSBhdXRvO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEZvcm11bGFyaW9EaXYgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NmMwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcclxuICBgO1xyXG5cclxuICBjb25zdCBQb2xpdGljYXNEaXYgPSBzdHlsZWQuZGl2YFxyXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRhcmpldGEgPSBzdHlsZWQuZGl2YFxyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HVGFyamV0YSA9IHN0eWxlZC5pbWdgXHJcbiAgICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyMyU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAzMyU7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HVGFyamV0YUQgPSBzdHlsZWQuaW1nYFxyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgd2lkdGg6IDM3JTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjA1cHgpIHtcclxuICAgICAgd2lkdGg6IDM4JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDU2JTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdMb2dvcyA9IHN0eWxlZC5pbWdgXHJcbiAgICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTUwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA2NSU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xyXG4gICAgICB3aWR0aDogODAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xyXG4gICAgICBoZWlnaHQ6IDhyZW0gIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgaGVpZ2h0OiA1LjVyZW0gIWltcG9ydGFudDtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBUeHRUYXJqZXRhID0gc3R5bGVkLnBgXHJcbiAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICBgO1xyXG5cclxuICBjb25zdCBEaXZJY29ub3MgPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi10b3A6IDQuNXJlbTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEljb24gPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgW2FiaWVydG9BbnVuY2lvcywgY2FtYmlhckFiaWVydG9BbnVuY2lvc10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWwgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9BbnVuY2lvcyhmYWxzZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgc2l6ZSA9IHVzZVdpbmRvd1NpemUoKTtcclxuXHJcbiAgY29uc3QgW2FiaWVydG9Nb2RhbFQsIGNhbWJpYXJBYmllcnRvTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFthYmllcnRvTW9kYWxELCBjYW1iaWFyQWJpZXJ0b01vZGFsRF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWxUID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbCh0cnVlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBjZXJyYXJNb2RhbFQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBhYnJpck1vZGFsRCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsRCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPHNwYW4gaWQ9XCJjb250YWN0b1wiPjwvc3Bhbj5cclxuICAgICAgPENvbnRlbmVkb3JHcmlkPlxyXG4gICAgICAgIHtzaXplID4gOTk1ID8gKFxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjZW50XCI+XHJcbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJmb250aGRcIj5cclxuICAgICAgICAgICAgICBJbXByZXNpw7NuIGRlIGNyZWRlbmNpYWxlcyBhIGRvbWljaWxpbyBwYXJhIGVtcHJlc2FzIGVcclxuICAgICAgICAgICAgICBpbnN0aXR1Y2lvbmVzIGVkdWNhdGl2YXMuIDxiciAvPlxyXG4gICAgICAgICAgICAgIDxiPsKhTGxhbWUgYWhvcmEgcGFyYSBtw6FzIGluZm9ybWFjacOzbiE8L2I+XHJcbiAgICAgICAgICAgIDwvaDI+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApIDogKFxyXG4gICAgICAgICAgPD4gPC8+XHJcbiAgICAgICAgKX1cclxuICAgICAgICA8RGl2U2VsbG8+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkRpdkltZ1wiPlxyXG4gICAgICAgICAgICA8SW1nXHJcbiAgICAgICAgICAgICAgc3JjPVwiaW1nL3NlbGxvZ2FyYW50aWEud2VicFwiXHJcbiAgICAgICAgICAgICAgYWx0PVwiU2VsbG8gZGUgR2FyYW50aWEgSGFuZCBIZWxkIFNvbHV0aW9uc1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L0RpdlNlbGxvPlxyXG4gICAgICAgIDxUaXREaXY+XHJcbiAgICAgICAgICA8VGl0PsKhQ290aWNlIGFob3JhITwvVGl0PlxyXG4gICAgICAgIDwvVGl0RGl2PlxyXG4gICAgICAgIDxDb250ZW5lZG9yPlxyXG4gICAgICAgICAgPEZvcm11bGFyaW9EaXY+XHJcbiAgICAgICAgICAgIDxGb3JtSGFuZEhlbGQgLz5cclxuICAgICAgICAgICAgPFBvbGl0aWNhc0Rpdj5cclxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJwb2xpdGljYXNcIj5cclxuICAgICAgICAgICAgICAgIEFsIGRhciBjbGljayBlbiBlbCBib3TDs24gZGUgZW52aWFyIHNlIGVzdGEgYWNlcHRhbmRvIG51ZXN0cmF7XCIgXCJ9XHJcbiAgICAgICAgICAgICAgICA8YSBvbkNsaWNrPXthYnJpck1vZGFsfT5wb2zDrXRpY2EgZGUgcHJpdmFjaWRhZC48L2E+XHJcbiAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICA8L1BvbGl0aWNhc0Rpdj5cclxuICAgICAgICAgIDwvRm9ybXVsYXJpb0Rpdj5cclxuXHJcbiAgICAgICAgICA8TW9kYWxcclxuICAgICAgICAgICAgc2hvdz17YWJpZXJ0b0FudW5jaW9zfVxyXG4gICAgICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsfVxyXG4gICAgICAgICAgICBrZXlib2FyZD17ZmFsc2V9XHJcbiAgICAgICAgICAgIHNpemU9XCJsZ1wiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxNb2RhbC5IZWFkZXIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICAgICAgPE1vZGFsLlRpdGxlPkFudW5jaW9zPC9Nb2RhbC5UaXRsZT5cclxuICAgICAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgICAgICAgIDxQb2xpdGljYXMgLz5cclxuICAgICAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgICAgICA8TW9kYWwuRm9vdGVyPlxyXG4gICAgICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWx9PlxyXG4gICAgICAgICAgICAgICAgQ2VycmFyXHJcbiAgICAgICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuRm9vdGVyPlxyXG4gICAgICAgICAgPC9Nb2RhbD5cclxuICAgICAgICA8L0NvbnRlbmVkb3I+XHJcbiAgICAgICAgPERpdkljb25vcz5cclxuICAgICAgICAgIDxJY29uPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YURcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjcmVpY29uXCJcclxuICAgICAgICAgICAgICBzcmM9XCIvaW1nL0VudmlvIGdyYXRpcy53ZWJwXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJFbnZpb3MgR3JhdGlzXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXthYnJpck1vZGFsVH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+XHJcbiAgICAgICAgICAgICAgRW52w61vIGdyYXRpcyBhIHRvZGEgbGFcclxuICAgICAgICAgICAgICA8YnIgLz4gUmVww7pibGljYSBNZXhpY2FuYS5cclxuICAgICAgICAgICAgPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgPC9JY29uPlxyXG4gICAgICAgICAgPEljb24+XHJcbiAgICAgICAgICAgIDxJTUdUYXJqZXRhRFxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNyZWljb25cIlxyXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvTG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby53ZWJwXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJJY29ubyBNZWpvcmVzIFByZWNpb3NcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxEfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8VHh0VGFyamV0YT5cclxuICAgICAgICAgICAgICBNZWpvcmVzIHByZWNpb3MgYWNvcmRlc1xyXG4gICAgICAgICAgICAgIDxiciAvPiBhIHN1IGVjb25vbcOtYS5cclxuICAgICAgICAgICAgPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgPC9JY29uPlxyXG4gICAgICAgIDwvRGl2SWNvbm9zPlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8RGl2VGFyamV0YT5cclxuICAgICAgICAgICAgPElNR1RhcmpldGFcclxuICAgICAgICAgICAgICBzcmM9XCIvaW1nL1BhZ28gY29uIHRhcmpldGEud2VicFwiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm9fUGFnb1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxUeHRUYXJqZXRhPsKhQWNlcHRhbW9zIHBhZ28gY29uIHRhcmpldGEhPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgICA8SU1HTG9nb3NcclxuICAgICAgICAgICAgICBzcmM9XCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kaWhhd3FybnQvaW1hZ2UvdXBsb2FkL3YxNjI1NzYxMDY5L0ljb25vcy9tZXRvZG9zX2RlX3BhZ29fNTAweDEyMF8xX3prdW95Yy5wbmdcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkltYWdlbl9Mb2dvUGFnb1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L0RpdlRhcmpldGE+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGVuZWRvckdyaWQ+XHJcblxyXG4gICAgICA8TW9kYWxcclxuICAgICAgICBzaG93PXthYmllcnRvTW9kYWxUfVxyXG4gICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWxUfVxyXG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cclxuICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWFsdHVyYVwiXHJcbiAgICAgID5cclxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgPE1vZGFsLlRpdGxlPkVudsOtbyBncmF0aXMgYSB0b2RhIGxhIFJlcMO6YmxpY2EgTWV4aWNhbmEuPC9Nb2RhbC5UaXRsZT5cclxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cclxuICAgICAgICA8TW9kYWwuQm9keT5cclxuICAgICAgICBDb250YW1vcyBjb24gZW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYSwgbm9zb3Ryb3MgbGUgbWFuZGFtb3Mgc2luIGNhcmdvIGFkaWNpb25hbCwgbGFzIGNyZWRlbmNpYWxlcyBxdWUgbmVjZXNpdGUuIFRvZGFzIG51ZXN0cmFzIGltcHJlc2lvbmVzIGRlIHRhcmpldGFzIHNvbiBkZSBtYXRlcmlhbGVzIGFsdGFtZW50ZSByZXNpc3RlbnRlcyB5IGR1cmFkZXJvcyAoUFZDLCBQRVQgeSBwb2xpY2FyYm9uYXRvKSBxdWUgbGUgZGFuIGEgY2FkYSBjcmVkZW5jaWFsIHVuYSBsYXJnYSB2aWRhIGRlIHVzby5cclxuICAgICAgICA8L01vZGFsLkJvZHk+XHJcbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWx9PlxyXG4gICAgICAgICAgICBDZXJyYXJcclxuICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDwvTW9kYWwuRm9vdGVyPlxyXG4gICAgICA8L01vZGFsPlxyXG4gICAgICA8TW9kYWxcclxuICAgICAgICBzaG93PXthYmllcnRvTW9kYWxEfVxyXG4gICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWxEfVxyXG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cclxuICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWFsdHVyYVwiXHJcbiAgICAgID5cclxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgPE1vZGFsLlRpdGxlPk1lam9yZXMgcHJlY2lvcyBhY29yZGVzIGEgc3UgZWNvbm9tw61hLjwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgPE1vZGFsLkJvZHk+XHJcbiAgICAgICAgICBFbiBIYW5kIEhlbGQgU29sdXRpb25zLCBub3MgY29tcHJvbWV0ZW1vcyBhIGJyaW5kYXJsZSBsb3MgbWVqb3Jlc1xyXG4gICAgICAgICAgcHJlY2lvcywgcGFyYSBub3NvdHJvcyBlcyBpbXBvcnRhbnRlIHF1ZSBjdWVudGUgY29uIGNyZWRlbmNpYWxlcyBxdWVcclxuICAgICAgICAgIGN1YnJhbiBzdXMgbmVjZXNpZGFkZXMgYSBwcmVjaW9zIGFjY2VzaWJsZXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsRH0+XHJcbiAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XHJcbiAgICAgIDwvTW9kYWw+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybUNyZWRlbmNpYWxlcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const FormularioDiv = _styled(\"div\", false ? {\n    target: \"eszycxf8\"\n  } : {\n    target: \"eszycxf8\",\n    label: \"FormularioDiv\"\n  })(false ? {\n    name: \"1twpw2l\",\n    styles: \"width:100%;background-color:#0076c0;color:white;padding:10px;border-radius:0.5rem\"\n  } : {\n    name: \"1twpw2l\",\n    styles: \"width:100%;background-color:#0076c0;color:white;padding:10px;border-radius:0.5rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXERlc2t0b3BcXGNvZGlnbyBkZSBwcnVlYmEgSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcRm9ybUNyZWRlbmNpYWxlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RGtDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcamhpbm9cXERlc2t0b3BcXGNvZGlnbyBkZSBwcnVlYmEgSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcRm9ybUNyZWRlbmNpYWxlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvbiB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcclxuaW1wb3J0IFBvbGl0aWNhcyBmcm9tIFwiLi4vLi4vc3RhdGljL1BvbGl0aWNhVGV4XCI7XHJcbmltcG9ydCBGb3JtSGFuZEhlbGQgZnJvbSBcIi4uLy4uL2NvbmZpZy9Gb3JtSGFuZEhlbGRcIjtcclxuaW1wb3J0IHVzZVdpbmRvd1NpemUgZnJvbSBcIi4uLy4uL2hvb2tzL3VzZVdpbmRvd1NpemVcIjtcclxuXHJcbmNvbnN0IEZvcm1DcmVkZW5jaWFsZXMgPSAoKSA9PiB7XHJcbiAgY29uc3QgQ29udGVuZWRvckdyaWQgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlNlbGxvID0gc3R5bGVkLmRpdmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAwcmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEltZyA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgaGVpZ2h0OiA5MCU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM3NXB4KSB7XHJcbiAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgIGhlaWdodDogOTAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRpdERpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogM3JlbTtcclxuICBgO1xyXG5cclxuICBjb25zdCBUaXQgPSBzdHlsZWQuaDFgXHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODMzcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAzNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU1MHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjhweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IENvbnRlbmVkb3IgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDg2JTtcclxuICAgIG1hcmdpbjogMnJlbSBhdXRvO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEZvcm11bGFyaW9EaXYgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NmMwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcclxuICBgO1xyXG5cclxuICBjb25zdCBQb2xpdGljYXNEaXYgPSBzdHlsZWQuZGl2YFxyXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRhcmpldGEgPSBzdHlsZWQuZGl2YFxyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HVGFyamV0YSA9IHN0eWxlZC5pbWdgXHJcbiAgICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyMyU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAzMyU7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HVGFyamV0YUQgPSBzdHlsZWQuaW1nYFxyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgd2lkdGg6IDM3JTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjA1cHgpIHtcclxuICAgICAgd2lkdGg6IDM4JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDU2JTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdMb2dvcyA9IHN0eWxlZC5pbWdgXHJcbiAgICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTUwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA2NSU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xyXG4gICAgICB3aWR0aDogODAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xyXG4gICAgICBoZWlnaHQ6IDhyZW0gIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgaGVpZ2h0OiA1LjVyZW0gIWltcG9ydGFudDtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBUeHRUYXJqZXRhID0gc3R5bGVkLnBgXHJcbiAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICBgO1xyXG5cclxuICBjb25zdCBEaXZJY29ub3MgPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi10b3A6IDQuNXJlbTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEljb24gPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgW2FiaWVydG9BbnVuY2lvcywgY2FtYmlhckFiaWVydG9BbnVuY2lvc10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWwgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9BbnVuY2lvcyhmYWxzZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgc2l6ZSA9IHVzZVdpbmRvd1NpemUoKTtcclxuXHJcbiAgY29uc3QgW2FiaWVydG9Nb2RhbFQsIGNhbWJpYXJBYmllcnRvTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFthYmllcnRvTW9kYWxELCBjYW1iaWFyQWJpZXJ0b01vZGFsRF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWxUID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbCh0cnVlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBjZXJyYXJNb2RhbFQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBhYnJpck1vZGFsRCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsRCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPHNwYW4gaWQ9XCJjb250YWN0b1wiPjwvc3Bhbj5cclxuICAgICAgPENvbnRlbmVkb3JHcmlkPlxyXG4gICAgICAgIHtzaXplID4gOTk1ID8gKFxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjZW50XCI+XHJcbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJmb250aGRcIj5cclxuICAgICAgICAgICAgICBJbXByZXNpw7NuIGRlIGNyZWRlbmNpYWxlcyBhIGRvbWljaWxpbyBwYXJhIGVtcHJlc2FzIGVcclxuICAgICAgICAgICAgICBpbnN0aXR1Y2lvbmVzIGVkdWNhdGl2YXMuIDxiciAvPlxyXG4gICAgICAgICAgICAgIDxiPsKhTGxhbWUgYWhvcmEgcGFyYSBtw6FzIGluZm9ybWFjacOzbiE8L2I+XHJcbiAgICAgICAgICAgIDwvaDI+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApIDogKFxyXG4gICAgICAgICAgPD4gPC8+XHJcbiAgICAgICAgKX1cclxuICAgICAgICA8RGl2U2VsbG8+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkRpdkltZ1wiPlxyXG4gICAgICAgICAgICA8SW1nXHJcbiAgICAgICAgICAgICAgc3JjPVwiaW1nL3NlbGxvZ2FyYW50aWEud2VicFwiXHJcbiAgICAgICAgICAgICAgYWx0PVwiU2VsbG8gZGUgR2FyYW50aWEgSGFuZCBIZWxkIFNvbHV0aW9uc1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L0RpdlNlbGxvPlxyXG4gICAgICAgIDxUaXREaXY+XHJcbiAgICAgICAgICA8VGl0PsKhQ290aWNlIGFob3JhITwvVGl0PlxyXG4gICAgICAgIDwvVGl0RGl2PlxyXG4gICAgICAgIDxDb250ZW5lZG9yPlxyXG4gICAgICAgICAgPEZvcm11bGFyaW9EaXY+XHJcbiAgICAgICAgICAgIDxGb3JtSGFuZEhlbGQgLz5cclxuICAgICAgICAgICAgPFBvbGl0aWNhc0Rpdj5cclxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJwb2xpdGljYXNcIj5cclxuICAgICAgICAgICAgICAgIEFsIGRhciBjbGljayBlbiBlbCBib3TDs24gZGUgZW52aWFyIHNlIGVzdGEgYWNlcHRhbmRvIG51ZXN0cmF7XCIgXCJ9XHJcbiAgICAgICAgICAgICAgICA8YSBvbkNsaWNrPXthYnJpck1vZGFsfT5wb2zDrXRpY2EgZGUgcHJpdmFjaWRhZC48L2E+XHJcbiAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICA8L1BvbGl0aWNhc0Rpdj5cclxuICAgICAgICAgIDwvRm9ybXVsYXJpb0Rpdj5cclxuXHJcbiAgICAgICAgICA8TW9kYWxcclxuICAgICAgICAgICAgc2hvdz17YWJpZXJ0b0FudW5jaW9zfVxyXG4gICAgICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsfVxyXG4gICAgICAgICAgICBrZXlib2FyZD17ZmFsc2V9XHJcbiAgICAgICAgICAgIHNpemU9XCJsZ1wiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxNb2RhbC5IZWFkZXIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICAgICAgPE1vZGFsLlRpdGxlPkFudW5jaW9zPC9Nb2RhbC5UaXRsZT5cclxuICAgICAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgICAgICAgIDxQb2xpdGljYXMgLz5cclxuICAgICAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgICAgICA8TW9kYWwuRm9vdGVyPlxyXG4gICAgICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWx9PlxyXG4gICAgICAgICAgICAgICAgQ2VycmFyXHJcbiAgICAgICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuRm9vdGVyPlxyXG4gICAgICAgICAgPC9Nb2RhbD5cclxuICAgICAgICA8L0NvbnRlbmVkb3I+XHJcbiAgICAgICAgPERpdkljb25vcz5cclxuICAgICAgICAgIDxJY29uPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YURcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjcmVpY29uXCJcclxuICAgICAgICAgICAgICBzcmM9XCIvaW1nL0VudmlvIGdyYXRpcy53ZWJwXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJFbnZpb3MgR3JhdGlzXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXthYnJpck1vZGFsVH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+XHJcbiAgICAgICAgICAgICAgRW52w61vIGdyYXRpcyBhIHRvZGEgbGFcclxuICAgICAgICAgICAgICA8YnIgLz4gUmVww7pibGljYSBNZXhpY2FuYS5cclxuICAgICAgICAgICAgPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgPC9JY29uPlxyXG4gICAgICAgICAgPEljb24+XHJcbiAgICAgICAgICAgIDxJTUdUYXJqZXRhRFxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNyZWljb25cIlxyXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvTG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby53ZWJwXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJJY29ubyBNZWpvcmVzIFByZWNpb3NcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxEfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8VHh0VGFyamV0YT5cclxuICAgICAgICAgICAgICBNZWpvcmVzIHByZWNpb3MgYWNvcmRlc1xyXG4gICAgICAgICAgICAgIDxiciAvPiBhIHN1IGVjb25vbcOtYS5cclxuICAgICAgICAgICAgPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgPC9JY29uPlxyXG4gICAgICAgIDwvRGl2SWNvbm9zPlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8RGl2VGFyamV0YT5cclxuICAgICAgICAgICAgPElNR1RhcmpldGFcclxuICAgICAgICAgICAgICBzcmM9XCIvaW1nL1BhZ28gY29uIHRhcmpldGEud2VicFwiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm9fUGFnb1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxUeHRUYXJqZXRhPsKhQWNlcHRhbW9zIHBhZ28gY29uIHRhcmpldGEhPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgICA8SU1HTG9nb3NcclxuICAgICAgICAgICAgICBzcmM9XCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kaWhhd3FybnQvaW1hZ2UvdXBsb2FkL3YxNjI1NzYxMDY5L0ljb25vcy9tZXRvZG9zX2RlX3BhZ29fNTAweDEyMF8xX3prdW95Yy5wbmdcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkltYWdlbl9Mb2dvUGFnb1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L0RpdlRhcmpldGE+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGVuZWRvckdyaWQ+XHJcblxyXG4gICAgICA8TW9kYWxcclxuICAgICAgICBzaG93PXthYmllcnRvTW9kYWxUfVxyXG4gICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWxUfVxyXG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cclxuICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWFsdHVyYVwiXHJcbiAgICAgID5cclxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgPE1vZGFsLlRpdGxlPkVudsOtbyBncmF0aXMgYSB0b2RhIGxhIFJlcMO6YmxpY2EgTWV4aWNhbmEuPC9Nb2RhbC5UaXRsZT5cclxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cclxuICAgICAgICA8TW9kYWwuQm9keT5cclxuICAgICAgICBDb250YW1vcyBjb24gZW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYSwgbm9zb3Ryb3MgbGUgbWFuZGFtb3Mgc2luIGNhcmdvIGFkaWNpb25hbCwgbGFzIGNyZWRlbmNpYWxlcyBxdWUgbmVjZXNpdGUuIFRvZGFzIG51ZXN0cmFzIGltcHJlc2lvbmVzIGRlIHRhcmpldGFzIHNvbiBkZSBtYXRlcmlhbGVzIGFsdGFtZW50ZSByZXNpc3RlbnRlcyB5IGR1cmFkZXJvcyAoUFZDLCBQRVQgeSBwb2xpY2FyYm9uYXRvKSBxdWUgbGUgZGFuIGEgY2FkYSBjcmVkZW5jaWFsIHVuYSBsYXJnYSB2aWRhIGRlIHVzby5cclxuICAgICAgICA8L01vZGFsLkJvZHk+XHJcbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWx9PlxyXG4gICAgICAgICAgICBDZXJyYXJcclxuICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDwvTW9kYWwuRm9vdGVyPlxyXG4gICAgICA8L01vZGFsPlxyXG4gICAgICA8TW9kYWxcclxuICAgICAgICBzaG93PXthYmllcnRvTW9kYWxEfVxyXG4gICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWxEfVxyXG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cclxuICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWFsdHVyYVwiXHJcbiAgICAgID5cclxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgPE1vZGFsLlRpdGxlPk1lam9yZXMgcHJlY2lvcyBhY29yZGVzIGEgc3UgZWNvbm9tw61hLjwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgPE1vZGFsLkJvZHk+XHJcbiAgICAgICAgICBFbiBIYW5kIEhlbGQgU29sdXRpb25zLCBub3MgY29tcHJvbWV0ZW1vcyBhIGJyaW5kYXJsZSBsb3MgbWVqb3Jlc1xyXG4gICAgICAgICAgcHJlY2lvcywgcGFyYSBub3NvdHJvcyBlcyBpbXBvcnRhbnRlIHF1ZSBjdWVudGUgY29uIGNyZWRlbmNpYWxlcyBxdWVcclxuICAgICAgICAgIGN1YnJhbiBzdXMgbmVjZXNpZGFkZXMgYSBwcmVjaW9zIGFjY2VzaWJsZXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsRH0+XHJcbiAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XHJcbiAgICAgIDwvTW9kYWw+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybUNyZWRlbmNpYWxlcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const PoliticasDiv = _styled(\"div\", false ? {\n    target: \"eszycxf7\"\n  } : {\n    target: \"eszycxf7\",\n    label: \"PoliticasDiv\"\n  })(false ? {\n    name: \"12dms0z\",\n    styles: \"margin-top:1rem;width:100%\"\n  } : {\n    name: \"12dms0z\",\n    styles: \"margin-top:1rem;width:100%\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const DivTarjeta = _styled(\"div\", false ? {\n    target: \"eszycxf6\"\n  } : {\n    target: \"eszycxf6\",\n    label: \"DivTarjeta\"\n  })(false ? {\n    name: \"c903m5\",\n    styles: \"margin:auto;width:100%;text-align:center\"\n  } : {\n    name: \"c903m5\",\n    styles: \"margin:auto;width:100%;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXERlc2t0b3BcXGNvZGlnbyBkZSBwcnVlYmEgSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcRm9ybUNyZWRlbmNpYWxlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRStCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcamhpbm9cXERlc2t0b3BcXGNvZGlnbyBkZSBwcnVlYmEgSEhTXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcRm9ybUNyZWRlbmNpYWxlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcclxuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvbiB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcclxuaW1wb3J0IFBvbGl0aWNhcyBmcm9tIFwiLi4vLi4vc3RhdGljL1BvbGl0aWNhVGV4XCI7XHJcbmltcG9ydCBGb3JtSGFuZEhlbGQgZnJvbSBcIi4uLy4uL2NvbmZpZy9Gb3JtSGFuZEhlbGRcIjtcclxuaW1wb3J0IHVzZVdpbmRvd1NpemUgZnJvbSBcIi4uLy4uL2hvb2tzL3VzZVdpbmRvd1NpemVcIjtcclxuXHJcbmNvbnN0IEZvcm1DcmVkZW5jaWFsZXMgPSAoKSA9PiB7XHJcbiAgY29uc3QgQ29udGVuZWRvckdyaWQgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBtYXJnaW4tdG9wOiAzcmVtO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlNlbGxvID0gc3R5bGVkLmRpdmBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAwcmVtO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEltZyA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgaGVpZ2h0OiA5MCU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM3NXB4KSB7XHJcbiAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgIGhlaWdodDogOTAlO1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IFRpdERpdiA9IHN0eWxlZC5kaXZgXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogM3JlbTtcclxuICBgO1xyXG5cclxuICBjb25zdCBUaXQgPSBzdHlsZWQuaDFgXHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogODMzcHgpIHtcclxuICAgICAgZm9udC1zaXplOiAzNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDU1MHB4KSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjhweCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIGA7XHJcblxyXG4gIGNvbnN0IENvbnRlbmVkb3IgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDg2JTtcclxuICAgIG1hcmdpbjogMnJlbSBhdXRvO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEZvcm11bGFyaW9EaXYgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3NmMwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcclxuICBgO1xyXG5cclxuICBjb25zdCBQb2xpdGljYXNEaXYgPSBzdHlsZWQuZGl2YFxyXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IERpdlRhcmpldGEgPSBzdHlsZWQuZGl2YFxyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HVGFyamV0YSA9IHN0eWxlZC5pbWdgXHJcbiAgICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyMyU7XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiAzMyU7XHJcbiAgICB9XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgSU1HVGFyamV0YUQgPSBzdHlsZWQuaW1nYFxyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgd2lkdGg6IDM3JTtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjA1cHgpIHtcclxuICAgICAgd2lkdGg6IDM4JTtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgd2lkdGg6IDU2JTtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBJTUdMb2dvcyA9IHN0eWxlZC5pbWdgXHJcbiAgICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTUwMHB4KSB7XHJcbiAgICAgIHdpZHRoOiA2NSU7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCkge1xyXG4gICAgICB3aWR0aDogODAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xyXG4gICAgICBoZWlnaHQ6IDhyZW0gIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcclxuICAgICAgaGVpZ2h0OiA1LjVyZW0gIWltcG9ydGFudDtcclxuICAgIH1cclxuICBgO1xyXG5cclxuICBjb25zdCBUeHRUYXJqZXRhID0gc3R5bGVkLnBgXHJcbiAgICBmb250LXNpemU6IDE5cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICBgO1xyXG5cclxuICBjb25zdCBEaXZJY29ub3MgPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi10b3A6IDQuNXJlbTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGA7XHJcblxyXG4gIGNvbnN0IEljb24gPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgYDtcclxuXHJcbiAgY29uc3QgW2FiaWVydG9BbnVuY2lvcywgY2FtYmlhckFiaWVydG9BbnVuY2lvc10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWwgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9BbnVuY2lvcyhmYWxzZSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3Qgc2l6ZSA9IHVzZVdpbmRvd1NpemUoKTtcclxuXHJcbiAgY29uc3QgW2FiaWVydG9Nb2RhbFQsIGNhbWJpYXJBYmllcnRvTW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFthYmllcnRvTW9kYWxELCBjYW1iaWFyQWJpZXJ0b01vZGFsRF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIGNvbnN0IGFicmlyTW9kYWxUID0gKCkgPT4ge1xyXG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbCh0cnVlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBjZXJyYXJNb2RhbFQgPSAoKSA9PiB7XHJcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBhYnJpck1vZGFsRCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKHRydWUpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGNlcnJhck1vZGFsRCA9ICgpID0+IHtcclxuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKGZhbHNlKTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPHNwYW4gaWQ9XCJjb250YWN0b1wiPjwvc3Bhbj5cclxuICAgICAgPENvbnRlbmVkb3JHcmlkPlxyXG4gICAgICAgIHtzaXplID4gOTk1ID8gKFxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjZW50XCI+XHJcbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJmb250aGRcIj5cclxuICAgICAgICAgICAgICBJbXByZXNpw7NuIGRlIGNyZWRlbmNpYWxlcyBhIGRvbWljaWxpbyBwYXJhIGVtcHJlc2FzIGVcclxuICAgICAgICAgICAgICBpbnN0aXR1Y2lvbmVzIGVkdWNhdGl2YXMuIDxiciAvPlxyXG4gICAgICAgICAgICAgIDxiPsKhTGxhbWUgYWhvcmEgcGFyYSBtw6FzIGluZm9ybWFjacOzbiE8L2I+XHJcbiAgICAgICAgICAgIDwvaDI+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApIDogKFxyXG4gICAgICAgICAgPD4gPC8+XHJcbiAgICAgICAgKX1cclxuICAgICAgICA8RGl2U2VsbG8+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkRpdkltZ1wiPlxyXG4gICAgICAgICAgICA8SW1nXHJcbiAgICAgICAgICAgICAgc3JjPVwiaW1nL3NlbGxvZ2FyYW50aWEud2VicFwiXHJcbiAgICAgICAgICAgICAgYWx0PVwiU2VsbG8gZGUgR2FyYW50aWEgSGFuZCBIZWxkIFNvbHV0aW9uc1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L0RpdlNlbGxvPlxyXG4gICAgICAgIDxUaXREaXY+XHJcbiAgICAgICAgICA8VGl0PsKhQ290aWNlIGFob3JhITwvVGl0PlxyXG4gICAgICAgIDwvVGl0RGl2PlxyXG4gICAgICAgIDxDb250ZW5lZG9yPlxyXG4gICAgICAgICAgPEZvcm11bGFyaW9EaXY+XHJcbiAgICAgICAgICAgIDxGb3JtSGFuZEhlbGQgLz5cclxuICAgICAgICAgICAgPFBvbGl0aWNhc0Rpdj5cclxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJwb2xpdGljYXNcIj5cclxuICAgICAgICAgICAgICAgIEFsIGRhciBjbGljayBlbiBlbCBib3TDs24gZGUgZW52aWFyIHNlIGVzdGEgYWNlcHRhbmRvIG51ZXN0cmF7XCIgXCJ9XHJcbiAgICAgICAgICAgICAgICA8YSBvbkNsaWNrPXthYnJpck1vZGFsfT5wb2zDrXRpY2EgZGUgcHJpdmFjaWRhZC48L2E+XHJcbiAgICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgICA8L1BvbGl0aWNhc0Rpdj5cclxuICAgICAgICAgIDwvRm9ybXVsYXJpb0Rpdj5cclxuXHJcbiAgICAgICAgICA8TW9kYWxcclxuICAgICAgICAgICAgc2hvdz17YWJpZXJ0b0FudW5jaW9zfVxyXG4gICAgICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsfVxyXG4gICAgICAgICAgICBrZXlib2FyZD17ZmFsc2V9XHJcbiAgICAgICAgICAgIHNpemU9XCJsZ1wiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxNb2RhbC5IZWFkZXIgY2xvc2VCdXR0b24+XHJcbiAgICAgICAgICAgICAgPE1vZGFsLlRpdGxlPkFudW5jaW9zPC9Nb2RhbC5UaXRsZT5cclxuICAgICAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgICAgIDxNb2RhbC5Cb2R5PlxyXG4gICAgICAgICAgICAgIDxQb2xpdGljYXMgLz5cclxuICAgICAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgICAgICA8TW9kYWwuRm9vdGVyPlxyXG4gICAgICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWx9PlxyXG4gICAgICAgICAgICAgICAgQ2VycmFyXHJcbiAgICAgICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgICAgIDwvTW9kYWwuRm9vdGVyPlxyXG4gICAgICAgICAgPC9Nb2RhbD5cclxuICAgICAgICA8L0NvbnRlbmVkb3I+XHJcbiAgICAgICAgPERpdkljb25vcz5cclxuICAgICAgICAgIDxJY29uPlxyXG4gICAgICAgICAgICA8SU1HVGFyamV0YURcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjcmVpY29uXCJcclxuICAgICAgICAgICAgICBzcmM9XCIvaW1nL0VudmlvIGdyYXRpcy53ZWJwXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJFbnZpb3MgR3JhdGlzXCJcclxuICAgICAgICAgICAgICBvbkNsaWNrPXthYnJpck1vZGFsVH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPFR4dFRhcmpldGE+XHJcbiAgICAgICAgICAgICAgRW52w61vIGdyYXRpcyBhIHRvZGEgbGFcclxuICAgICAgICAgICAgICA8YnIgLz4gUmVww7pibGljYSBNZXhpY2FuYS5cclxuICAgICAgICAgICAgPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgPC9JY29uPlxyXG4gICAgICAgICAgPEljb24+XHJcbiAgICAgICAgICAgIDxJTUdUYXJqZXRhRFxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNyZWljb25cIlxyXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvTG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby53ZWJwXCJcclxuICAgICAgICAgICAgICBhbHQ9XCJJY29ubyBNZWpvcmVzIFByZWNpb3NcIlxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxEfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8VHh0VGFyamV0YT5cclxuICAgICAgICAgICAgICBNZWpvcmVzIHByZWNpb3MgYWNvcmRlc1xyXG4gICAgICAgICAgICAgIDxiciAvPiBhIHN1IGVjb25vbcOtYS5cclxuICAgICAgICAgICAgPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgPC9JY29uPlxyXG4gICAgICAgIDwvRGl2SWNvbm9zPlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8RGl2VGFyamV0YT5cclxuICAgICAgICAgICAgPElNR1RhcmpldGFcclxuICAgICAgICAgICAgICBzcmM9XCIvaW1nL1BhZ28gY29uIHRhcmpldGEud2VicFwiXHJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm9fUGFnb1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxUeHRUYXJqZXRhPsKhQWNlcHRhbW9zIHBhZ28gY29uIHRhcmpldGEhPC9UeHRUYXJqZXRhPlxyXG4gICAgICAgICAgICA8SU1HTG9nb3NcclxuICAgICAgICAgICAgICBzcmM9XCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kaWhhd3FybnQvaW1hZ2UvdXBsb2FkL3YxNjI1NzYxMDY5L0ljb25vcy9tZXRvZG9zX2RlX3BhZ29fNTAweDEyMF8xX3prdW95Yy5wbmdcIlxyXG4gICAgICAgICAgICAgIGFsdD1cIkltYWdlbl9Mb2dvUGFnb1wiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L0RpdlRhcmpldGE+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGVuZWRvckdyaWQ+XHJcblxyXG4gICAgICA8TW9kYWxcclxuICAgICAgICBzaG93PXthYmllcnRvTW9kYWxUfVxyXG4gICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWxUfVxyXG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cclxuICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWFsdHVyYVwiXHJcbiAgICAgID5cclxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgPE1vZGFsLlRpdGxlPkVudsOtbyBncmF0aXMgYSB0b2RhIGxhIFJlcMO6YmxpY2EgTWV4aWNhbmEuPC9Nb2RhbC5UaXRsZT5cclxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cclxuICAgICAgICA8TW9kYWwuQm9keT5cclxuICAgICAgICBDb250YW1vcyBjb24gZW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYSwgbm9zb3Ryb3MgbGUgbWFuZGFtb3Mgc2luIGNhcmdvIGFkaWNpb25hbCwgbGFzIGNyZWRlbmNpYWxlcyBxdWUgbmVjZXNpdGUuIFRvZGFzIG51ZXN0cmFzIGltcHJlc2lvbmVzIGRlIHRhcmpldGFzIHNvbiBkZSBtYXRlcmlhbGVzIGFsdGFtZW50ZSByZXNpc3RlbnRlcyB5IGR1cmFkZXJvcyAoUFZDLCBQRVQgeSBwb2xpY2FyYm9uYXRvKSBxdWUgbGUgZGFuIGEgY2FkYSBjcmVkZW5jaWFsIHVuYSBsYXJnYSB2aWRhIGRlIHVzby5cclxuICAgICAgICA8L01vZGFsLkJvZHk+XHJcbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cclxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWx9PlxyXG4gICAgICAgICAgICBDZXJyYXJcclxuICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgIDwvTW9kYWwuRm9vdGVyPlxyXG4gICAgICA8L01vZGFsPlxyXG4gICAgICA8TW9kYWxcclxuICAgICAgICBzaG93PXthYmllcnRvTW9kYWxEfVxyXG4gICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWxEfVxyXG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cclxuICAgICAgICBzaXplPVwibGdcIlxyXG4gICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWFsdHVyYVwiXHJcbiAgICAgID5cclxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxyXG4gICAgICAgICAgPE1vZGFsLlRpdGxlPk1lam9yZXMgcHJlY2lvcyBhY29yZGVzIGEgc3UgZWNvbm9tw61hLjwvTW9kYWwuVGl0bGU+XHJcbiAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XHJcbiAgICAgICAgPE1vZGFsLkJvZHk+XHJcbiAgICAgICAgICBFbiBIYW5kIEhlbGQgU29sdXRpb25zLCBub3MgY29tcHJvbWV0ZW1vcyBhIGJyaW5kYXJsZSBsb3MgbWVqb3Jlc1xyXG4gICAgICAgICAgcHJlY2lvcywgcGFyYSBub3NvdHJvcyBlcyBpbXBvcnRhbnRlIHF1ZSBjdWVudGUgY29uIGNyZWRlbmNpYWxlcyBxdWVcclxuICAgICAgICAgIGN1YnJhbiBzdXMgbmVjZXNpZGFkZXMgYSBwcmVjaW9zIGFjY2VzaWJsZXMuXHJcbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxyXG4gICAgICAgIDxNb2RhbC5Gb290ZXI+XHJcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsRH0+XHJcbiAgICAgICAgICAgIENlcnJhclxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XHJcbiAgICAgIDwvTW9kYWw+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybUNyZWRlbmNpYWxlcztcclxuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IMGTarjeta = _styled(\"img\", false ? {\n    target: \"eszycxf5\"\n  } : {\n    target: \"eszycxf5\",\n    label: \"IMGTarjeta\"\n  })(false ? {\n    name: \"r9y48n\",\n    styles: \"margin:auto!important;width:23%;@media (max-width: 500px){width:33%;}\"\n  } : {\n    name: \"r9y48n\",\n    styles: \"margin:auto!important;width:23%;@media (max-width: 500px){width:33%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IMGTarjetaD = _styled(\"img\", false ? {\n    target: \"eszycxf4\"\n  } : {\n    target: \"eszycxf4\",\n    label: \"IMGTarjetaD\"\n  })(false ? {\n    name: \"1y7yo48\",\n    styles: \"cursor:pointer;width:37%;@media (max-width: 605px){width:38%;}@media (max-width: 500px){width:56%;}\"\n  } : {\n    name: \"1y7yo48\",\n    styles: \"cursor:pointer;width:37%;@media (max-width: 605px){width:38%;}@media (max-width: 500px){width:56%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IMGLogos = _styled(\"img\", false ? {\n    target: \"eszycxf3\"\n  } : {\n    target: \"eszycxf3\",\n    label: \"IMGLogos\"\n  })(false ? {\n    name: \"13jsrr9\",\n    styles: \"margin:auto!important;@media (max-width: 1500px){width:65%;}@media (max-width: 1100px){width:80%;}@media (max-width: 800px){height:8rem!important;}@media (max-width: 500px){height:5.5rem!important;}\"\n  } : {\n    name: \"13jsrr9\",\n    styles: \"margin:auto!important;@media (max-width: 1500px){width:65%;}@media (max-width: 1100px){width:80%;}@media (max-width: 800px){height:8rem!important;}@media (max-width: 500px){height:5.5rem!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const TxtTarjeta = _styled(\"p\", false ? {\n    target: \"eszycxf2\"\n  } : {\n    target: \"eszycxf2\",\n    label: \"TxtTarjeta\"\n  })(false ? {\n    name: \"ddq6ti\",\n    styles: \"font-size:19px;font-weight:bold\"\n  } : {\n    name: \"ddq6ti\",\n    styles: \"font-size:19px;font-weight:bold\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const DivIconos = _styled(\"div\", false ? {\n    target: \"eszycxf1\"\n  } : {\n    target: \"eszycxf1\",\n    label: \"DivIconos\"\n  })(false ? {\n    name: \"1pzfeih\",\n    styles: \"display:flex;margin-top:4.5rem;justify-content:space-around;text-align:center\"\n  } : {\n    name: \"1pzfeih\",\n    styles: \"display:flex;margin-top:4.5rem;justify-content:space-around;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Icon = _styled(\"div\", false ? {\n    target: \"eszycxf0\"\n  } : {\n    target: \"eszycxf0\",\n    label: \"Icon\"\n  })(false ? {\n    name: \"1d3w5wq\",\n    styles: \"width:100%\"\n  } : {\n    name: \"1d3w5wq\",\n    styles: \"width:100%\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const {\n    0: abiertoAnuncios,\n    1: cambiarAbiertoAnuncios\n  } = useState(false);\n\n  const abrirModal = () => {\n    cambiarAbiertoAnuncios(true);\n  };\n\n  const cerrarModal = () => {\n    cambiarAbiertoAnuncios(false);\n  };\n\n  const size = useWindowSize();\n  const {\n    0: abiertoModalT,\n    1: cambiarAbiertoModal\n  } = useState(false);\n  const {\n    0: abiertoModalD,\n    1: cambiarAbiertoModalD\n  } = useState(false);\n\n  const abrirModalT = () => {\n    cambiarAbiertoModal(true);\n  };\n\n  const cerrarModalT = () => {\n    cambiarAbiertoModal(false);\n  };\n\n  const abrirModalD = () => {\n    cambiarAbiertoModalD(true);\n  };\n\n  const cerrarModalD = () => {\n    cambiarAbiertoModalD(false);\n  };\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"span\", {\n    id: \"contacto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(ContenedorGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, size > 995 ? ___EmotionJSX(\"div\", {\n    className: \"cent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"h2\", {\n    className: \"fonthd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Impresi\\xF3n de credenciales a domicilio para empresas e instituciones educativas. \", ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 41\n    }\n  }), ___EmotionJSX(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"\\xA1Llame ahora para m\\xE1s informaci\\xF3n!\"))) : ___EmotionJSX(React.Fragment, null, \" \"), ___EmotionJSX(DivSello, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"DivImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Img, {\n    src: \"img/sellogarantia.webp\",\n    alt: \"Sello de Garantia Hand Held Solutions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }))), ___EmotionJSX(TitDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Tit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"\\xA1Cotice ahora!\")), ___EmotionJSX(Contenedor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(FormularioDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(FormHandHeld, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(PoliticasDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(\"p\", {\n    className: \"politicas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Al dar click en el bot\\xF3n de enviar se esta aceptando nuestra\", \" \", ___EmotionJSX(\"a\", {\n    onClick: abrirModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"pol\\xEDtica de privacidad.\")))), ___EmotionJSX(Modal, {\n    show: abiertoAnuncios,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"Anuncios\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Politicas, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  })), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, \"Cerrar\")))), ___EmotionJSX(DivIconos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(IMGTarjetaD, {\n    className: \"creicon\",\n    src: \"/img/Envio gratis.webp\",\n    alt: \"Envios Gratis\",\n    onClick: abrirModalT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TxtTarjeta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"Env\\xEDo gratis a toda la\", ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }), \" Rep\\xFAblica Mexicana.\")), ___EmotionJSX(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(IMGTarjetaD, {\n    className: \"creicon\",\n    src: \"/img/Los mejores precios del mercado.webp\",\n    alt: \"Icono Mejores Precios\",\n    onClick: abrirModalD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TxtTarjeta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"Mejores precios acordes\", ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }), \" a su econom\\xEDa.\"))), ___EmotionJSX(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(DivTarjeta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(IMGTarjeta, {\n    src: \"/img/Pago con tarjeta.webp\",\n    alt: \"Icono_Pago\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TxtTarjeta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \"\\xA1Aceptamos pago con tarjeta!\"), ___EmotionJSX(IMGLogos, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625761069/Iconos/metodos_de_pago_500x120_1_zkuoyc.png\",\n    alt: \"Imagen_LogoPago\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  })))), ___EmotionJSX(Modal, {\n    show: abiertoModalT,\n    onHide: cerrarModalT,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \"Env\\xEDo gratis a toda la Rep\\xFAblica Mexicana.\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, \"Contamos con env\\xEDo gratis a toda la Rep\\xFAblica Mexicana, nosotros le mandamos sin cargo adicional, las credenciales que necesite. Todas nuestras impresiones de tarjetas son de materiales altamente resistentes y duraderos (PVC, PET y policarbonato) que le dan a cada credencial una larga vida de uso.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalD,\n    onHide: cerrarModalD,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"Mejores precios acordes a su econom\\xEDa.\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, \"En Hand Held Solutions, nos comprometemos a brindarle los mejores precios, para nosotros es importante que cuente con credenciales que cubran sus necesidades a precios accesibles.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))));\n};\n\nexport default FormCredenciales;","map":{"version":3,"sources":["C:/Users/jhino/Desktop/codigo de prueba HHS/components/pestanas/FormCredenciales.js"],"names":["React","useState","Modal","Button","Politicas","FormHandHeld","useWindowSize","FormCredenciales","ContenedorGrid","DivSello","Img","TitDiv","Tit","Contenedor","FormularioDiv","PoliticasDiv","DivTarjeta","IMGTarjeta","IMGTarjetaD","IMGLogos","TxtTarjeta","DivIconos","Icon","abiertoAnuncios","cambiarAbiertoAnuncios","abrirModal","cerrarModal","size","abiertoModalT","cambiarAbiertoModal","abiertoModalD","cambiarAbiertoModalD","abrirModalT","cerrarModalT","abrirModalD","cerrarModalD"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Politicas from \"../../static/PoliticaTex\";\r\nimport FormHandHeld from \"../../config/FormHandHeld\";\r\nimport useWindowSize from \"../../hooks/useWindowSize\";\r\n\r\nconst FormCredenciales = () => {\r\n  const ContenedorGrid = styled.div`\r\n    width: 50%;\r\n    margin-top: 2rem;\r\n\r\n    @media (max-width: 995px) {\r\n      width: 100%;\r\n      margin-top: 3rem;\r\n    }\r\n  `;\r\n\r\n  const DivSello = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-top: 0rem;\r\n  `;\r\n\r\n  const Img = styled.img`\r\n    width: 70%;\r\n    height: 90%;\r\n\r\n    @media (max-width: 375px) {\r\n      width: 70%;\r\n      height: 90%;\r\n    }\r\n  `;\r\n\r\n  const TitDiv = styled.div`\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 3rem;\r\n  `;\r\n\r\n  const Tit = styled.h1`\r\n    font-weight: bold;\r\n\r\n    @media (max-width: 833px) {\r\n      font-size: 35px !important;\r\n    }\r\n\r\n    @media (max-width: 550px) {\r\n      font-size: 28px !important;\r\n    }\r\n  `;\r\n\r\n  const Contenedor = styled.div`\r\n    width: 86%;\r\n    margin: 2rem auto;\r\n  `;\r\n\r\n  const FormularioDiv = styled.div`\r\n    width: 100%;\r\n    background-color: #0076c0;\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 0.5rem;\r\n  `;\r\n\r\n  const PoliticasDiv = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n  `;\r\n\r\n  const DivTarjeta = styled.div`\r\n    margin: auto;\r\n    width: 100%;\r\n    text-align: center;\r\n  `;\r\n\r\n  const IMGTarjeta = styled.img`\r\n    margin: auto !important;\r\n    width: 23%;\r\n\r\n    @media (max-width: 500px) {\r\n      width: 33%;\r\n    }\r\n  `;\r\n\r\n  const IMGTarjetaD = styled.img`\r\n    cursor: pointer;\r\n    width: 37%;\r\n\r\n    @media (max-width: 605px) {\r\n      width: 38%;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      width: 56%;\r\n    }\r\n  `;\r\n\r\n  const IMGLogos = styled.img`\r\n    margin: auto !important;\r\n\r\n    @media (max-width: 1500px) {\r\n      width: 65%;\r\n    }\r\n\r\n    @media (max-width: 1100px) {\r\n      width: 80%;\r\n    }\r\n\r\n    @media (max-width: 800px) {\r\n      height: 8rem !important;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      height: 5.5rem !important;\r\n    }\r\n  `;\r\n\r\n  const TxtTarjeta = styled.p`\r\n    font-size: 19px;\r\n    font-weight: bold;\r\n  `;\r\n\r\n  const DivIconos = styled.div`\r\n    display: flex;\r\n    margin-top: 4.5rem;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n  `;\r\n\r\n  const Icon = styled.div`\r\n    width: 100%;\r\n  `;\r\n\r\n  const [abiertoAnuncios, cambiarAbiertoAnuncios] = useState(false);\r\n\r\n  const abrirModal = () => {\r\n    cambiarAbiertoAnuncios(true);\r\n  };\r\n\r\n  const cerrarModal = () => {\r\n    cambiarAbiertoAnuncios(false);\r\n  };\r\n\r\n  const size = useWindowSize();\r\n\r\n  const [abiertoModalT, cambiarAbiertoModal] = useState(false);\r\n  const [abiertoModalD, cambiarAbiertoModalD] = useState(false);\r\n\r\n  const abrirModalT = () => {\r\n    cambiarAbiertoModal(true);\r\n  };\r\n\r\n  const cerrarModalT = () => {\r\n    cambiarAbiertoModal(false);\r\n  };\r\n\r\n  const abrirModalD = () => {\r\n    cambiarAbiertoModalD(true);\r\n  };\r\n\r\n  const cerrarModalD = () => {\r\n    cambiarAbiertoModalD(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span id=\"contacto\"></span>\r\n      <ContenedorGrid>\r\n        {size > 995 ? (\r\n          <div className=\"cent\">\r\n            <h2 className=\"fonthd\">\r\n              Impresión de credenciales a domicilio para empresas e\r\n              instituciones educativas. <br />\r\n              <b>¡Llame ahora para más información!</b>\r\n            </h2>\r\n          </div>\r\n        ) : (\r\n          <> </>\r\n        )}\r\n        <DivSello>\r\n          <div className=\"DivImg\">\r\n            <Img\r\n              src=\"img/sellogarantia.webp\"\r\n              alt=\"Sello de Garantia Hand Held Solutions\"\r\n            />\r\n          </div>\r\n        </DivSello>\r\n        <TitDiv>\r\n          <Tit>¡Cotice ahora!</Tit>\r\n        </TitDiv>\r\n        <Contenedor>\r\n          <FormularioDiv>\r\n            <FormHandHeld />\r\n            <PoliticasDiv>\r\n              <p className=\"politicas\">\r\n                Al dar click en el botón de enviar se esta aceptando nuestra{\" \"}\r\n                <a onClick={abrirModal}>política de privacidad.</a>\r\n              </p>\r\n            </PoliticasDiv>\r\n          </FormularioDiv>\r\n\r\n          <Modal\r\n            show={abiertoAnuncios}\r\n            onHide={cerrarModal}\r\n            keyboard={false}\r\n            size=\"lg\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Anuncios</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Politicas />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"light\" onClick={cerrarModal}>\r\n                Cerrar\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Contenedor>\r\n        <DivIconos>\r\n          <Icon>\r\n            <IMGTarjetaD\r\n              className=\"creicon\"\r\n              src=\"/img/Envio gratis.webp\"\r\n              alt=\"Envios Gratis\"\r\n              onClick={abrirModalT}\r\n            />\r\n            <TxtTarjeta>\r\n              Envío gratis a toda la\r\n              <br /> República Mexicana.\r\n            </TxtTarjeta>\r\n          </Icon>\r\n          <Icon>\r\n            <IMGTarjetaD\r\n              className=\"creicon\"\r\n              src=\"/img/Los mejores precios del mercado.webp\"\r\n              alt=\"Icono Mejores Precios\"\r\n              onClick={abrirModalD}\r\n            />\r\n            <TxtTarjeta>\r\n              Mejores precios acordes\r\n              <br /> a su economía.\r\n            </TxtTarjeta>\r\n          </Icon>\r\n        </DivIconos>\r\n        <div>\r\n          <DivTarjeta>\r\n            <IMGTarjeta\r\n              src=\"/img/Pago con tarjeta.webp\"\r\n              alt=\"Icono_Pago\"\r\n            />\r\n            <TxtTarjeta>¡Aceptamos pago con tarjeta!</TxtTarjeta>\r\n            <IMGLogos\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625761069/Iconos/metodos_de_pago_500x120_1_zkuoyc.png\"\r\n              alt=\"Imagen_LogoPago\"\r\n            />\r\n          </DivTarjeta>\r\n        </div>\r\n      </ContenedorGrid>\r\n\r\n      <Modal\r\n        show={abiertoModalT}\r\n        onHide={cerrarModalT}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Envío gratis a toda la República Mexicana.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        Contamos con envío gratis a toda la República Mexicana, nosotros le mandamos sin cargo adicional, las credenciales que necesite. Todas nuestras impresiones de tarjetas son de materiales altamente resistentes y duraderos (PVC, PET y policarbonato) que le dan a cada credencial una larga vida de uso.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModal}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={abiertoModalD}\r\n        onHide={cerrarModalD}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Mejores precios acordes a su economía.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          En Hand Held Solutions, nos comprometemos a brindarle los mejores\r\n          precios, para nosotros es importante que cuente con credenciales que\r\n          cubran sus necesidades a precios accesibles.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModalD}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormCredenciales;\r\n"]},"metadata":{},"sourceType":"module"}