{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jhino\\\\OneDrive\\\\Escritorio\\\\C\\xF3digo actual p\\xE1gina web\\\\components\\\\pestanas\\\\TextoFundas.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar TextoFundas = function TextoFundas() {\n  _s();\n\n  var Contenedor = _styled(\"div\", false ? {\n    target: \"epnm5sf14\"\n  } : {\n    target: \"epnm5sf14\",\n    label: \"Contenedor\"\n  })(false ? {\n    name: \"1uczh34\",\n    styles: \"width:100%;text-align:center;@media (max-width: 456px){margin-top:5rem;}@media (max-width: 410px){margin-top:-2rem;}\"\n  } : {\n    name: \"1uczh34\",\n    styles: \"width:100%;text-align:center;@media (max-width: 456px){margin-top:5rem;}@media (max-width: 410px){margin-top:-2rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ContenedorD = _styled(\"div\", false ? {\n    target: \"epnm5sf13\"\n  } : {\n    target: \"epnm5sf13\",\n    label: \"ContenedorD\"\n  })(false ? {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\"\n  } : {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXE9uZURyaXZlXFxFc2NyaXRvcmlvXFxDw7NkaWdvIGFjdHVhbCBww6FnaW5hIHdlYlxcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvRnVuZGFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1CZ0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxqaGlub1xcT25lRHJpdmVcXEVzY3JpdG9yaW9cXEPDs2RpZ28gYWN0dWFsIHDDoWdpbmEgd2ViXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcVGV4dG9GdW5kYXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvbiB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcblxuY29uc3QgVGV4dG9GdW5kYXMgPSAoKSA9PiB7XG4gIGNvbnN0IENvbnRlbmVkb3IgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTZweCkge1xuICAgICAgbWFyZ2luLXRvcDogNXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDEwcHgpIHtcbiAgICAgIG1hcmdpbi10b3A6IC0ycmVtO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBDb250ZW5lZG9yRCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogNHJlbTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5OTVweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgT3ZhVGV4RGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNzglO1xuICAgIGhlaWdodDogNC41cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XG4gICAgYm9yZGVyLXJhZGl1czogNHJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgT3ZhVGV4ID0gc3R5bGVkLnBgXG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIGNvbG9yOiB3aGl0ZTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTM1NXB4KSB7XG4gICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBUZXh0RGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMHB4IGF1dG87XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgVGV4dCA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjk5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgRGl2SU1HID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAwcmVtO1xuICBgO1xuXG4gIGNvbnN0IElNRyA9IHN0eWxlZC5pbWdgXG4gICAgd2lkdGg6IDgwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODUwcHgpIHtcbiAgICAgIHdpZHRoOiA2OCU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICB3aWR0aDogODAlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAgICAgd2lkdGg6IDg5JTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgRGl2VGV4dG8gPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gIGA7XG5cbiAgY29uc3QgVGV4dG9JTUcgPSBzdHlsZWQucGBcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcGFkZGluZzogMjVweDtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTUwcHgpIHtcbiAgICAgIHBhZGRpbmctdG9wOiA0cmVtO1xuICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBUaXR1bG9CZW5lZmljaW9zID0gc3R5bGVkLnBgXG4gICAgZm9udC1zaXplOiAzNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTU1MHB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogNHJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQmVuZWZpY2lvcyA9IHN0eWxlZC51bGBcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQmVuZWZpY2lvc0xpc3RhID0gc3R5bGVkLmxpYFxuICAgIGxpc3Qtc3R5bGU6IG91dHNpZGU7XG4gIGA7XG5cbiAgY29uc3QgQ29udGVuZWRvckljb25vID0gc3R5bGVkLmRpdmBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDNyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMTAxcHgpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMy41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDByZW07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgSWNvbm8gPSBzdHlsZWQuaW1nYFxuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNDQwcHgpIHtcbiAgICAgIHdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gICAgICB3aWR0aDogOXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcbiAgICAgIHdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzA4cHgpIHtcbiAgICAgIHdpZHRoOiA5cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzhweCkge1xuICAgICAgd2lkdGg6IDhyZW07XG4gICAgfVxuICBgO1xuXG4gIC8qY29uc3QgQ29udGVuZWRvckljb25vRCA9IHN0eWxlZC5kaXZgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG5cbiAgICBAbWVkaWEobWluLXdpZHRoOiAxMTAxcHgpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMy41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgIHBhZGRpbmctbGVmdDogMHJlbTtcbiAgICB9XG4gIGA7XG4qL1xuICBjb25zdCBbYWJpZXJ0b01vZGFsLCBjYW1iaWFyQWJpZXJ0b01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FiaWVydG9Nb2RhbEQsIGNhbWJpYXJBYmllcnRvTW9kYWxEXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FiaWVydG9Nb2RhbFQsIGNhbWJpYXJBYmllcnRvTW9kYWxUXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCBhYnJpck1vZGFsID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2VycmFyTW9kYWwgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbChmYWxzZSk7XG4gIH07XG5cbiAgY29uc3QgYWJyaXJNb2RhbEQgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2VycmFyTW9kYWxEID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCBhYnJpck1vZGFsVCA9ICgpID0+IHtcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsVCh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBjZXJyYXJNb2RhbFQgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbFQoZmFsc2UpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3Ryb1wiPlxuICAgICAgICA8Q29udGVuZWRvcj5cbiAgICAgICAgICA8RGl2VGV4dG8+XG4gICAgICAgICAgICA8VGl0dWxvQmVuZWZpY2lvcz5cbiAgICAgICAgICAgICAgQmVuZWZpY2lvcyBmdW5kYXMgSEhTOiA8YnIgLz5cbiAgICAgICAgICAgIDwvVGl0dWxvQmVuZWZpY2lvcz5cbiAgICAgICAgICAgIDxCZW5lZmljaW9zPlxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICAgIEZhYnJpY2Ftb3MgbGFzIG1lam9yZXMgZnVuZGFzIGRlbCBtZXJjYWRvLCBkaXNlw7FhZGFzIHBhcmEgY3VicmlyXG4gICAgICAgICAgICAgICAgc3VzIG5lY2VzaWRhZGVzLlxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgICBGdW5kYXMgaWRlYWxlcyBwYXJhIGhhbmRoZWxkcywgaW1wcmVzb3JhcyBkZSBldGlxdWV0YXNcbiAgICAgICAgICAgICAgICBwb3J0w6F0aWxlcyB5IGxlY3RvcmVzIGRlIGPDs2RpZ29zLlxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgICBQcm90ZWNjacOzbiBpbmRpc3BlbnNhYmxlIHF1ZSBheXVkYXLDoSBhIHN1cyBlcXVpcG9zIGEgc29wb3J0YXJcbiAgICAgICAgICAgICAgICBjYcOtZGFzIG8gZGHDsW9zIGFjY2lkZW50YWxlcy5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgRnVuZGFzIGZhYnJpY2FkYXMgY29uIGxvcyBtZWpvcmVzIG1hdGVyaWFsZXMsIGRpc2XDsWFkYXMgYSBsYXNcbiAgICAgICAgICAgICAgICBtZWRpZGFzLCBjYXJhY3RlcsOtc3RpY2FzLCBlc3BlY2lmaWNhY2lvbmVzIGRlIGNhZGEgbWFyY2EgeVxuICAgICAgICAgICAgICAgIG1vZGVsby5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgQWRxdWllcmEgbGEgc2VndXJpZGFkIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4gYSBwcmVjaW9zXG4gICAgICAgICAgICAgICAgYWNjZXNpYmxlcy5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICA8L0JlbmVmaWNpb3M+XG4gICAgICAgICAgPC9EaXZUZXh0bz5cbiAgICAgICAgPC9Db250ZW5lZG9yPlxuICAgICAgICA8Q29udGVuZWRvckljb25vPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXNwaVwiPlxuICAgICAgICAgICAgPEljb25vXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvRW52aW8gZ3JhdGlzLndlYnBcIlxuICAgICAgICAgICAgICBhbHQ9XCJJY29ubyBGdW5kYXMgRW52aW8gR3JhdGlzXCJcbiAgICAgICAgICAgICAgb25DbGljaz17YWJyaXJNb2RhbH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8VGV4dERpdj5cbiAgICAgICAgICAgICAgPFRleHQ+XG4gICAgICAgICAgICAgICAgRW52w61vIGdyYXRpc1xuICAgICAgICAgICAgICAgIDxiciAvPiBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYS5cbiAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9UZXh0RGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXNwaVwiPlxuICAgICAgICAgICAgPEljb25vXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjI0NTgvTnVldm9zJTIwSWNvbm9zL01lam9yZXNfcHJlY2lvc19hY29yZGVzX2Ffc3VfZWNvbm9tJUMzJUFEYV94NXg2emwucG5nXCJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zIEZ1bmRhc1wiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxEfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxUZXh0RGl2PlxuICAgICAgICAgICAgICA8VGV4dD5Mb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLjwvVGV4dD5cbiAgICAgICAgICAgIDwvVGV4dERpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9Db250ZW5lZG9ySWNvbm8+XG4gICAgICAgIHsvKiAgIDxDb250ZW5lZG9ySWNvbm9EPlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb25vIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjI0NTgvTnVldm9zJTIwSWNvbm9zL01lam9yZXNfcHJlY2lvc19hY29yZGVzX2Ffc3VfZWNvbm9tJUMzJUFEYV94NXg2emwucG5nXCIgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zIEZ1bmRhc1wiIG9uQ2xpY2s9e2FicmlyTW9kYWxUfS8+XG4gICAgICAgICAgPFRleHREaXY+XG4gICAgICAgICAgICAgIDxUZXh0PlxuICAgICAgICAgICAgICBMb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLlxuICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8L1RleHREaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgIDwvQ29udGVuZWRvckljb25vRD4gICAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XG4gICAgICAgICAgPENvbnRlbmVkb3JEPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVudGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj7CoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZW50YSE8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZXBhcmFjacOzbiFcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWFjY2Vzb3Jpb3MteS1jb25zdW1pYmxlc1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUFkcXVpZXJhIGxvcyBhY2Nlc29yaW9zIHkgY29uc3VtaWJsZXMgcXVlIG5lY2VzaXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvRFNELXZlbnRhLWVuLXJ1dGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj5cbiAgICAgICAgICAgICAgICAgICAgwqFDb25vemNhIG51ZXN0cmEgc29sdWNpw7NuIFwiRFNEXCIgcGFyYSB2ZW50YSBlbiBydXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW1wcmVzaW9uLWNyZWRlbmNpYWxlcy10YXJqZXRhcy1nYWZldGVzLXB2Y1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXNcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9Db250ZW5lZG9yRD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPE1vZGFsXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxuICAgICAgICBzaXplPVwibGdcIlxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxuICAgICAgPlxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5FbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLjwvTW9kYWwuVGl0bGU+XG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxuICAgICAgICA8TW9kYWwuQm9keT5cbiAgICAgICAgICBDb250YW1vcyBjb24gZW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYSwgbm9zb3Ryb3MgbGVcbiAgICAgICAgICBtYW5kYW1vcyBzaW4gY2FyZ28gYWRpY2lvbmFsLCBsYXMgZnVuZGFzIHF1ZSBuZWNlc2l0ZSwgaGVjaGFzIGEgbGFcbiAgICAgICAgICBtZWRpZGEsIGFkZWN1YWRhcyBwYXJhIGNhZGEgbWFyY2EgeSBtb2RlbG8gZGVsIG1lcmNhZG8uXG4gICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgICA8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsRH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbER9XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcbiAgICAgID5cbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby48L01vZGFsLlRpdGxlPlxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cbiAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgRW4gSGFuZCBIZWxkIFNvbHV0aW9ucywgbm9zIGNvbXByb21ldGVtb3MgYSBicmluZGFybGUgbG9zIG1lam9yZXNcbiAgICAgICAgICBwcmVjaW9zLCBwYXJhIG5vc290cm9zIGVzIGltcG9ydGFudGUgcXVlIGN1ZW50ZSBjb24gZnVuZGFzIHF1ZSBjdWJyYW5cbiAgICAgICAgICBzdXMgbmVjZXNpZGFkZXMgeSBwcm90ZWphbiBzdXMgZXF1aXBvcyBhIHByZWNpb3MgYWNjZXNpYmxlcy5cbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxuICAgICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWxEfT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgICA8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsVH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbFR9XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcbiAgICAgID5cbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby48L01vZGFsLlRpdGxlPlxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cbiAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgRmFicmljYW1vcyBsYXMgbWVqb3JlcyBmdW5kYXMgZGVsIG1lcmNhZG8sIGRpc2XDsWFkYXMgcGFyYSBjdWJyaXIgc3VzXG4gICAgICAgICAgbmVjZXNpZGFkZXMuIEFkcXVpZXJhIGxhIHByb3RlY2Npw7NuIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4uIERpc2XDsW9zXG4gICAgICAgICAgZGUgbGEgbWVqb3IgY2FsaWRhZCwgaGVjaG9zIGNvbiBtYXRlcmlhbGVzIGRlIHByaW1lcmEuIEZ1bmRhc1xuICAgICAgICAgIGZhYnJpY2FkYXMgYSBsYXMgbWVkaWRhcyBkZSBkaWZlcmVudGVzIG1hcmNhcyB5IG1vZGVsb3MsIHByb3RlY2Npw7NuXG4gICAgICAgICAgaW5kaXNwZW5zYWJsZSBxdWUgYXl1ZGFyw6EgYSBzdXMgZXF1aXBvcyBhIHNvcG9ydGFyIGNhw61kYXMgbyBkYcOxb3NcbiAgICAgICAgICBhY2NpZGVudGFsZXMuXG4gICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsVH0+XG4gICAgICAgICAgICBDZXJyYXJcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICA8L01vZGFsPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGV4dG9GdW5kYXM7XG4iXX0= */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var OvaTexDiv = _styled(\"div\", false ? {\n    target: \"epnm5sf12\"\n  } : {\n    target: \"epnm5sf12\",\n    label: \"OvaTexDiv\"\n  })(false ? {\n    name: \"bmxbe\",\n    styles: \"width:78%;height:4.5rem;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"\n  } : {\n    name: \"bmxbe\",\n    styles: \"width:78%;height:4.5rem;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXE9uZURyaXZlXFxFc2NyaXRvcmlvXFxDw7NkaWdvIGFjdHVhbCBww6FnaW5hIHdlYlxcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvRnVuZGFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCOEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxqaGlub1xcT25lRHJpdmVcXEVzY3JpdG9yaW9cXEPDs2RpZ28gYWN0dWFsIHDDoWdpbmEgd2ViXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcVGV4dG9GdW5kYXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvbiB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcblxuY29uc3QgVGV4dG9GdW5kYXMgPSAoKSA9PiB7XG4gIGNvbnN0IENvbnRlbmVkb3IgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTZweCkge1xuICAgICAgbWFyZ2luLXRvcDogNXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDEwcHgpIHtcbiAgICAgIG1hcmdpbi10b3A6IC0ycmVtO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBDb250ZW5lZG9yRCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogNHJlbTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5OTVweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgT3ZhVGV4RGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNzglO1xuICAgIGhlaWdodDogNC41cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XG4gICAgYm9yZGVyLXJhZGl1czogNHJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgT3ZhVGV4ID0gc3R5bGVkLnBgXG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIGNvbG9yOiB3aGl0ZTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTM1NXB4KSB7XG4gICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBUZXh0RGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMHB4IGF1dG87XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgVGV4dCA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjk5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgRGl2SU1HID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAwcmVtO1xuICBgO1xuXG4gIGNvbnN0IElNRyA9IHN0eWxlZC5pbWdgXG4gICAgd2lkdGg6IDgwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODUwcHgpIHtcbiAgICAgIHdpZHRoOiA2OCU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICB3aWR0aDogODAlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAgICAgd2lkdGg6IDg5JTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgRGl2VGV4dG8gPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gIGA7XG5cbiAgY29uc3QgVGV4dG9JTUcgPSBzdHlsZWQucGBcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcGFkZGluZzogMjVweDtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTUwcHgpIHtcbiAgICAgIHBhZGRpbmctdG9wOiA0cmVtO1xuICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBUaXR1bG9CZW5lZmljaW9zID0gc3R5bGVkLnBgXG4gICAgZm9udC1zaXplOiAzNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTU1MHB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogNHJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQmVuZWZpY2lvcyA9IHN0eWxlZC51bGBcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQmVuZWZpY2lvc0xpc3RhID0gc3R5bGVkLmxpYFxuICAgIGxpc3Qtc3R5bGU6IG91dHNpZGU7XG4gIGA7XG5cbiAgY29uc3QgQ29udGVuZWRvckljb25vID0gc3R5bGVkLmRpdmBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDNyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMTAxcHgpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMy41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDByZW07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgSWNvbm8gPSBzdHlsZWQuaW1nYFxuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNDQwcHgpIHtcbiAgICAgIHdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gICAgICB3aWR0aDogOXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcbiAgICAgIHdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzA4cHgpIHtcbiAgICAgIHdpZHRoOiA5cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzhweCkge1xuICAgICAgd2lkdGg6IDhyZW07XG4gICAgfVxuICBgO1xuXG4gIC8qY29uc3QgQ29udGVuZWRvckljb25vRCA9IHN0eWxlZC5kaXZgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG5cbiAgICBAbWVkaWEobWluLXdpZHRoOiAxMTAxcHgpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMy41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgIHBhZGRpbmctbGVmdDogMHJlbTtcbiAgICB9XG4gIGA7XG4qL1xuICBjb25zdCBbYWJpZXJ0b01vZGFsLCBjYW1iaWFyQWJpZXJ0b01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FiaWVydG9Nb2RhbEQsIGNhbWJpYXJBYmllcnRvTW9kYWxEXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FiaWVydG9Nb2RhbFQsIGNhbWJpYXJBYmllcnRvTW9kYWxUXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCBhYnJpck1vZGFsID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2VycmFyTW9kYWwgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbChmYWxzZSk7XG4gIH07XG5cbiAgY29uc3QgYWJyaXJNb2RhbEQgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2VycmFyTW9kYWxEID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCBhYnJpck1vZGFsVCA9ICgpID0+IHtcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsVCh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBjZXJyYXJNb2RhbFQgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbFQoZmFsc2UpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3Ryb1wiPlxuICAgICAgICA8Q29udGVuZWRvcj5cbiAgICAgICAgICA8RGl2VGV4dG8+XG4gICAgICAgICAgICA8VGl0dWxvQmVuZWZpY2lvcz5cbiAgICAgICAgICAgICAgQmVuZWZpY2lvcyBmdW5kYXMgSEhTOiA8YnIgLz5cbiAgICAgICAgICAgIDwvVGl0dWxvQmVuZWZpY2lvcz5cbiAgICAgICAgICAgIDxCZW5lZmljaW9zPlxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICAgIEZhYnJpY2Ftb3MgbGFzIG1lam9yZXMgZnVuZGFzIGRlbCBtZXJjYWRvLCBkaXNlw7FhZGFzIHBhcmEgY3VicmlyXG4gICAgICAgICAgICAgICAgc3VzIG5lY2VzaWRhZGVzLlxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgICBGdW5kYXMgaWRlYWxlcyBwYXJhIGhhbmRoZWxkcywgaW1wcmVzb3JhcyBkZSBldGlxdWV0YXNcbiAgICAgICAgICAgICAgICBwb3J0w6F0aWxlcyB5IGxlY3RvcmVzIGRlIGPDs2RpZ29zLlxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgICBQcm90ZWNjacOzbiBpbmRpc3BlbnNhYmxlIHF1ZSBheXVkYXLDoSBhIHN1cyBlcXVpcG9zIGEgc29wb3J0YXJcbiAgICAgICAgICAgICAgICBjYcOtZGFzIG8gZGHDsW9zIGFjY2lkZW50YWxlcy5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgRnVuZGFzIGZhYnJpY2FkYXMgY29uIGxvcyBtZWpvcmVzIG1hdGVyaWFsZXMsIGRpc2XDsWFkYXMgYSBsYXNcbiAgICAgICAgICAgICAgICBtZWRpZGFzLCBjYXJhY3RlcsOtc3RpY2FzLCBlc3BlY2lmaWNhY2lvbmVzIGRlIGNhZGEgbWFyY2EgeVxuICAgICAgICAgICAgICAgIG1vZGVsby5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgQWRxdWllcmEgbGEgc2VndXJpZGFkIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4gYSBwcmVjaW9zXG4gICAgICAgICAgICAgICAgYWNjZXNpYmxlcy5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICA8L0JlbmVmaWNpb3M+XG4gICAgICAgICAgPC9EaXZUZXh0bz5cbiAgICAgICAgPC9Db250ZW5lZG9yPlxuICAgICAgICA8Q29udGVuZWRvckljb25vPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXNwaVwiPlxuICAgICAgICAgICAgPEljb25vXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvRW52aW8gZ3JhdGlzLndlYnBcIlxuICAgICAgICAgICAgICBhbHQ9XCJJY29ubyBGdW5kYXMgRW52aW8gR3JhdGlzXCJcbiAgICAgICAgICAgICAgb25DbGljaz17YWJyaXJNb2RhbH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8VGV4dERpdj5cbiAgICAgICAgICAgICAgPFRleHQ+XG4gICAgICAgICAgICAgICAgRW52w61vIGdyYXRpc1xuICAgICAgICAgICAgICAgIDxiciAvPiBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYS5cbiAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9UZXh0RGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXNwaVwiPlxuICAgICAgICAgICAgPEljb25vXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjI0NTgvTnVldm9zJTIwSWNvbm9zL01lam9yZXNfcHJlY2lvc19hY29yZGVzX2Ffc3VfZWNvbm9tJUMzJUFEYV94NXg2emwucG5nXCJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zIEZ1bmRhc1wiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxEfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxUZXh0RGl2PlxuICAgICAgICAgICAgICA8VGV4dD5Mb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLjwvVGV4dD5cbiAgICAgICAgICAgIDwvVGV4dERpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9Db250ZW5lZG9ySWNvbm8+XG4gICAgICAgIHsvKiAgIDxDb250ZW5lZG9ySWNvbm9EPlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb25vIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjI0NTgvTnVldm9zJTIwSWNvbm9zL01lam9yZXNfcHJlY2lvc19hY29yZGVzX2Ffc3VfZWNvbm9tJUMzJUFEYV94NXg2emwucG5nXCIgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zIEZ1bmRhc1wiIG9uQ2xpY2s9e2FicmlyTW9kYWxUfS8+XG4gICAgICAgICAgPFRleHREaXY+XG4gICAgICAgICAgICAgIDxUZXh0PlxuICAgICAgICAgICAgICBMb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLlxuICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8L1RleHREaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgIDwvQ29udGVuZWRvckljb25vRD4gICAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XG4gICAgICAgICAgPENvbnRlbmVkb3JEPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVudGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj7CoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZW50YSE8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZXBhcmFjacOzbiFcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWFjY2Vzb3Jpb3MteS1jb25zdW1pYmxlc1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUFkcXVpZXJhIGxvcyBhY2Nlc29yaW9zIHkgY29uc3VtaWJsZXMgcXVlIG5lY2VzaXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvRFNELXZlbnRhLWVuLXJ1dGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj5cbiAgICAgICAgICAgICAgICAgICAgwqFDb25vemNhIG51ZXN0cmEgc29sdWNpw7NuIFwiRFNEXCIgcGFyYSB2ZW50YSBlbiBydXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW1wcmVzaW9uLWNyZWRlbmNpYWxlcy10YXJqZXRhcy1nYWZldGVzLXB2Y1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXNcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9Db250ZW5lZG9yRD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPE1vZGFsXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxuICAgICAgICBzaXplPVwibGdcIlxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxuICAgICAgPlxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5FbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLjwvTW9kYWwuVGl0bGU+XG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxuICAgICAgICA8TW9kYWwuQm9keT5cbiAgICAgICAgICBDb250YW1vcyBjb24gZW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYSwgbm9zb3Ryb3MgbGVcbiAgICAgICAgICBtYW5kYW1vcyBzaW4gY2FyZ28gYWRpY2lvbmFsLCBsYXMgZnVuZGFzIHF1ZSBuZWNlc2l0ZSwgaGVjaGFzIGEgbGFcbiAgICAgICAgICBtZWRpZGEsIGFkZWN1YWRhcyBwYXJhIGNhZGEgbWFyY2EgeSBtb2RlbG8gZGVsIG1lcmNhZG8uXG4gICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgICA8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsRH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbER9XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcbiAgICAgID5cbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby48L01vZGFsLlRpdGxlPlxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cbiAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgRW4gSGFuZCBIZWxkIFNvbHV0aW9ucywgbm9zIGNvbXByb21ldGVtb3MgYSBicmluZGFybGUgbG9zIG1lam9yZXNcbiAgICAgICAgICBwcmVjaW9zLCBwYXJhIG5vc290cm9zIGVzIGltcG9ydGFudGUgcXVlIGN1ZW50ZSBjb24gZnVuZGFzIHF1ZSBjdWJyYW5cbiAgICAgICAgICBzdXMgbmVjZXNpZGFkZXMgeSBwcm90ZWphbiBzdXMgZXF1aXBvcyBhIHByZWNpb3MgYWNjZXNpYmxlcy5cbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxuICAgICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWxEfT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgICA8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsVH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbFR9XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcbiAgICAgID5cbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby48L01vZGFsLlRpdGxlPlxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cbiAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgRmFicmljYW1vcyBsYXMgbWVqb3JlcyBmdW5kYXMgZGVsIG1lcmNhZG8sIGRpc2XDsWFkYXMgcGFyYSBjdWJyaXIgc3VzXG4gICAgICAgICAgbmVjZXNpZGFkZXMuIEFkcXVpZXJhIGxhIHByb3RlY2Npw7NuIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4uIERpc2XDsW9zXG4gICAgICAgICAgZGUgbGEgbWVqb3IgY2FsaWRhZCwgaGVjaG9zIGNvbiBtYXRlcmlhbGVzIGRlIHByaW1lcmEuIEZ1bmRhc1xuICAgICAgICAgIGZhYnJpY2FkYXMgYSBsYXMgbWVkaWRhcyBkZSBkaWZlcmVudGVzIG1hcmNhcyB5IG1vZGVsb3MsIHByb3RlY2Npw7NuXG4gICAgICAgICAgaW5kaXNwZW5zYWJsZSBxdWUgYXl1ZGFyw6EgYSBzdXMgZXF1aXBvcyBhIHNvcG9ydGFyIGNhw61kYXMgbyBkYcOxb3NcbiAgICAgICAgICBhY2NpZGVudGFsZXMuXG4gICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsVH0+XG4gICAgICAgICAgICBDZXJyYXJcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICA8L01vZGFsPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGV4dG9GdW5kYXM7XG4iXX0= */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var OvaTex = _styled(\"p\", false ? {\n    target: \"epnm5sf11\"\n  } : {\n    target: \"epnm5sf11\",\n    label: \"OvaTex\"\n  })(false ? {\n    name: \"1i04rfa\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\"\n  } : {\n    name: \"1i04rfa\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TextDiv = _styled(\"div\", false ? {\n    target: \"epnm5sf10\"\n  } : {\n    target: \"epnm5sf10\",\n    label: \"TextDiv\"\n  })(false ? {\n    name: \"q68gb5\",\n    styles: \"width:80%;margin:0px auto;@media (max-width: 1400px){width:100%;}\"\n  } : {\n    name: \"q68gb5\",\n    styles: \"width:80%;margin:0px auto;@media (max-width: 1400px){width:100%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXE9uZURyaXZlXFxFc2NyaXRvcmlvXFxDw7NkaWdvIGFjdHVhbCBww6FnaW5hIHdlYlxcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvRnVuZGFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZENEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxqaGlub1xcT25lRHJpdmVcXEVzY3JpdG9yaW9cXEPDs2RpZ28gYWN0dWFsIHDDoWdpbmEgd2ViXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcVGV4dG9GdW5kYXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvbiB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcblxuY29uc3QgVGV4dG9GdW5kYXMgPSAoKSA9PiB7XG4gIGNvbnN0IENvbnRlbmVkb3IgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTZweCkge1xuICAgICAgbWFyZ2luLXRvcDogNXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDEwcHgpIHtcbiAgICAgIG1hcmdpbi10b3A6IC0ycmVtO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBDb250ZW5lZG9yRCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogNHJlbTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5OTVweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgT3ZhVGV4RGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNzglO1xuICAgIGhlaWdodDogNC41cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XG4gICAgYm9yZGVyLXJhZGl1czogNHJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgT3ZhVGV4ID0gc3R5bGVkLnBgXG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIGNvbG9yOiB3aGl0ZTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTM1NXB4KSB7XG4gICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBUZXh0RGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMHB4IGF1dG87XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgVGV4dCA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjk5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgRGl2SU1HID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAwcmVtO1xuICBgO1xuXG4gIGNvbnN0IElNRyA9IHN0eWxlZC5pbWdgXG4gICAgd2lkdGg6IDgwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODUwcHgpIHtcbiAgICAgIHdpZHRoOiA2OCU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICB3aWR0aDogODAlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAgICAgd2lkdGg6IDg5JTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgRGl2VGV4dG8gPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gIGA7XG5cbiAgY29uc3QgVGV4dG9JTUcgPSBzdHlsZWQucGBcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcGFkZGluZzogMjVweDtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTUwcHgpIHtcbiAgICAgIHBhZGRpbmctdG9wOiA0cmVtO1xuICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBUaXR1bG9CZW5lZmljaW9zID0gc3R5bGVkLnBgXG4gICAgZm9udC1zaXplOiAzNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTU1MHB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogNHJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQmVuZWZpY2lvcyA9IHN0eWxlZC51bGBcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQmVuZWZpY2lvc0xpc3RhID0gc3R5bGVkLmxpYFxuICAgIGxpc3Qtc3R5bGU6IG91dHNpZGU7XG4gIGA7XG5cbiAgY29uc3QgQ29udGVuZWRvckljb25vID0gc3R5bGVkLmRpdmBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDNyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMTAxcHgpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMy41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDByZW07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgSWNvbm8gPSBzdHlsZWQuaW1nYFxuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNDQwcHgpIHtcbiAgICAgIHdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gICAgICB3aWR0aDogOXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcbiAgICAgIHdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzA4cHgpIHtcbiAgICAgIHdpZHRoOiA5cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzhweCkge1xuICAgICAgd2lkdGg6IDhyZW07XG4gICAgfVxuICBgO1xuXG4gIC8qY29uc3QgQ29udGVuZWRvckljb25vRCA9IHN0eWxlZC5kaXZgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG5cbiAgICBAbWVkaWEobWluLXdpZHRoOiAxMTAxcHgpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMy41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgIHBhZGRpbmctbGVmdDogMHJlbTtcbiAgICB9XG4gIGA7XG4qL1xuICBjb25zdCBbYWJpZXJ0b01vZGFsLCBjYW1iaWFyQWJpZXJ0b01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FiaWVydG9Nb2RhbEQsIGNhbWJpYXJBYmllcnRvTW9kYWxEXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FiaWVydG9Nb2RhbFQsIGNhbWJpYXJBYmllcnRvTW9kYWxUXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCBhYnJpck1vZGFsID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2VycmFyTW9kYWwgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbChmYWxzZSk7XG4gIH07XG5cbiAgY29uc3QgYWJyaXJNb2RhbEQgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2VycmFyTW9kYWxEID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCBhYnJpck1vZGFsVCA9ICgpID0+IHtcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsVCh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBjZXJyYXJNb2RhbFQgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbFQoZmFsc2UpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3Ryb1wiPlxuICAgICAgICA8Q29udGVuZWRvcj5cbiAgICAgICAgICA8RGl2VGV4dG8+XG4gICAgICAgICAgICA8VGl0dWxvQmVuZWZpY2lvcz5cbiAgICAgICAgICAgICAgQmVuZWZpY2lvcyBmdW5kYXMgSEhTOiA8YnIgLz5cbiAgICAgICAgICAgIDwvVGl0dWxvQmVuZWZpY2lvcz5cbiAgICAgICAgICAgIDxCZW5lZmljaW9zPlxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICAgIEZhYnJpY2Ftb3MgbGFzIG1lam9yZXMgZnVuZGFzIGRlbCBtZXJjYWRvLCBkaXNlw7FhZGFzIHBhcmEgY3VicmlyXG4gICAgICAgICAgICAgICAgc3VzIG5lY2VzaWRhZGVzLlxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgICBGdW5kYXMgaWRlYWxlcyBwYXJhIGhhbmRoZWxkcywgaW1wcmVzb3JhcyBkZSBldGlxdWV0YXNcbiAgICAgICAgICAgICAgICBwb3J0w6F0aWxlcyB5IGxlY3RvcmVzIGRlIGPDs2RpZ29zLlxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgICBQcm90ZWNjacOzbiBpbmRpc3BlbnNhYmxlIHF1ZSBheXVkYXLDoSBhIHN1cyBlcXVpcG9zIGEgc29wb3J0YXJcbiAgICAgICAgICAgICAgICBjYcOtZGFzIG8gZGHDsW9zIGFjY2lkZW50YWxlcy5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgRnVuZGFzIGZhYnJpY2FkYXMgY29uIGxvcyBtZWpvcmVzIG1hdGVyaWFsZXMsIGRpc2XDsWFkYXMgYSBsYXNcbiAgICAgICAgICAgICAgICBtZWRpZGFzLCBjYXJhY3RlcsOtc3RpY2FzLCBlc3BlY2lmaWNhY2lvbmVzIGRlIGNhZGEgbWFyY2EgeVxuICAgICAgICAgICAgICAgIG1vZGVsby5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgQWRxdWllcmEgbGEgc2VndXJpZGFkIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4gYSBwcmVjaW9zXG4gICAgICAgICAgICAgICAgYWNjZXNpYmxlcy5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICA8L0JlbmVmaWNpb3M+XG4gICAgICAgICAgPC9EaXZUZXh0bz5cbiAgICAgICAgPC9Db250ZW5lZG9yPlxuICAgICAgICA8Q29udGVuZWRvckljb25vPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXNwaVwiPlxuICAgICAgICAgICAgPEljb25vXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvRW52aW8gZ3JhdGlzLndlYnBcIlxuICAgICAgICAgICAgICBhbHQ9XCJJY29ubyBGdW5kYXMgRW52aW8gR3JhdGlzXCJcbiAgICAgICAgICAgICAgb25DbGljaz17YWJyaXJNb2RhbH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8VGV4dERpdj5cbiAgICAgICAgICAgICAgPFRleHQ+XG4gICAgICAgICAgICAgICAgRW52w61vIGdyYXRpc1xuICAgICAgICAgICAgICAgIDxiciAvPiBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYS5cbiAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9UZXh0RGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXNwaVwiPlxuICAgICAgICAgICAgPEljb25vXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjI0NTgvTnVldm9zJTIwSWNvbm9zL01lam9yZXNfcHJlY2lvc19hY29yZGVzX2Ffc3VfZWNvbm9tJUMzJUFEYV94NXg2emwucG5nXCJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zIEZ1bmRhc1wiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxEfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxUZXh0RGl2PlxuICAgICAgICAgICAgICA8VGV4dD5Mb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLjwvVGV4dD5cbiAgICAgICAgICAgIDwvVGV4dERpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9Db250ZW5lZG9ySWNvbm8+XG4gICAgICAgIHsvKiAgIDxDb250ZW5lZG9ySWNvbm9EPlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb25vIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjI0NTgvTnVldm9zJTIwSWNvbm9zL01lam9yZXNfcHJlY2lvc19hY29yZGVzX2Ffc3VfZWNvbm9tJUMzJUFEYV94NXg2emwucG5nXCIgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zIEZ1bmRhc1wiIG9uQ2xpY2s9e2FicmlyTW9kYWxUfS8+XG4gICAgICAgICAgPFRleHREaXY+XG4gICAgICAgICAgICAgIDxUZXh0PlxuICAgICAgICAgICAgICBMb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLlxuICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8L1RleHREaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgIDwvQ29udGVuZWRvckljb25vRD4gICAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XG4gICAgICAgICAgPENvbnRlbmVkb3JEPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVudGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj7CoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZW50YSE8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZXBhcmFjacOzbiFcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWFjY2Vzb3Jpb3MteS1jb25zdW1pYmxlc1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUFkcXVpZXJhIGxvcyBhY2Nlc29yaW9zIHkgY29uc3VtaWJsZXMgcXVlIG5lY2VzaXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvRFNELXZlbnRhLWVuLXJ1dGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj5cbiAgICAgICAgICAgICAgICAgICAgwqFDb25vemNhIG51ZXN0cmEgc29sdWNpw7NuIFwiRFNEXCIgcGFyYSB2ZW50YSBlbiBydXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW1wcmVzaW9uLWNyZWRlbmNpYWxlcy10YXJqZXRhcy1nYWZldGVzLXB2Y1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXNcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9Db250ZW5lZG9yRD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPE1vZGFsXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxuICAgICAgICBzaXplPVwibGdcIlxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxuICAgICAgPlxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5FbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLjwvTW9kYWwuVGl0bGU+XG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxuICAgICAgICA8TW9kYWwuQm9keT5cbiAgICAgICAgICBDb250YW1vcyBjb24gZW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYSwgbm9zb3Ryb3MgbGVcbiAgICAgICAgICBtYW5kYW1vcyBzaW4gY2FyZ28gYWRpY2lvbmFsLCBsYXMgZnVuZGFzIHF1ZSBuZWNlc2l0ZSwgaGVjaGFzIGEgbGFcbiAgICAgICAgICBtZWRpZGEsIGFkZWN1YWRhcyBwYXJhIGNhZGEgbWFyY2EgeSBtb2RlbG8gZGVsIG1lcmNhZG8uXG4gICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgICA8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsRH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbER9XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcbiAgICAgID5cbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby48L01vZGFsLlRpdGxlPlxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cbiAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgRW4gSGFuZCBIZWxkIFNvbHV0aW9ucywgbm9zIGNvbXByb21ldGVtb3MgYSBicmluZGFybGUgbG9zIG1lam9yZXNcbiAgICAgICAgICBwcmVjaW9zLCBwYXJhIG5vc290cm9zIGVzIGltcG9ydGFudGUgcXVlIGN1ZW50ZSBjb24gZnVuZGFzIHF1ZSBjdWJyYW5cbiAgICAgICAgICBzdXMgbmVjZXNpZGFkZXMgeSBwcm90ZWphbiBzdXMgZXF1aXBvcyBhIHByZWNpb3MgYWNjZXNpYmxlcy5cbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxuICAgICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWxEfT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgICA8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsVH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbFR9XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcbiAgICAgID5cbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby48L01vZGFsLlRpdGxlPlxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cbiAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgRmFicmljYW1vcyBsYXMgbWVqb3JlcyBmdW5kYXMgZGVsIG1lcmNhZG8sIGRpc2XDsWFkYXMgcGFyYSBjdWJyaXIgc3VzXG4gICAgICAgICAgbmVjZXNpZGFkZXMuIEFkcXVpZXJhIGxhIHByb3RlY2Npw7NuIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4uIERpc2XDsW9zXG4gICAgICAgICAgZGUgbGEgbWVqb3IgY2FsaWRhZCwgaGVjaG9zIGNvbiBtYXRlcmlhbGVzIGRlIHByaW1lcmEuIEZ1bmRhc1xuICAgICAgICAgIGZhYnJpY2FkYXMgYSBsYXMgbWVkaWRhcyBkZSBkaWZlcmVudGVzIG1hcmNhcyB5IG1vZGVsb3MsIHByb3RlY2Npw7NuXG4gICAgICAgICAgaW5kaXNwZW5zYWJsZSBxdWUgYXl1ZGFyw6EgYSBzdXMgZXF1aXBvcyBhIHNvcG9ydGFyIGNhw61kYXMgbyBkYcOxb3NcbiAgICAgICAgICBhY2NpZGVudGFsZXMuXG4gICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsVH0+XG4gICAgICAgICAgICBDZXJyYXJcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICA8L01vZGFsPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGV4dG9GdW5kYXM7XG4iXX0= */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Text = _styled(\"p\", false ? {\n    target: \"epnm5sf9\"\n  } : {\n    target: \"epnm5sf9\",\n    label: \"Text\"\n  })(false ? {\n    name: \"1k5cnp5\",\n    styles: \"font-size:19px;font-weight:bold;@media (max-width: 1100px){font-size:16px;}@media (max-width: 899px){font-size:14px;}@media (max-width: 699px){font-size:12px;}@media (max-width: 450px){font-size:10px;}\"\n  } : {\n    name: \"1k5cnp5\",\n    styles: \"font-size:19px;font-weight:bold;@media (max-width: 1100px){font-size:16px;}@media (max-width: 899px){font-size:14px;}@media (max-width: 699px){font-size:12px;}@media (max-width: 450px){font-size:10px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivIMG = _styled(\"div\", false ? {\n    target: \"epnm5sf8\"\n  } : {\n    target: \"epnm5sf8\",\n    label: \"DivIMG\"\n  })(false ? {\n    name: \"1af3zmi\",\n    styles: \"width:100%;margin-top:0rem\"\n  } : {\n    name: \"1af3zmi\",\n    styles: \"width:100%;margin-top:0rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var IMG = _styled(\"img\", false ? {\n    target: \"epnm5sf7\"\n  } : {\n    target: \"epnm5sf7\",\n    label: \"IMG\"\n  })(false ? {\n    name: \"1i6lw1j\",\n    styles: \"width:80%;height:100%;@media (max-width: 850px){width:68%;}@media (max-width: 500px){width:80%;}@media (max-width: 500px){width:89%;}\"\n  } : {\n    name: \"1i6lw1j\",\n    styles: \"width:80%;height:100%;@media (max-width: 850px){width:68%;}@media (max-width: 500px){width:80%;}@media (max-width: 500px){width:89%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var DivTexto = _styled(\"div\", false ? {\n    target: \"epnm5sf6\"\n  } : {\n    target: \"epnm5sf6\",\n    label: \"DivTexto\"\n  })(false ? {\n    name: \"8snisg\",\n    styles: \"width:100%;margin-top:4rem\"\n  } : {\n    name: \"8snisg\",\n    styles: \"width:100%;margin-top:4rem\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TextoIMG = _styled(\"p\", false ? {\n    target: \"epnm5sf5\"\n  } : {\n    target: \"epnm5sf5\",\n    label: \"TextoIMG\"\n  })(false ? {\n    name: \"ryqqyi\",\n    styles: \"font-size:35px;font-weight:bold;padding:25px;text-align:justify;@media (max-width: 1750px){font-size:30px;}@media (max-width: 1550px){padding-top:4rem;font-size:25px;}\"\n  } : {\n    name: \"ryqqyi\",\n    styles: \"font-size:35px;font-weight:bold;padding:25px;text-align:justify;@media (max-width: 1750px){font-size:30px;}@media (max-width: 1550px){padding-top:4rem;font-size:25px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var TituloBeneficios = _styled(\"p\", false ? {\n    target: \"epnm5sf4\"\n  } : {\n    target: \"epnm5sf4\",\n    label: \"TituloBeneficios\"\n  })(false ? {\n    name: \"1neu3bp\",\n    styles: \"font-size:35px;font-weight:bold;text-align:left;padding:25px;@media (max-width: 1750px){font-size:30px;}@media (max-width: 1550px){padding-top:4rem;font-size:25px;}\"\n  } : {\n    name: \"1neu3bp\",\n    styles: \"font-size:35px;font-weight:bold;text-align:left;padding:25px;@media (max-width: 1750px){font-size:30px;}@media (max-width: 1550px){padding-top:4rem;font-size:25px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Beneficios = _styled(\"ul\", false ? {\n    target: \"epnm5sf3\"\n  } : {\n    target: \"epnm5sf3\",\n    label: \"Beneficios\"\n  })(false ? {\n    name: \"onfebd\",\n    styles: \"font-size:30px;text-align:left;margin-left:25px;@media (max-width: 1750px){font-size:20px;}\"\n  } : {\n    name: \"onfebd\",\n    styles: \"font-size:30px;text-align:left;margin-left:25px;@media (max-width: 1750px){font-size:20px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var BeneficiosLista = _styled(\"li\", false ? {\n    target: \"epnm5sf2\"\n  } : {\n    target: \"epnm5sf2\",\n    label: \"BeneficiosLista\"\n  })(false ? {\n    name: \"1gax00t\",\n    styles: \"list-style:outside\"\n  } : {\n    name: \"1gax00t\",\n    styles: \"list-style:outside\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcamhpbm9cXE9uZURyaXZlXFxFc2NyaXRvcmlvXFxDw7NkaWdvIGFjdHVhbCBww6FnaW5hIHdlYlxcY29tcG9uZW50c1xccGVzdGFuYXNcXFRleHRvRnVuZGFzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdLbUMiLCJmaWxlIjoiQzpcXFVzZXJzXFxqaGlub1xcT25lRHJpdmVcXEVzY3JpdG9yaW9cXEPDs2RpZ28gYWN0dWFsIHDDoWdpbmEgd2ViXFxjb21wb25lbnRzXFxwZXN0YW5hc1xcVGV4dG9GdW5kYXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvbiB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcblxuY29uc3QgVGV4dG9GdW5kYXMgPSAoKSA9PiB7XG4gIGNvbnN0IENvbnRlbmVkb3IgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTZweCkge1xuICAgICAgbWFyZ2luLXRvcDogNXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDEwcHgpIHtcbiAgICAgIG1hcmdpbi10b3A6IC0ycmVtO1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBDb250ZW5lZG9yRCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogNHJlbTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA5OTVweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgT3ZhVGV4RGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogNzglO1xuICAgIGhlaWdodDogNC41cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc2YzA7XG4gICAgYm9yZGVyLXJhZGl1czogNHJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4OTlweCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgT3ZhVGV4ID0gc3R5bGVkLnBgXG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIGNvbG9yOiB3aGl0ZTtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTM1NXB4KSB7XG4gICAgICBmb250LXNpemU6IDE3cHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBUZXh0RGl2ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMHB4IGF1dG87XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgVGV4dCA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODk5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjk5cHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgRGl2SU1HID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAwcmVtO1xuICBgO1xuXG4gIGNvbnN0IElNRyA9IHN0eWxlZC5pbWdgXG4gICAgd2lkdGg6IDgwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODUwcHgpIHtcbiAgICAgIHdpZHRoOiA2OCU7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICB3aWR0aDogODAlO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MDBweCkge1xuICAgICAgd2lkdGg6IDg5JTtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgRGl2VGV4dG8gPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gIGA7XG5cbiAgY29uc3QgVGV4dG9JTUcgPSBzdHlsZWQucGBcbiAgICBmb250LXNpemU6IDM1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcGFkZGluZzogMjVweDtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE3NTBweCkge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNTUwcHgpIHtcbiAgICAgIHBhZGRpbmctdG9wOiA0cmVtO1xuICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBUaXR1bG9CZW5lZmljaW9zID0gc3R5bGVkLnBgXG4gICAgZm9udC1zaXplOiAzNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTU1MHB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogNHJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQmVuZWZpY2lvcyA9IHN0eWxlZC51bGBcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNzUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgQmVuZWZpY2lvc0xpc3RhID0gc3R5bGVkLmxpYFxuICAgIGxpc3Qtc3R5bGU6IG91dHNpZGU7XG4gIGA7XG5cbiAgY29uc3QgQ29udGVuZWRvckljb25vID0gc3R5bGVkLmRpdmBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDNyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMTAxcHgpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMy41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDByZW07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgSWNvbm8gPSBzdHlsZWQuaW1nYFxuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxNDQwcHgpIHtcbiAgICAgIHdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KSB7XG4gICAgICB3aWR0aDogOXJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTk1cHgpIHtcbiAgICAgIHdpZHRoOiAxMnJlbTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzA4cHgpIHtcbiAgICAgIHdpZHRoOiA5cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1MzhweCkge1xuICAgICAgd2lkdGg6IDhyZW07XG4gICAgfVxuICBgO1xuXG4gIC8qY29uc3QgQ29udGVuZWRvckljb25vRCA9IHN0eWxlZC5kaXZgXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG5cbiAgICBAbWVkaWEobWluLXdpZHRoOiAxMTAxcHgpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMy41cmVtO1xuICAgIH1cblxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDk5NXB4KSB7XG4gICAgIHBhZGRpbmctbGVmdDogMHJlbTtcbiAgICB9XG4gIGA7XG4qL1xuICBjb25zdCBbYWJpZXJ0b01vZGFsLCBjYW1iaWFyQWJpZXJ0b01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FiaWVydG9Nb2RhbEQsIGNhbWJpYXJBYmllcnRvTW9kYWxEXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2FiaWVydG9Nb2RhbFQsIGNhbWJpYXJBYmllcnRvTW9kYWxUXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCBhYnJpck1vZGFsID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvTW9kYWwodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2VycmFyTW9kYWwgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbChmYWxzZSk7XG4gIH07XG5cbiAgY29uc3QgYWJyaXJNb2RhbEQgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbEQodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2VycmFyTW9kYWxEID0gKCkgPT4ge1xuICAgIGNhbWJpYXJBYmllcnRvTW9kYWxEKGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCBhYnJpck1vZGFsVCA9ICgpID0+IHtcbiAgICBjYW1iaWFyQWJpZXJ0b01vZGFsVCh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBjZXJyYXJNb2RhbFQgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9Nb2RhbFQoZmFsc2UpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3Ryb1wiPlxuICAgICAgICA8Q29udGVuZWRvcj5cbiAgICAgICAgICA8RGl2VGV4dG8+XG4gICAgICAgICAgICA8VGl0dWxvQmVuZWZpY2lvcz5cbiAgICAgICAgICAgICAgQmVuZWZpY2lvcyBmdW5kYXMgSEhTOiA8YnIgLz5cbiAgICAgICAgICAgIDwvVGl0dWxvQmVuZWZpY2lvcz5cbiAgICAgICAgICAgIDxCZW5lZmljaW9zPlxuICAgICAgICAgICAgICA8QmVuZWZpY2lvc0xpc3RhPlxuICAgICAgICAgICAgICAgIEZhYnJpY2Ftb3MgbGFzIG1lam9yZXMgZnVuZGFzIGRlbCBtZXJjYWRvLCBkaXNlw7FhZGFzIHBhcmEgY3VicmlyXG4gICAgICAgICAgICAgICAgc3VzIG5lY2VzaWRhZGVzLlxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgICBGdW5kYXMgaWRlYWxlcyBwYXJhIGhhbmRoZWxkcywgaW1wcmVzb3JhcyBkZSBldGlxdWV0YXNcbiAgICAgICAgICAgICAgICBwb3J0w6F0aWxlcyB5IGxlY3RvcmVzIGRlIGPDs2RpZ29zLlxuICAgICAgICAgICAgICA8L0JlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgPEJlbmVmaWNpb3NMaXN0YT5cbiAgICAgICAgICAgICAgICBQcm90ZWNjacOzbiBpbmRpc3BlbnNhYmxlIHF1ZSBheXVkYXLDoSBhIHN1cyBlcXVpcG9zIGEgc29wb3J0YXJcbiAgICAgICAgICAgICAgICBjYcOtZGFzIG8gZGHDsW9zIGFjY2lkZW50YWxlcy5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgRnVuZGFzIGZhYnJpY2FkYXMgY29uIGxvcyBtZWpvcmVzIG1hdGVyaWFsZXMsIGRpc2XDsWFkYXMgYSBsYXNcbiAgICAgICAgICAgICAgICBtZWRpZGFzLCBjYXJhY3RlcsOtc3RpY2FzLCBlc3BlY2lmaWNhY2lvbmVzIGRlIGNhZGEgbWFyY2EgeVxuICAgICAgICAgICAgICAgIG1vZGVsby5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgIDxCZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICAgICAgQWRxdWllcmEgbGEgc2VndXJpZGFkIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4gYSBwcmVjaW9zXG4gICAgICAgICAgICAgICAgYWNjZXNpYmxlcy5cbiAgICAgICAgICAgICAgPC9CZW5lZmljaW9zTGlzdGE+XG4gICAgICAgICAgICA8L0JlbmVmaWNpb3M+XG4gICAgICAgICAgPC9EaXZUZXh0bz5cbiAgICAgICAgPC9Db250ZW5lZG9yPlxuICAgICAgICA8Q29udGVuZWRvckljb25vPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXNwaVwiPlxuICAgICAgICAgICAgPEljb25vXG4gICAgICAgICAgICAgIHNyYz1cIi9pbWcvRW52aW8gZ3JhdGlzLndlYnBcIlxuICAgICAgICAgICAgICBhbHQ9XCJJY29ubyBGdW5kYXMgRW52aW8gR3JhdGlzXCJcbiAgICAgICAgICAgICAgb25DbGljaz17YWJyaXJNb2RhbH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8VGV4dERpdj5cbiAgICAgICAgICAgICAgPFRleHQ+XG4gICAgICAgICAgICAgICAgRW52w61vIGdyYXRpc1xuICAgICAgICAgICAgICAgIDxiciAvPiBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYS5cbiAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9UZXh0RGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXNwaVwiPlxuICAgICAgICAgICAgPEljb25vXG4gICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjI0NTgvTnVldm9zJTIwSWNvbm9zL01lam9yZXNfcHJlY2lvc19hY29yZGVzX2Ffc3VfZWNvbm9tJUMzJUFEYV94NXg2emwucG5nXCJcbiAgICAgICAgICAgICAgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zIEZ1bmRhc1wiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2FicmlyTW9kYWxEfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxUZXh0RGl2PlxuICAgICAgICAgICAgICA8VGV4dD5Mb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLjwvVGV4dD5cbiAgICAgICAgICAgIDwvVGV4dERpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9Db250ZW5lZG9ySWNvbm8+XG4gICAgICAgIHsvKiAgIDxDb250ZW5lZG9ySWNvbm9EPlxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgPEljb25vIHNyYz1cImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RpaGF3cXJudC9pbWFnZS91cGxvYWQvdjE2MjU3NjI0NTgvTnVldm9zJTIwSWNvbm9zL01lam9yZXNfcHJlY2lvc19hY29yZGVzX2Ffc3VfZWNvbm9tJUMzJUFEYV94NXg2emwucG5nXCIgYWx0PVwiSWNvbm8gTWVqb3JlcyBQcmVjaW9zIEZ1bmRhc1wiIG9uQ2xpY2s9e2FicmlyTW9kYWxUfS8+XG4gICAgICAgICAgPFRleHREaXY+XG4gICAgICAgICAgICAgIDxUZXh0PlxuICAgICAgICAgICAgICBMb3MgbWVqb3JlcyBwcmVjaW9zIGRlbCBtZXJjYWRvLlxuICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8L1RleHREaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgIDwvQ29udGVuZWRvckljb25vRD4gICAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZSXCI+XG4gICAgICAgICAgPENvbnRlbmVkb3JEPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVudGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj7CoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZW50YSE8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9PdmFUZXg+XG4gICAgICAgICAgICAgIDwvT3ZhVGV4RGl2PlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi8jcmVwYXJhY2lvblwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUNvbm96Y2EgbnVlc3RybyBzZXJ2aWNpbyBkZSBSZXBhcmFjacOzbiFcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiLyN2ZW50YVwiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPsKhQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIFZlbnRhITwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWFjY2Vzb3Jpb3MteS1jb25zdW1pYmxlc1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgICDCoUFkcXVpZXJhIGxvcyBhY2Nlc29yaW9zIHkgY29uc3VtaWJsZXMgcXVlIG5lY2VzaXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvRFNELXZlbnRhLWVuLXJ1dGFcIj5cbiAgICAgICAgICAgICAgPE92YVRleERpdiBjbGFzc05hbWU9XCJiXCI+XG4gICAgICAgICAgICAgICAgPE92YVRleD5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5cIj5cbiAgICAgICAgICAgICAgICAgICAgwqFDb25vemNhIG51ZXN0cmEgc29sdWNpw7NuIFwiRFNEXCIgcGFyYSB2ZW50YSBlbiBydXRhIVxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvT3ZhVGV4PlxuICAgICAgICAgICAgICA8L092YVRleERpdj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvaW1wcmVzaW9uLWNyZWRlbmNpYWxlcy10YXJqZXRhcy1nYWZldGVzLXB2Y1wiPlxuICAgICAgICAgICAgICA8T3ZhVGV4RGl2IGNsYXNzTmFtZT1cImJcIj5cbiAgICAgICAgICAgICAgICA8T3ZhVGV4PlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiblwiPlxuICAgICAgICAgICAgICAgICAgQ29ub3pjYSBudWVzdHJvIHNlcnZpY2lvIGRlIGltcHJlc2lvbiBkZSBjcmVkZW5jaWFsZXNcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L092YVRleD5cbiAgICAgICAgICAgICAgPC9PdmFUZXhEaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9Db250ZW5lZG9yRD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPE1vZGFsXG4gICAgICAgIHNob3c9e2FiaWVydG9Nb2RhbH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbH1cbiAgICAgICAga2V5Ym9hcmQ9e2ZhbHNlfVxuICAgICAgICBzaXplPVwibGdcIlxuICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxuICAgICAgPlxuICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxuICAgICAgICAgIDxNb2RhbC5UaXRsZT5FbnbDrW8gZ3JhdGlzIGEgdG9kYSBsYSBSZXDDumJsaWNhIE1leGljYW5hLjwvTW9kYWwuVGl0bGU+XG4gICAgICAgIDwvTW9kYWwuSGVhZGVyPlxuICAgICAgICA8TW9kYWwuQm9keT5cbiAgICAgICAgICBDb250YW1vcyBjb24gZW52w61vIGdyYXRpcyBhIHRvZGEgbGEgUmVww7pibGljYSBNZXhpY2FuYSwgbm9zb3Ryb3MgbGVcbiAgICAgICAgICBtYW5kYW1vcyBzaW4gY2FyZ28gYWRpY2lvbmFsLCBsYXMgZnVuZGFzIHF1ZSBuZWNlc2l0ZSwgaGVjaGFzIGEgbGFcbiAgICAgICAgICBtZWRpZGEsIGFkZWN1YWRhcyBwYXJhIGNhZGEgbWFyY2EgeSBtb2RlbG8gZGVsIG1lcmNhZG8uXG4gICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsfT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgICA8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsRH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbER9XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcbiAgICAgID5cbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby48L01vZGFsLlRpdGxlPlxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cbiAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgRW4gSGFuZCBIZWxkIFNvbHV0aW9ucywgbm9zIGNvbXByb21ldGVtb3MgYSBicmluZGFybGUgbG9zIG1lam9yZXNcbiAgICAgICAgICBwcmVjaW9zLCBwYXJhIG5vc290cm9zIGVzIGltcG9ydGFudGUgcXVlIGN1ZW50ZSBjb24gZnVuZGFzIHF1ZSBjdWJyYW5cbiAgICAgICAgICBzdXMgbmVjZXNpZGFkZXMgeSBwcm90ZWphbiBzdXMgZXF1aXBvcyBhIHByZWNpb3MgYWNjZXNpYmxlcy5cbiAgICAgICAgPC9Nb2RhbC5Cb2R5PlxuICAgICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImxpZ2h0XCIgb25DbGljaz17Y2VycmFyTW9kYWxEfT5cbiAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgIDwvTW9kYWw+XG4gICAgICA8TW9kYWxcbiAgICAgICAgc2hvdz17YWJpZXJ0b01vZGFsVH1cbiAgICAgICAgb25IaWRlPXtjZXJyYXJNb2RhbFR9XG4gICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtYWx0dXJhXCJcbiAgICAgID5cbiAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICA8TW9kYWwuVGl0bGU+TG9zIG1lam9yZXMgcHJlY2lvcyBkZWwgbWVyY2Fkby48L01vZGFsLlRpdGxlPlxuICAgICAgICA8L01vZGFsLkhlYWRlcj5cbiAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgRmFicmljYW1vcyBsYXMgbWVqb3JlcyBmdW5kYXMgZGVsIG1lcmNhZG8sIGRpc2XDsWFkYXMgcGFyYSBjdWJyaXIgc3VzXG4gICAgICAgICAgbmVjZXNpZGFkZXMuIEFkcXVpZXJhIGxhIHByb3RlY2Npw7NuIHF1ZSBzdXMgZXF1aXBvcyBuZWNlc2l0YW4uIERpc2XDsW9zXG4gICAgICAgICAgZGUgbGEgbWVqb3IgY2FsaWRhZCwgaGVjaG9zIGNvbiBtYXRlcmlhbGVzIGRlIHByaW1lcmEuIEZ1bmRhc1xuICAgICAgICAgIGZhYnJpY2FkYXMgYSBsYXMgbWVkaWRhcyBkZSBkaWZlcmVudGVzIG1hcmNhcyB5IG1vZGVsb3MsIHByb3RlY2Npw7NuXG4gICAgICAgICAgaW5kaXNwZW5zYWJsZSBxdWUgYXl1ZGFyw6EgYSBzdXMgZXF1aXBvcyBhIHNvcG9ydGFyIGNhw61kYXMgbyBkYcOxb3NcbiAgICAgICAgICBhY2NpZGVudGFsZXMuXG4gICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgPE1vZGFsLkZvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsVH0+XG4gICAgICAgICAgICBDZXJyYXJcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICA8L01vZGFsPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGV4dG9GdW5kYXM7XG4iXX0= */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var ContenedorIcono = _styled(\"div\", false ? {\n    target: \"epnm5sf1\"\n  } : {\n    target: \"epnm5sf1\",\n    label: \"ContenedorIcono\"\n  })(false ? {\n    name: \"102cpzc\",\n    styles: \"text-align:center;padding-top:3rem;display:flex;justify-content:space-around;@media (min-width: 1101px){padding-left:3.5rem;}@media (max-width: 1100px){display:grid;}@media (max-width: 995px){padding-left:0rem;display:flex;}@media (max-width: 450px){display:grid;}\"\n  } : {\n    name: \"102cpzc\",\n    styles: \"text-align:center;padding-top:3rem;display:flex;justify-content:space-around;@media (min-width: 1101px){padding-left:3.5rem;}@media (max-width: 1100px){display:grid;}@media (max-width: 995px){padding-left:0rem;display:flex;}@media (max-width: 450px){display:grid;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  var Icono = _styled(\"img\", false ? {\n    target: \"epnm5sf0\"\n  } : {\n    target: \"epnm5sf0\",\n    label: \"Icono\"\n  })(false ? {\n    name: \"zj60q6\",\n    styles: \"cursor:pointer;@media (max-width: 1440px){width:12rem;}@media (max-width: 1100px){width:9rem;}@media (max-width: 995px){width:12rem;}@media (max-width: 708px){width:9rem;}@media (max-width: 538px){width:8rem;}\"\n  } : {\n    name: \"zj60q6\",\n    styles: \"cursor:pointer;@media (max-width: 1440px){width:12rem;}@media (max-width: 1100px){width:9rem;}@media (max-width: 995px){width:12rem;}@media (max-width: 708px){width:9rem;}@media (max-width: 538px){width:8rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n  /*const ContenedorIconoD = styled.div`\n    text-align: center;\n    margin-bottom: 3rem;\n     @media(min-width: 1101px) {\n      padding-left: 3.5rem;\n    }\n     @media(max-width: 995px) {\n     padding-left: 0rem;\n    }\n  `;\n  */\n\n\n  var _useState = useState(false),\n      abiertoModal = _useState[0],\n      cambiarAbiertoModal = _useState[1];\n\n  var _useState2 = useState(false),\n      abiertoModalD = _useState2[0],\n      cambiarAbiertoModalD = _useState2[1];\n\n  var _useState3 = useState(false),\n      abiertoModalT = _useState3[0],\n      cambiarAbiertoModalT = _useState3[1];\n\n  var abrirModal = function abrirModal() {\n    cambiarAbiertoModal(true);\n  };\n\n  var cerrarModal = function cerrarModal() {\n    cambiarAbiertoModal(false);\n  };\n\n  var abrirModalD = function abrirModalD() {\n    cambiarAbiertoModalD(true);\n  };\n\n  var cerrarModalD = function cerrarModalD() {\n    cambiarAbiertoModalD(false);\n  };\n\n  var abrirModalT = function abrirModalT() {\n    cambiarAbiertoModalT(true);\n  };\n\n  var cerrarModalT = function cerrarModalT() {\n    cambiarAbiertoModalT(false);\n  };\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"div\", {\n    className: \"otro\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Contenedor, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(DivTexto, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(TituloBeneficios, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, \"Beneficios fundas HHS: \", ___EmotionJSX(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 38\n    }\n  })), ___EmotionJSX(Beneficios, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(BeneficiosLista, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, \"Fabricamos las mejores fundas del mercado, dise\\xF1adas para cubrir sus necesidades.\"), ___EmotionJSX(BeneficiosLista, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, \"Fundas ideales para handhelds, impresoras de etiquetas port\\xE1tiles y lectores de c\\xF3digos.\"), ___EmotionJSX(BeneficiosLista, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, \"Protecci\\xF3n indispensable que ayudar\\xE1 a sus equipos a soportar ca\\xEDdas o da\\xF1os accidentales.\"), ___EmotionJSX(BeneficiosLista, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, \"Fundas fabricadas con los mejores materiales, dise\\xF1adas a las medidas, caracter\\xEDsticas, especificaciones de cada marca y modelo.\"), ___EmotionJSX(BeneficiosLista, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, \"Adquiera la seguridad que sus equipos necesitan a precios accesibles.\")))), ___EmotionJSX(ContenedorIcono, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"espi\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono, {\n    src: \"/img/Envio gratis.webp\",\n    alt: \"Icono Fundas Envio Gratis\",\n    onClick: abrirModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"Env\\xEDo gratis\", ___EmotionJSX(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }), \" a toda la Rep\\xFAblica Mexicana.\"))), ___EmotionJSX(\"div\", {\n    className: \"espi\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Mejores_precios_acordes_a_su_econom%C3%ADa_x5x6zl.png\",\n    alt: \"Icono Mejores Precios Fundas\",\n    onClick: abrirModalD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, \"Los mejores precios del mercado.\")))), ___EmotionJSX(\"div\", {\n    className: \"DivR\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(ContenedorD, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/#renta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }, \"\\xA1Conozca nuestro servicio de Renta!\")))), ___EmotionJSX(Link, {\n    href: \"/#reparacion\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, \"\\xA1Conozca nuestro servicio de Reparaci\\xF3n!\")))), ___EmotionJSX(Link, {\n    href: \"/#venta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 19\n    }\n  }, \"\\xA1Conozca nuestro servicio de Venta!\")))), ___EmotionJSX(Link, {\n    href: \"/venta-de-accesorios-y-consumibles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, \"\\xA1Adquiera los accesorios y consumibles que necesita!\")))), ___EmotionJSX(Link, {\n    href: \"/DSD-venta-en-ruta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 19\n    }\n  }, \"\\xA1Conozca nuestra soluci\\xF3n \\\"DSD\\\" para venta en ruta!\")))), ___EmotionJSX(Link, {\n    href: \"/impresion-credenciales-tarjetas-gafetes-pvc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 19\n    }\n  }, \"Conozca nuestro servicio de impresion de credenciales\"))))))), ___EmotionJSX(Modal, {\n    show: abiertoModal,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  }, \"Env\\xEDo gratis a toda la Rep\\xFAblica Mexicana.\")), ___EmotionJSX(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }\n  }, \"Contamos con env\\xEDo gratis a toda la Rep\\xFAblica Mexicana, nosotros le mandamos sin cargo adicional, las fundas que necesite, hechas a la medida, adecuadas para cada marca y modelo del mercado.\"), ___EmotionJSX(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalD,\n    onHide: cerrarModalD,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }, \"Los mejores precios del mercado.\")), ___EmotionJSX(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }\n  }, \"En Hand Held Solutions, nos comprometemos a brindarle los mejores precios, para nosotros es importante que cuente con fundas que cubran sus necesidades y protejan sus equipos a precios accesibles.\"), ___EmotionJSX(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalT,\n    onHide: cerrarModalT,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }\n  }, \"Los mejores precios del mercado.\")), ___EmotionJSX(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }\n  }, \"Fabricamos las mejores fundas del mercado, dise\\xF1adas para cubrir sus necesidades. Adquiera la protecci\\xF3n que sus equipos necesitan. Dise\\xF1os de la mejor calidad, hechos con materiales de primera. Fundas fabricadas a las medidas de diferentes marcas y modelos, protecci\\xF3n indispensable que ayudar\\xE1 a sus equipos a soportar ca\\xEDdas o da\\xF1os accidentales.\"), ___EmotionJSX(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))));\n};\n\n_s(TextoFundas, \"jjwjiTq4XLc3ygftO/14X2oZ+lA=\");\n\n_c = TextoFundas;\nexport default TextoFundas;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextoFundas\");","map":{"version":3,"sources":["C:/Users/jhino/OneDrive/Escritorio/Código actual página web/components/pestanas/TextoFundas.js"],"names":["React","useState","Link","Modal","Button","TextoFundas","Contenedor","ContenedorD","OvaTexDiv","OvaTex","TextDiv","Text","DivIMG","IMG","DivTexto","TextoIMG","TituloBeneficios","Beneficios","BeneficiosLista","ContenedorIcono","Icono","abiertoModal","cambiarAbiertoModal","abiertoModalD","cambiarAbiertoModalD","abiertoModalT","cambiarAbiertoModalT","abrirModal","cerrarModal","abrirModalD","cerrarModalD","abrirModalT","cerrarModalT"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Link from \"next/link\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst TextoFundas = () => {\n  const Contenedor = styled.div`\n    width: 100%;\n    text-align: center;\n\n    @media (max-width: 456px) {\n      margin-top: 5rem;\n    }\n\n    @media (max-width: 410px) {\n      margin-top: -2rem;\n    }\n  `;\n\n  const ContenedorD = styled.div`\n    width: 100%;\n    margin-top: 4rem;\n\n    @media (max-width: 995px) {\n      display: none;\n    }\n  `;\n\n  const OvaTexDiv = styled.div`\n    width: 78%;\n    height: 4.5rem;\n    background-color: #0076c0;\n    border-radius: 4rem;\n    text-align: center;\n    margin: auto;\n    cursor: pointer;\n\n    @media (max-width: 899px) {\n      display: none;\n    }\n  `;\n\n  const OvaTex = styled.p`\n    font-size: 20px;\n    padding-top: 20px;\n    padding-bottom: 10px;\n    color: white;\n\n    @media (max-width: 1500px) {\n      font-size: 19px;\n    }\n\n    @media (max-width: 1355px) {\n      font-size: 17px;\n    }\n\n    @media (max-width: 1250px) {\n      font-size: 15px;\n    }\n  `;\n\n  const TextDiv = styled.div`\n    width: 80%;\n    margin: 0px auto;\n\n    @media (max-width: 1400px) {\n      width: 100%;\n    }\n  `;\n\n  const Text = styled.p`\n    font-size: 19px;\n    font-weight: bold;\n\n    @media (max-width: 1100px) {\n      font-size: 16px;\n    }\n\n    @media (max-width: 899px) {\n      font-size: 14px;\n    }\n\n    @media (max-width: 699px) {\n      font-size: 12px;\n    }\n\n    @media (max-width: 450px) {\n      font-size: 10px;\n    }\n  `;\n\n  const DivIMG = styled.div`\n    width: 100%;\n    margin-top: 0rem;\n  `;\n\n  const IMG = styled.img`\n    width: 80%;\n    height: 100%;\n\n    @media (max-width: 850px) {\n      width: 68%;\n    }\n\n    @media (max-width: 500px) {\n      width: 80%;\n    }\n\n    @media (max-width: 500px) {\n      width: 89%;\n    }\n  `;\n\n  const DivTexto = styled.div`\n    width: 100%;\n    margin-top: 4rem;\n  `;\n\n  const TextoIMG = styled.p`\n    font-size: 35px;\n    font-weight: bold;\n    padding: 25px;\n    text-align: justify;\n\n    @media (max-width: 1750px) {\n      font-size: 30px;\n    }\n\n    @media (max-width: 1550px) {\n      padding-top: 4rem;\n      font-size: 25px;\n    }\n  `;\n\n  const TituloBeneficios = styled.p`\n    font-size: 35px;\n    font-weight: bold;\n    text-align: left;\n    padding: 25px;\n\n    @media (max-width: 1750px) {\n      font-size: 30px;\n    }\n\n    @media (max-width: 1550px) {\n      padding-top: 4rem;\n      font-size: 25px;\n    }\n  `;\n\n  const Beneficios = styled.ul`\n    font-size: 30px;\n    text-align: left;\n    margin-left: 25px;\n\n    @media (max-width: 1750px) {\n      font-size: 20px;\n    }\n  `;\n\n  const BeneficiosLista = styled.li`\n    list-style: outside;\n  `;\n\n  const ContenedorIcono = styled.div`\n    text-align: center;\n    padding-top: 3rem;\n    display: flex;\n    justify-content: space-around;\n\n    @media (min-width: 1101px) {\n      padding-left: 3.5rem;\n    }\n\n    @media (max-width: 1100px) {\n      display: grid;\n    }\n\n    @media (max-width: 995px) {\n      padding-left: 0rem;\n      display: flex;\n    }\n\n    @media (max-width: 450px) {\n      display: grid;\n    }\n  `;\n\n  const Icono = styled.img`\n    cursor: pointer;\n\n    @media (max-width: 1440px) {\n      width: 12rem;\n    }\n\n    @media (max-width: 1100px) {\n      width: 9rem;\n    }\n\n    @media (max-width: 995px) {\n      width: 12rem;\n    }\n\n    @media (max-width: 708px) {\n      width: 9rem;\n    }\n\n    @media (max-width: 538px) {\n      width: 8rem;\n    }\n  `;\n\n  /*const ContenedorIconoD = styled.div`\n    text-align: center;\n    margin-bottom: 3rem;\n\n    @media(min-width: 1101px) {\n      padding-left: 3.5rem;\n    }\n\n    @media(max-width: 995px) {\n     padding-left: 0rem;\n    }\n  `;\n*/\n  const [abiertoModal, cambiarAbiertoModal] = useState(false);\n  const [abiertoModalD, cambiarAbiertoModalD] = useState(false);\n  const [abiertoModalT, cambiarAbiertoModalT] = useState(false);\n\n  const abrirModal = () => {\n    cambiarAbiertoModal(true);\n  };\n\n  const cerrarModal = () => {\n    cambiarAbiertoModal(false);\n  };\n\n  const abrirModalD = () => {\n    cambiarAbiertoModalD(true);\n  };\n\n  const cerrarModalD = () => {\n    cambiarAbiertoModalD(false);\n  };\n\n  const abrirModalT = () => {\n    cambiarAbiertoModalT(true);\n  };\n\n  const cerrarModalT = () => {\n    cambiarAbiertoModalT(false);\n  };\n\n  return (\n    <>\n      <div className=\"otro\">\n        <Contenedor>\n          <DivTexto>\n            <TituloBeneficios>\n              Beneficios fundas HHS: <br />\n            </TituloBeneficios>\n            <Beneficios>\n              <BeneficiosLista>\n                Fabricamos las mejores fundas del mercado, diseñadas para cubrir\n                sus necesidades.\n              </BeneficiosLista>\n              <BeneficiosLista>\n                Fundas ideales para handhelds, impresoras de etiquetas\n                portátiles y lectores de códigos.\n              </BeneficiosLista>\n              <BeneficiosLista>\n                Protección indispensable que ayudará a sus equipos a soportar\n                caídas o daños accidentales.\n              </BeneficiosLista>\n              <BeneficiosLista>\n                Fundas fabricadas con los mejores materiales, diseñadas a las\n                medidas, características, especificaciones de cada marca y\n                modelo.\n              </BeneficiosLista>\n              <BeneficiosLista>\n                Adquiera la seguridad que sus equipos necesitan a precios\n                accesibles.\n              </BeneficiosLista>\n            </Beneficios>\n          </DivTexto>\n        </Contenedor>\n        <ContenedorIcono>\n          <div className=\"espi\">\n            <Icono\n              src=\"/img/Envio gratis.webp\"\n              alt=\"Icono Fundas Envio Gratis\"\n              onClick={abrirModal}\n            />\n            <TextDiv>\n              <Text>\n                Envío gratis\n                <br /> a toda la República Mexicana.\n              </Text>\n            </TextDiv>\n          </div>\n          <div className=\"espi\">\n            <Icono\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Mejores_precios_acordes_a_su_econom%C3%ADa_x5x6zl.png\"\n              alt=\"Icono Mejores Precios Fundas\"\n              onClick={abrirModalD}\n            />\n            <TextDiv>\n              <Text>Los mejores precios del mercado.</Text>\n            </TextDiv>\n          </div>\n        </ContenedorIcono>\n        {/*   <ContenedorIconoD>\n          <div>\n          <Icono src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Mejores_precios_acordes_a_su_econom%C3%ADa_x5x6zl.png\" alt=\"Icono Mejores Precios Fundas\" onClick={abrirModalT}/>\n          <TextDiv>\n              <Text>\n              Los mejores precios del mercado.\n              </Text>\n            </TextDiv>\n          </div>\n     </ContenedorIconoD>   */}\n        <div className=\"DivR\">\n          <ContenedorD>\n            <Link href=\"/#renta\">\n              <OvaTexDiv className=\"b\">\n                <OvaTex>\n                  <span className=\"n\">¡Conozca nuestro servicio de Renta!</span>\n                </OvaTex>\n              </OvaTexDiv>\n            </Link>\n            <Link href=\"/#reparacion\">\n              <OvaTexDiv className=\"b\">\n                <OvaTex>\n                  <span className=\"n\">\n                    ¡Conozca nuestro servicio de Reparación!\n                  </span>\n                </OvaTex>\n              </OvaTexDiv>\n            </Link>\n            <Link href=\"/#venta\">\n              <OvaTexDiv className=\"b\">\n                <OvaTex>\n                  <span className=\"n\">¡Conozca nuestro servicio de Venta!</span>\n                </OvaTex>\n              </OvaTexDiv>\n            </Link>\n            <Link href=\"/venta-de-accesorios-y-consumibles\">\n              <OvaTexDiv className=\"b\">\n                <OvaTex>\n                  <span className=\"n\">\n                    ¡Adquiera los accesorios y consumibles que necesita!\n                  </span>\n                </OvaTex>\n              </OvaTexDiv>\n            </Link>\n            <Link href=\"/DSD-venta-en-ruta\">\n              <OvaTexDiv className=\"b\">\n                <OvaTex>\n                  <span className=\"n\">\n                    ¡Conozca nuestra solución \"DSD\" para venta en ruta!\n                  </span>\n                </OvaTex>\n              </OvaTexDiv>\n            </Link>\n            <Link href=\"/impresion-credenciales-tarjetas-gafetes-pvc\">\n              <OvaTexDiv className=\"b\">\n                <OvaTex>\n                  <span className=\"n\">\n                  Conozca nuestro servicio de impresion de credenciales\n                  </span>\n                </OvaTex>\n              </OvaTexDiv>\n            </Link>\n          </ContenedorD>\n        </div>\n      </div>\n\n      <Modal\n        show={abiertoModal}\n        onHide={cerrarModal}\n        keyboard={false}\n        size=\"lg\"\n        className=\"modal-altura\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Envío gratis a toda la República Mexicana.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Contamos con envío gratis a toda la República Mexicana, nosotros le\n          mandamos sin cargo adicional, las fundas que necesite, hechas a la\n          medida, adecuadas para cada marca y modelo del mercado.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"light\" onClick={cerrarModal}>\n            Cerrar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        show={abiertoModalD}\n        onHide={cerrarModalD}\n        keyboard={false}\n        size=\"lg\"\n        className=\"modal-altura\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Los mejores precios del mercado.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          En Hand Held Solutions, nos comprometemos a brindarle los mejores\n          precios, para nosotros es importante que cuente con fundas que cubran\n          sus necesidades y protejan sus equipos a precios accesibles.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"light\" onClick={cerrarModalD}>\n            Cerrar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        show={abiertoModalT}\n        onHide={cerrarModalT}\n        keyboard={false}\n        size=\"lg\"\n        className=\"modal-altura\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Los mejores precios del mercado.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Fabricamos las mejores fundas del mercado, diseñadas para cubrir sus\n          necesidades. Adquiera la protección que sus equipos necesitan. Diseños\n          de la mejor calidad, hechos con materiales de primera. Fundas\n          fabricadas a las medidas de diferentes marcas y modelos, protección\n          indispensable que ayudará a sus equipos a soportar caídas o daños\n          accidentales.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"light\" onClick={cerrarModalT}>\n            Cerrar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default TextoFundas;\n"]},"metadata":{},"sourceType":"module"}