{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\nvar _jsxFileName = \"C:\\\\Users\\\\Crist\\\\Desktop\\\\HHS-20211123T184355Z-001\\\\HHS\\\\components\\\\pestanas\\\\IconosRentaGeneral.js\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst IconosRentaGeneral = ({\n  unom,\n  dosm,\n  tresm,\n  cuatrom,\n  cincom,\n  seism,\n  sietem,\n  ochom,\n  nuevem,\n  diezm,\n  oncem,\n  docem,\n  trecem,\n  catorcem,\n  quincem,\n  diezseism,\n  diezsietem,\n  luno,\n  ldos,\n  ltres,\n  lcuatro,\n  lcinco,\n  ecem\n}) => {\n  const Contenedor = _styled(\"div\", false ? {\n    target: \"eev979b9\"\n  } : {\n    target: \"eev979b9\",\n    label: \"Contenedor\"\n  })(false ? {\n    name: \"1ut8sl\",\n    styles: \"width:100%;display:grid;grid-template-columns:50% 50%;@media (max-width: 1700px){margin-top:4rem;}@media (max-width: 995px){margin-top:1rem;}\"\n  } : {\n    name: \"1ut8sl\",\n    styles: \"width:100%;display:grid;grid-template-columns:50% 50%;@media (max-width: 1700px){margin-top:4rem;}@media (max-width: 995px){margin-top:1rem;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const ContenedorD = _styled(\"div\", false ? {\n    target: \"eev979b8\"\n  } : {\n    target: \"eev979b8\",\n    label: \"ContenedorD\"\n  })(false ? {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\"\n  } : {\n    name: \"1akbdyk\",\n    styles: \"width:100%;margin-top:4rem;@media (max-width: 995px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IconoDiv = _styled(\"div\", false ? {\n    target: \"eev979b7\"\n  } : {\n    target: \"eev979b7\",\n    label: \"IconoDiv\"\n  })(false ? {\n    name: \"desyct\",\n    styles: \"width:60%;text-align:center;margin:0px auto\"\n  } : {\n    name: \"desyct\",\n    styles: \"width:60%;text-align:center;margin:0px auto\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Icono = _styled(\"img\", false ? {\n    target: \"eev979b6\"\n  } : {\n    target: \"eev979b6\",\n    label: \"Icono\"\n  })(false ? {\n    name: \"17792o1\",\n    styles: \"width:70%;cursor:pointer\"\n  } : {\n    name: \"17792o1\",\n    styles: \"width:70%;cursor:pointer\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const IconoDiv2 = _styled(\"div\", false ? {\n    target: \"eev979b5\"\n  } : {\n    target: \"eev979b5\",\n    label: \"IconoDiv2\"\n  })(false ? {\n    name: \"1svedb\",\n    styles: \"width:47%;text-align:center\"\n  } : {\n    name: \"1svedb\",\n    styles: \"width:47%;text-align:center\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Icono2 = _styled(\"img\", false ? {\n    target: \"eev979b4\"\n  } : {\n    target: \"eev979b4\",\n    label: \"Icono2\"\n  })(false ? {\n    name: \"1q3aild\",\n    styles: \"width:46%!important;cursor:pointer;@media (max-width: 1400px){width:50%!important;}\"\n  } : {\n    name: \"1q3aild\",\n    styles: \"width:46%!important;cursor:pointer;@media (max-width: 1400px){width:50%!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const TextDiv = _styled(\"div\", false ? {\n    target: \"eev979b3\"\n  } : {\n    target: \"eev979b3\",\n    label: \"TextDiv\"\n  })(false ? {\n    name: \"q68gb5\",\n    styles: \"width:80%;margin:0px auto;@media (max-width: 1400px){width:100%;}\"\n  } : {\n    name: \"q68gb5\",\n    styles: \"width:80%;margin:0px auto;@media (max-width: 1400px){width:100%;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Text = _styled(\"p\", false ? {\n    target: \"eev979b2\"\n  } : {\n    target: \"eev979b2\",\n    label: \"Text\"\n  })(false ? {\n    name: \"1i3yt9k\",\n    styles: \"font-size:19px;font-weight:bold;@media (max-width: 899px){font-size:14px;}@media (max-width: 699px){font-size:12px;}@media (max-width: 450px){font-size:10px;}\"\n  } : {\n    name: \"1i3yt9k\",\n    styles: \"font-size:19px;font-weight:bold;@media (max-width: 899px){font-size:14px;}@media (max-width: 699px){font-size:12px;}@media (max-width: 450px){font-size:10px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const OvaTexDiv = _styled(\"div\", false ? {\n    target: \"eev979b1\"\n  } : {\n    target: \"eev979b1\",\n    label: \"OvaTexDiv\"\n  })(false ? {\n    name: \"1xutzvp\",\n    styles: \"width:78%;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\"\n  } : {\n    name: \"1xutzvp\",\n    styles: \"width:78%;background-color:#0076c0;border-radius:4rem;text-align:center;margin:auto;cursor:pointer;@media (max-width: 899px){display:none;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const OvaTex = _styled(\"p\", false ? {\n    target: \"eev979b0\"\n  } : {\n    target: \"eev979b0\",\n    label: \"OvaTex\"\n  })(false ? {\n    name: \"1i04rfa\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\"\n  } : {\n    name: \"1i04rfa\",\n    styles: \"font-size:20px;padding-top:20px;padding-bottom:10px;color:white;@media (max-width: 1500px){font-size:19px;}@media (max-width: 1355px){font-size:17px;}@media (max-width: 1250px){font-size:15px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const {\n    0: abiertoModal,\n    1: cambiarAbiertoModal\n  } = useState(false);\n  const {\n    0: abiertoModalD,\n    1: cambiarAbiertoModalD\n  } = useState(false);\n  const {\n    0: abiertoModalT,\n    1: cambiarAbiertoModalT\n  } = useState(false);\n  const {\n    0: abiertoModalC,\n    1: cambiarAbiertoModalC\n  } = useState(false);\n  const {\n    0: abiertoModalCI,\n    1: cambiarAbiertoModalCI\n  } = useState(false);\n  const {\n    0: abiertoModalS,\n    1: cambiarAbiertoModalS\n  } = useState(false);\n  const {\n    0: abiertoModalSI,\n    1: cambiarAbiertoModalSI\n  } = useState(false);\n\n  const abrirModal = () => {\n    cambiarAbiertoModal(true);\n  };\n\n  const cerrarModal = () => {\n    cambiarAbiertoModal(false);\n  };\n\n  const abrirModalD = () => {\n    cambiarAbiertoModalD(true);\n  };\n\n  const cerrarModalD = () => {\n    cambiarAbiertoModalD(false);\n  };\n\n  const abrirModalT = () => {\n    cambiarAbiertoModalT(true);\n  };\n\n  const cerrarModalT = () => {\n    cambiarAbiertoModalT(false);\n  };\n\n  const abrirModalC = () => {\n    cambiarAbiertoModalC(true);\n  };\n\n  const cerrarModalC = () => {\n    cambiarAbiertoModalC(false);\n  };\n\n  const abrirModalCI = () => {\n    cambiarAbiertoModalCI(true);\n  };\n\n  const cerrarModalCI = () => {\n    cambiarAbiertoModalCI(false);\n  };\n\n  const abrirModalS = () => {\n    cambiarAbiertoModalS(true);\n  };\n\n  const cerrarModalS = () => {\n    cambiarAbiertoModalS(false);\n  };\n\n  const abrirModalSI = () => {\n    cambiarAbiertoModalSI(true);\n  };\n\n  const cerrarModalSI = () => {\n    cambiarAbiertoModalSI(false);\n  };\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"div\", {\n    className: \"otro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Contenedor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(IconoDiv, {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762457/Nuevos%20Iconos/Cr%C3%A9dito_inicial_y_esquemas_de_pago._t3cnaw.png\",\n    alt: \"Cr\\xE9dito inicial y esquemas de pagos\",\n    onClick: abrirModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, unom))), ___EmotionJSX(IconoDiv, {\n    className: \"i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625850760/Nuevos%20Iconos/Equipo_de_respaldo_para_asegurar_los_tiempos_de_reparaci%C3%B3n_btao2g.png\",\n    alt: \"Equipo de respaldo\",\n    onClick: abrirModalD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, dosm))), ___EmotionJSX(IconoDiv, {\n    className: \"icon top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/P%C3%B3liza_de_reparaci%C3%B3n_contra_da%C3%B1os_por_uso_normal_y_accidentes._ojeoqn.png\",\n    alt: \"P\\xF3liza de reparaci\\xF3n Hand Held Impresora de Etiqueta y Lectores de Codigos\",\n    onClick: abrirModalT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, tresm))), ___EmotionJSX(IconoDiv, {\n    className: \"top i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Primero_tendr%C3%A1_el_equipo_operando_en_sus_instalaciones_y_despu%C3%A9s_se_tramitar%C3%A1_el_pago._ge6wrk.png\",\n    alt: \"Equipo operando en sus instalaciones\",\n    onClick: abrirModalC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, cuatrom))), ___EmotionJSX(IconoDiv, {\n    className: \"icon top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Equipo_demo_sin_costo_para_pruebas_en_sus_instalaciones._kxaybw.png\",\n    alt: \"Equipo demo sin costo\",\n    onClick: abrirModalCI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, cincom))), ___EmotionJSX(IconoDiv, {\n    className: \"top i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762457/Nuevos%20Iconos/100_deducible_de_impuestos._dgoe9c.png\",\n    alt: \"100% deducible de impuestos\",\n    onClick: abrirModalS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, seism)))), ___EmotionJSX(\"div\", {\n    className: \"iconodivdos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(IconoDiv2, {\n    className: \"iconul top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Icono2, {\n    src: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1626461689/Nuevos%20Iconos/Copia_de_ICONOS_WEB_2_lwukep.png\",\n    alt: \"Env\\xEDo gratis\",\n    onClick: abrirModalSI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }), ___EmotionJSX(TextDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, sietem)))), ___EmotionJSX(\"div\", {\n    className: \"DivR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(ContenedorD, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Link, {\n    href: luno,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, ochom, ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }), ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, nuevem)))), ___EmotionJSX(Link, {\n    href: ldos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, diezm, ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }), ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }, oncem)))), ___EmotionJSX(Link, {\n    href: ltres,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, docem, ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 19\n    }\n  }), ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, trecem)))), ___EmotionJSX(Link, {\n    href: lcuatro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, catorcem, ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 19\n    }\n  }), ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 19\n    }\n  }, quincem)))), ___EmotionJSX(Link, {\n    href: lcuatro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    className: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, ecem, ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }), ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }\n  }, quincem)))), ___EmotionJSX(Link, {\n    href: lcinco,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(OvaTexDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(OvaTex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, diezseism, ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 19\n    }\n  }), ___EmotionJSX(\"span\", {\n    className: \"n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 19\n    }\n  }, diezsietem))))))), ___EmotionJSX(Modal, {\n    show: abiertoModal,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  }, \"Cr\\xE9dito inicial y esquemas de pagos.\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, \"En Hand Held Solutions le otorgamos facilidades y contamos con diferentes esquemas de financiamiento.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalD,\n    onHide: cerrarModalD,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 11\n    }\n  }, \"Equipo de respaldo para asegurar su operaci\\xF3n.\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }, \"Le otorgamos sin costo equipo de respaldo, en caso de que alguno de los equipos que est\\xE1 rentando o mande a reparaci\\xF3n con nosotros, presente alg\\xFAn problema.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalT,\n    onHide: cerrarModalT,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 11\n    }\n  }, \"P\\xF3liza de reparaci\\xF3n contra accidentes mayores y uso normal.\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }\n  }, \"Nuestras p\\xF3lizas le ofrecen mantenimiento preventivo y reparaci\\xF3n de equipos ante fallas o accidentes mayores y ca\\xEDdas sobre concreto. Cuenta con reparaciones ilimitadas y soporte t\\xE9cnico v\\xEDa telef\\xF3nica para cualquier asistencia en fallas de configuraci\\xF3n.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalC,\n    onHide: cerrarModalC,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 11\n    }\n  }, \"Facilidades para su operaci\\xF3n\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }\n  }, \"Primero nos encargaremos de que usted cuente con los equipos requeridos lo antes posible y despu\\xE9s tramitaremos el pago. En Hand Held Solutions nuestra prioridad siempre ha sido brindar a nuestros clientes la facilidad de realizar sus operaciones con lo \\xFAltimo en tecnolog\\xEDa.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalCI,\n    onHide: cerrarModalCI,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 11\n    }\n  }, \"Equipo demo sin costo, para pruebas en sus instalaciones.\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }\n  }, \"Ponemos a su disposici\\xF3n equipos demo sin costo, que le permitir\\xE1n realizar pruebas en sus instalaciones. Nosotros lo asesoraremos para la elecci\\xF3n del modelo que mejor se adapte a sus necesidades y funcione en su operaci\\xF3n.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalCI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalS,\n    onHide: cerrarModalS,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 11\n    }\n  }, \"100% deducible de impuestos.\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }\n  }, \"Nuestro servicio de renta le permitir\\xE1 contar con los equipos que requiera con una m\\xEDnima inversi\\xF3n.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoModalSI,\n    onHide: cerrarModalSI,\n    keyboard: false,\n    size: \"lg\",\n    w: true,\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 11\n    }\n  }, \"Env\\xEDo gratis a toda la Rep\\xFAblica Mexicana.\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }\n  }, \"Contamos con env\\xEDo gratis a toda la Rep\\xFAblica Mexicana, nosotros le mandamos sin costo alguno, los equipos que vaya a rentar, diagnosticar, reparar o adquirir.\"), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalSI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))));\n};\n\nexport default IconosRentaGeneral;","map":{"version":3,"sources":["C:/Users/Crist/Desktop/HHS-20211123T184355Z-001/HHS/components/pestanas/IconosRentaGeneral.js"],"names":["React","useState","Link","Modal","Button","IconosRentaGeneral","unom","dosm","tresm","cuatrom","cincom","seism","sietem","ochom","nuevem","diezm","oncem","docem","trecem","catorcem","quincem","diezseism","diezsietem","luno","ldos","ltres","lcuatro","lcinco","ecem","Contenedor","ContenedorD","IconoDiv","Icono","IconoDiv2","Icono2","TextDiv","Text","OvaTexDiv","OvaTex","abiertoModal","cambiarAbiertoModal","abiertoModalD","cambiarAbiertoModalD","abiertoModalT","cambiarAbiertoModalT","abiertoModalC","cambiarAbiertoModalC","abiertoModalCI","cambiarAbiertoModalCI","abiertoModalS","cambiarAbiertoModalS","abiertoModalSI","cambiarAbiertoModalSI","abrirModal","cerrarModal","abrirModalD","cerrarModalD","abrirModalT","cerrarModalT","abrirModalC","cerrarModalC","abrirModalCI","cerrarModalCI","abrirModalS","cerrarModalS","abrirModalSI","cerrarModalSI"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Link from \"next/link\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst IconosRentaGeneral = ({\r\n  unom,\r\n  dosm,\r\n  tresm,\r\n  cuatrom,\r\n  cincom,\r\n  seism,\r\n  sietem,\r\n  ochom,\r\n  nuevem,\r\n  diezm,\r\n  oncem,\r\n  docem,\r\n  trecem,\r\n  catorcem,\r\n  quincem,\r\n  diezseism,\r\n  diezsietem,\r\n  luno,\r\n  ldos,\r\n  ltres,\r\n  lcuatro,\r\n  lcinco,\r\n  ecem,\r\n}) => {\r\n  const Contenedor = styled.div`\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 50% 50%;\r\n\r\n    @media (max-width: 1700px) {\r\n      margin-top: 4rem;\r\n    }\r\n\r\n    @media (max-width: 995px) {\r\n      margin-top: 1rem;\r\n    }\r\n  `;\r\n\r\n  const ContenedorD = styled.div`\r\n    width: 100%;\r\n    margin-top: 4rem;\r\n\r\n    @media (max-width: 995px) {\r\n      display: none;\r\n    }\r\n  `;\r\n\r\n  const IconoDiv = styled.div`\r\n    width: 60%;\r\n    text-align: center;\r\n    margin: 0px auto;\r\n  `;\r\n\r\n  const Icono = styled.img`\r\n    width: 70%;\r\n    cursor: pointer;\r\n  `;\r\n\r\n  const IconoDiv2 = styled.div`\r\n    width: 47%;\r\n    text-align: center;\r\n  `;\r\n\r\n  const Icono2 = styled.img`\r\n    width: 46% !important;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 1400px) {\r\n      width: 50% !important;\r\n    }\r\n  `;\r\n\r\n  const TextDiv = styled.div`\r\n    width: 80%;\r\n    margin: 0px auto;\r\n\r\n    @media (max-width: 1400px) {\r\n      width: 100%;\r\n    }\r\n  `;\r\n\r\n  const Text = styled.p`\r\n    font-size: 19px;\r\n    font-weight: bold;\r\n\r\n    @media (max-width: 899px) {\r\n      font-size: 14px;\r\n    }\r\n\r\n    @media (max-width: 699px) {\r\n      font-size: 12px;\r\n    }\r\n\r\n    @media (max-width: 450px) {\r\n      font-size: 10px;\r\n    }\r\n  `;\r\n\r\n  const OvaTexDiv = styled.div`\r\n    width: 78%;\r\n    background-color: #0076c0;\r\n    border-radius: 4rem;\r\n    text-align: center;\r\n    margin: auto;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 899px) {\r\n      display: none;\r\n    }\r\n  `;\r\n\r\n  const OvaTex = styled.p`\r\n    font-size: 20px;\r\n    padding-top: 20px;\r\n    padding-bottom: 10px;\r\n    color: white;\r\n\r\n    @media (max-width: 1500px) {\r\n      font-size: 19px;\r\n    }\r\n\r\n    @media (max-width: 1355px) {\r\n      font-size: 17px;\r\n    }\r\n\r\n    @media (max-width: 1250px) {\r\n      font-size: 15px;\r\n    }\r\n  `;\r\n\r\n  const [abiertoModal, cambiarAbiertoModal] = useState(false);\r\n  const [abiertoModalD, cambiarAbiertoModalD] = useState(false);\r\n  const [abiertoModalT, cambiarAbiertoModalT] = useState(false);\r\n  const [abiertoModalC, cambiarAbiertoModalC] = useState(false);\r\n  const [abiertoModalCI, cambiarAbiertoModalCI] = useState(false);\r\n  const [abiertoModalS, cambiarAbiertoModalS] = useState(false);\r\n  const [abiertoModalSI, cambiarAbiertoModalSI] = useState(false);\r\n\r\n  const abrirModal = () => {\r\n    cambiarAbiertoModal(true);\r\n  };\r\n\r\n  const cerrarModal = () => {\r\n    cambiarAbiertoModal(false);\r\n  };\r\n\r\n  const abrirModalD = () => {\r\n    cambiarAbiertoModalD(true);\r\n  };\r\n\r\n  const cerrarModalD = () => {\r\n    cambiarAbiertoModalD(false);\r\n  };\r\n\r\n  const abrirModalT = () => {\r\n    cambiarAbiertoModalT(true);\r\n  };\r\n\r\n  const cerrarModalT = () => {\r\n    cambiarAbiertoModalT(false);\r\n  };\r\n\r\n  const abrirModalC = () => {\r\n    cambiarAbiertoModalC(true);\r\n  };\r\n\r\n  const cerrarModalC = () => {\r\n    cambiarAbiertoModalC(false);\r\n  };\r\n\r\n  const abrirModalCI = () => {\r\n    cambiarAbiertoModalCI(true);\r\n  };\r\n\r\n  const cerrarModalCI = () => {\r\n    cambiarAbiertoModalCI(false);\r\n  };\r\n\r\n  const abrirModalS = () => {\r\n    cambiarAbiertoModalS(true);\r\n  };\r\n\r\n  const cerrarModalS = () => {\r\n    cambiarAbiertoModalS(false);\r\n  };\r\n\r\n  const abrirModalSI = () => {\r\n    cambiarAbiertoModalSI(true);\r\n  };\r\n\r\n  const cerrarModalSI = () => {\r\n    cambiarAbiertoModalSI(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"otro\">\r\n        <Contenedor>\r\n          <IconoDiv className=\"icon\">\r\n            <Icono\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762457/Nuevos%20Iconos/Cr%C3%A9dito_inicial_y_esquemas_de_pago._t3cnaw.png\"\r\n              alt=\"Crédito inicial y esquemas de pagos\"\r\n              onClick={abrirModal}\r\n            />\r\n            <TextDiv>\r\n              <Text>{unom}</Text>\r\n            </TextDiv>\r\n          </IconoDiv>\r\n          <IconoDiv className=\"i\">\r\n            <Icono\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625850760/Nuevos%20Iconos/Equipo_de_respaldo_para_asegurar_los_tiempos_de_reparaci%C3%B3n_btao2g.png\"\r\n              alt=\"Equipo de respaldo\"\r\n              onClick={abrirModalD}\r\n            />\r\n            <TextDiv>\r\n              <Text>{dosm}</Text>\r\n            </TextDiv>\r\n          </IconoDiv>\r\n          <IconoDiv className=\"icon top\">\r\n            <Icono\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/P%C3%B3liza_de_reparaci%C3%B3n_contra_da%C3%B1os_por_uso_normal_y_accidentes._ojeoqn.png\"\r\n              alt=\"Póliza de reparación Hand Held Impresora de Etiqueta y Lectores de Codigos\"\r\n              onClick={abrirModalT}\r\n            />\r\n            <TextDiv>\r\n              <Text>{tresm}</Text>\r\n            </TextDiv>\r\n          </IconoDiv>\r\n          <IconoDiv className=\"top i\">\r\n            <Icono\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Primero_tendr%C3%A1_el_equipo_operando_en_sus_instalaciones_y_despu%C3%A9s_se_tramitar%C3%A1_el_pago._ge6wrk.png\"\r\n              alt=\"Equipo operando en sus instalaciones\"\r\n              onClick={abrirModalC}\r\n            />\r\n            <TextDiv>\r\n              <Text>{cuatrom}</Text>\r\n            </TextDiv>\r\n          </IconoDiv>\r\n          <IconoDiv className=\"icon top\">\r\n            <Icono\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762458/Nuevos%20Iconos/Equipo_demo_sin_costo_para_pruebas_en_sus_instalaciones._kxaybw.png\"\r\n              alt=\"Equipo demo sin costo\"\r\n              onClick={abrirModalCI}\r\n            />\r\n            <TextDiv>\r\n              <Text>{cincom}</Text>\r\n            </TextDiv>\r\n          </IconoDiv>\r\n          <IconoDiv className=\"top i\">\r\n            <Icono\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1625762457/Nuevos%20Iconos/100_deducible_de_impuestos._dgoe9c.png\"\r\n              alt=\"100% deducible de impuestos\"\r\n              onClick={abrirModalS}\r\n            />\r\n            <TextDiv>\r\n              <Text>{seism}</Text>\r\n            </TextDiv>\r\n          </IconoDiv>\r\n        </Contenedor>\r\n        <div className=\"iconodivdos\">\r\n          <IconoDiv2 className=\"iconul top\">\r\n            <Icono2\r\n              src=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1626461689/Nuevos%20Iconos/Copia_de_ICONOS_WEB_2_lwukep.png\"\r\n              alt=\"Envío gratis\"\r\n              onClick={abrirModalSI}\r\n            />\r\n            <TextDiv>\r\n              <Text>{sietem}</Text>\r\n            </TextDiv>\r\n          </IconoDiv2>\r\n        </div>\r\n        <div className=\"DivR\">\r\n          <ContenedorD>\r\n            <Link href={luno}>\r\n              <OvaTexDiv className=\"b\">\r\n                <OvaTex>\r\n                  {ochom}\r\n                  <br />\r\n                  <span className=\"n\">{nuevem}</span>\r\n                </OvaTex>\r\n              </OvaTexDiv>\r\n            </Link>\r\n            <Link href={ldos}>\r\n              <OvaTexDiv className=\"b\">\r\n                <OvaTex>\r\n                  {diezm}\r\n                  <br />\r\n                  <span className=\"n\">{oncem}</span>\r\n                </OvaTex>\r\n              </OvaTexDiv>\r\n            </Link>\r\n            <Link href={ltres}>\r\n              <OvaTexDiv className=\"b\">\r\n                <OvaTex>\r\n                  {docem}\r\n                  <br />\r\n                  <span className=\"n\">{trecem}</span>\r\n                </OvaTex>\r\n              </OvaTexDiv>\r\n            </Link>\r\n            <Link href={lcuatro}>\r\n              <OvaTexDiv className=\"b\">\r\n                <OvaTex>\r\n                  {catorcem}\r\n                  <br />\r\n                  <span className=\"n\">{quincem}</span>\r\n                </OvaTex>\r\n              </OvaTexDiv>\r\n            </Link>\r\n\r\n            <Link href={lcuatro}>\r\n              <OvaTexDiv className=\"b\">\r\n                <OvaTex>\r\n                  {ecem}\r\n                  <br />\r\n                  <span className=\"n\">{quincem}</span>\r\n                </OvaTex>\r\n              </OvaTexDiv>\r\n            </Link>\r\n\r\n            <Link href={lcinco}>\r\n              <OvaTexDiv>\r\n                <OvaTex>\r\n                  {diezseism}\r\n                  <br />\r\n                  <span className=\"n\">{diezsietem}</span>\r\n                </OvaTex>\r\n              </OvaTexDiv>\r\n            </Link>\r\n          </ContenedorD>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={abiertoModal}\r\n        onHide={cerrarModal}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Crédito inicial y esquemas de pagos.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          En Hand Held Solutions le otorgamos facilidades y contamos con\r\n          diferentes esquemas de financiamiento.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModal}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={abiertoModalD}\r\n        onHide={cerrarModalD}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Equipo de respaldo para asegurar su operación.\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Le otorgamos sin costo equipo de respaldo, en caso de que alguno de\r\n          los equipos que está rentando o mande a reparación con nosotros,\r\n          presente algún problema.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModalD}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={abiertoModalT}\r\n        onHide={cerrarModalT}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Póliza de reparación contra accidentes mayores y uso normal.\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Nuestras pólizas le ofrecen mantenimiento preventivo y reparación de\r\n          equipos ante fallas o accidentes mayores y caídas sobre concreto.\r\n          Cuenta con reparaciones ilimitadas y soporte técnico vía telefónica\r\n          para cualquier asistencia en fallas de configuración.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModalT}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={abiertoModalC}\r\n        onHide={cerrarModalC}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Facilidades para su operación</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Primero nos encargaremos de que usted cuente con los equipos\r\n          requeridos lo antes posible y después tramitaremos el pago. En Hand\r\n          Held Solutions nuestra prioridad siempre ha sido brindar a nuestros\r\n          clientes la facilidad de realizar sus operaciones con lo último en\r\n          tecnología.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModalC}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={abiertoModalCI}\r\n        onHide={cerrarModalCI}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Equipo demo sin costo, para pruebas en sus instalaciones.\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Ponemos a su disposición equipos demo sin costo, que le permitirán\r\n          realizar pruebas en sus instalaciones. Nosotros lo asesoraremos para\r\n          la elección del modelo que mejor se adapte a sus necesidades y\r\n          funcione en su operación.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModalCI}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={abiertoModalS}\r\n        onHide={cerrarModalS}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>100% deducible de impuestos.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Nuestro servicio de renta le permitirá contar con los equipos que\r\n          requiera con una mínima inversión.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModalS}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={abiertoModalSI}\r\n        onHide={cerrarModalSI}\r\n        keyboard={false}\r\n        size=\"lg\"\r\n        w\r\n        className=\"modal-altura\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Envío gratis a toda la República Mexicana.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Contamos con envío gratis a toda la República Mexicana, nosotros le\r\n          mandamos sin costo alguno, los equipos que vaya a rentar,\r\n          diagnosticar, reparar o adquirir.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={cerrarModalSI}>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IconosRentaGeneral;\r\n"]},"metadata":{},"sourceType":"module"}