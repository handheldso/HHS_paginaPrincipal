{"ast":null,"code":"import _styled from \"@emotion/styled/base\";\nvar _jsxFileName = \"C:\\\\Users\\\\Crist\\\\Desktop\\\\HHS-20211123T184355Z-001\\\\HHS\\\\components\\\\layout\\\\Header.js\";\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport Tarjeta from \"../layout/Tarjeta\";\nimport TarjetaDos from \"../layout/TarjetaDos\";\nimport { Modal, Carousel, Button, Navbar, Nav, NavDropdown, Item } from \"react-bootstrap\";\nimport Router from \"next/router\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst Header = () => {\n  const Bienvenido = _styled(\"div\", false ? {\n    target: \"ea6yc6s19\"\n  } : {\n    target: \"ea6yc6s19\",\n    label: \"Bienvenido\"\n  })(false ? {\n    name: \"pq3keu\",\n    styles: \"min-width:100%!important;background-color:#0076c0;display:flex;padding-top:11px\"\n  } : {\n    name: \"pq3keu\",\n    styles: \"min-width:100%!important;background-color:#0076c0;display:flex;padding-top:11px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const TextoBienvenido = _styled(\"h1\", false ? {\n    target: \"ea6yc6s18\"\n  } : {\n    target: \"ea6yc6s18\",\n    label: \"TextoBienvenido\"\n  })(false ? {\n    name: \"jagj6i\",\n    styles: \"color:white;font-size:25px;font-weight:bold;margin-left:25px;margin-top:4px;font-family:\\\"Raleway\\\",sans-serif;@media (max-width: 1950px){font-size:19px;}@media (max-width: 881px){margin-top:0px;}\"\n  } : {\n    name: \"jagj6i\",\n    styles: \"color:white;font-size:25px;font-weight:bold;margin-left:25px;margin-top:4px;font-family:\\\"Raleway\\\",sans-serif;@media (max-width: 1950px){font-size:19px;}@media (max-width: 881px){margin-top:0px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const SocialMedia = _styled(\"div\", false ? {\n    target: \"ea6yc6s17\"\n  } : {\n    target: \"ea6yc6s17\",\n    label: \"SocialMedia\"\n  })(false ? {\n    name: \"x2u97t\",\n    styles: \"height:100%;display:flex;margin-bottom:10px;@media (max-width: 481px){margin-bottom:0px;}@media (max-width: 428px){margin-bottom:8px;}\"\n  } : {\n    name: \"x2u97t\",\n    styles: \"height:100%;display:flex;margin-bottom:10px;@media (max-width: 481px){margin-bottom:0px;}@media (max-width: 428px){margin-bottom:8px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const LogoRedes = _styled(\"img\", false ? {\n    target: \"ea6yc6s16\"\n  } : {\n    target: \"ea6yc6s16\",\n    label: \"LogoRedes\"\n  })(false ? {\n    name: \"s3yf4g\",\n    styles: \"width:40px;height:40px;margin-right:25px;@media (max-width: 1950px){width:25px;height:25px;}\"\n  } : {\n    name: \"s3yf4g\",\n    styles: \"width:40px;height:40px;margin-right:25px;@media (max-width: 1950px){width:25px;height:25px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const LogoRedesYT = _styled(\"img\", false ? {\n    target: \"ea6yc6s15\"\n  } : {\n    target: \"ea6yc6s15\",\n    label: \"LogoRedesYT\"\n  })(false ? {\n    name: \"q8yu1w\",\n    styles: \"width:50px;height:40px;margin-right:25px;@media (max-width: 1950px){width:30px;height:25px;}\"\n  } : {\n    name: \"q8yu1w\",\n    styles: \"width:50px;height:40px;margin-right:25px;@media (max-width: 1950px){width:30px;height:25px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const HeaderContacto = _styled(\"div\", false ? {\n    target: \"ea6yc6s14\"\n  } : {\n    target: \"ea6yc6s14\",\n    label: \"HeaderContacto\"\n  })(false ? {\n    name: \"raobkm\",\n    styles: \"background-color:white;min-width:100%!important\"\n  } : {\n    name: \"raobkm\",\n    styles: \"background-color:white;min-width:100%!important\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Logo = _styled(\"img\", false ? {\n    target: \"ea6yc6s13\"\n  } : {\n    target: \"ea6yc6s13\",\n    label: \"Logo\"\n  })(false ? {\n    name: \"16m6osq\",\n    styles: \"height:93px;@media (max-width: 1950px){height:96px;}@media (max-width: 450px){height:80px;}@media (max-width: 350px){height:65px;}\"\n  } : {\n    name: \"16m6osq\",\n    styles: \"height:93px;@media (max-width: 1950px){height:96px;}@media (max-width: 450px){height:80px;}@media (max-width: 350px){height:65px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Llamanos = _styled(\"p\", false ? {\n    target: \"ea6yc6s12\"\n  } : {\n    target: \"ea6yc6s12\",\n    label: \"Llamanos\"\n  })(false ? {\n    name: \"odja5w\",\n    styles: \"font-size:20px;color:black;font-weight:bold;text-align:center;padding-top:5px;@media (max-width: 1950px){font-size:18px;padding-top:0px;}@media (max-width: 991px){margin-right:11px;margin-left:32px;}@media (max-width: 781px){font-size:18px;margin-right:11px;margin-left:22px;}@media (max-width: 450px){font-size:12px;margin-right:5px;margin-left:19px;}@media (max-width: 300px){margin-right:5px;margin-left:0px;}\"\n  } : {\n    name: \"odja5w\",\n    styles: \"font-size:20px;color:black;font-weight:bold;text-align:center;padding-top:5px;@media (max-width: 1950px){font-size:18px;padding-top:0px;}@media (max-width: 991px){margin-right:11px;margin-left:32px;}@media (max-width: 781px){font-size:18px;margin-right:11px;margin-left:22px;}@media (max-width: 450px){font-size:12px;margin-right:5px;margin-left:19px;}@media (max-width: 300px){margin-right:5px;margin-left:0px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ3Jpc3RcXERlc2t0b3BcXEhIUy0yMDIxMTEyM1QxODQzNTVaLTAwMVxcSEhTXFxjb21wb25lbnRzXFxsYXlvdXRcXEhlYWRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2RjJCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcQ3Jpc3RcXERlc2t0b3BcXEhIUy0yMDIxMTEyM1QxODQzNTVaLTAwMVxcSEhTXFxjb21wb25lbnRzXFxsYXlvdXRcXEhlYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgVGFyamV0YSBmcm9tIFwiLi4vbGF5b3V0L1RhcmpldGFcIjtcbmltcG9ydCBUYXJqZXRhRG9zIGZyb20gXCIuLi9sYXlvdXQvVGFyamV0YURvc1wiO1xuaW1wb3J0IHsgTW9kYWwsIENhcm91c2VsLCBCdXR0b24sIE5hdmJhciwgTmF2LCBOYXZEcm9wZG93biwgSXRlbSB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmltcG9ydCB1c2VXaW5kb3dTaXplIGZyb20gXCIuLi8uLi9ob29rcy91c2VXaW5kb3dTaXplXCI7XG5cbmNvbnN0IEhlYWRlciA9ICgpID0+IHtcbiAgY29uc3QgQmllbnZlbmlkbyA9IHN0eWxlZC5kaXZgXG4gICAgbWluLXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzZjMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmctdG9wOiAxMXB4O1xuICBgO1xuXG4gIGNvbnN0IFRleHRvQmllbnZlbmlkbyA9IHN0eWxlZC5oMWBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAyNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTk1MHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODgxcHgpIHtcbiAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgU29jaWFsTWVkaWEgPSBzdHlsZWQuZGl2YFxuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgxcHgpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDI4cHgpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgTG9nb1JlZGVzID0gc3R5bGVkLmltZ2BcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE5NTBweCkge1xuICAgICAgICB3aWR0aDogMjVweDtcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBMb2dvUmVkZXNZVCA9IHN0eWxlZC5pbWdgXG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIG1hcmdpbi1yaWdodDogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTUwcHgpIHtcbiAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgIGhlaWdodDogMjVweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgSGVhZGVyQ29udGFjdG8gPSBzdHlsZWQuZGl2YFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIG1pbi13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBgO1xuXG4gIGNvbnN0IExvZ28gPSBzdHlsZWQuaW1nYFxuICAgIGhlaWdodDogOTNweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTUwcHgpIHtcbiAgICAgICAgaGVpZ2h0OiA5NnB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNTBweCkge1xuICAgICAgaGVpZ2h0OiA2NXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBMbGFtYW5vcyA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTk1MHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgcGFkZGluZy10b3A6IDBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMTFweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMnB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3ODFweCkge1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMXB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDIycHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxOXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzMDBweCkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMHB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBOdW1lcm8gPSBzdHlsZWQuYWBcbiAgICBtYXJnaW4tdG9wOiAtMTVweDtcbiAgICBcbiAgYDtcblxuICBjb25zdCBOdW1lcm9SZXNwb25zaXZlID0gc3R5bGVkLmFgXG4gICAgbWFyZ2luLXRvcDogMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzgxcHgpIHtcbiAgICAgIHdpZHRoOiA0NCU7XG4gICAgICBmb250LXNpemU6IDEzcHggIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTQwcHgpIHtcbiAgICAgIHdpZHRoOiA0NSU7XG4gICAgICBmb250LXNpemU6IDExcHggIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgICAgIHdpZHRoOiA0NiU7XG4gICAgICBmb250LXNpemU6IDlweCAhaW1wb3J0YW50O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBCb3RvbkNvcnJlbyA9IHN0eWxlZC5hYFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgaGVpZ2h0OiAzOHB4O1xuICAgIHdpZHRoOiA2NCU7XG4gICAgbWFyZ2luOiAwcHggYXV0bztcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTUwcHgpIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IEJvdG9uQ29ycmVvUmVzcG9uc2l2ZSA9IHN0eWxlZC5hYFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgaGVpZ2h0OiAzOHB4O1xuICAgIHdpZHRoOiA2NCU7XG4gICAgbWFyZ2luOiAwcHggYXV0bztcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3ODFweCkge1xuICAgICAgd2lkdGg6IDQzJTtcbiAgICAgIGZvbnQtc2l6ZTogMTNweCAhaW1wb3J0YW50O1xuICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NDBweCkge1xuICAgICAgd2lkdGg6IDM5JTtcbiAgICAgIGZvbnQtc2l6ZTogMTFweCAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgICAgd2lkdGg6IDQwJTtcbiAgICAgIGZvbnQtc2l6ZTogOXB4ICFpbXBvcnRhbnQ7XG4gICAgICBoZWlnaHQ6IDI2cHg7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IERpcmVjY2lvbiA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBwYWRkaW5nLXRvcDogMTFweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwcHggYXV0bztcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgTWVudSA9IHN0eWxlZC5kaXZgXG4gICAgaGVpZ2h0OiAzN3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTk1MHB4KSB7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICBwYWRkaW5nLXRvcDogM3B4O1xuICAgIH1cblxuICBgO1xuXG4gIGNvbnN0IE1lbnVSZXMgPSBzdHlsZWQuZGl2YFxuICAgIGhlaWdodDogMzdweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICBgO1xuXG4gIGNvbnN0IFBlc3RhbmFzID0gc3R5bGVkLm5hdmBcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAtNHB4O1xuICAgIG1heC1oZWlnaHQ6IDM2cHg7XG4gIGA7XG5cbiAgY29uc3QgUGVzdGFuYXNMaXN0YSA9IHN0eWxlZC51bGBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogMzdweDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgYDtcblxuICBjb25zdCBQdW50ZXJvID0gc3R5bGVkLmFgXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICBgO1xuXG4gIGNvbnN0IEltZ01vZGFsID0gc3R5bGVkLmltZ2BcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBtaW4td2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgbWluLWhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICBgO1xuXG4gIGNvbnN0IFRpdHVsb3NIZWFkZXIgPSBzdHlsZWQucGBcbiAgICBtYXJnaW4tdG9wOiAwcHggIWltcG9ydGFudDtcbiAgYDtcblxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xuXG4gIGNvbnN0IFthYmllcnRvQW51bmNpb3MsIGNhbWJpYXJBYmllcnRvQW51bmNpb3NdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbYWJpZXJ0b1Byb21vY2lvbmVzLCBjYW1iaWFyUHJvbW9jaW9uZXNdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGFicmlyTW9kYWwgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9BbnVuY2lvcyh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBjZXJyYXJNb2RhbCA9ICgpID0+IHtcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCBhYnJpck1vZGFsUHJvbW9jaW9uZXMgPSAoKSA9PiB7XG4gICAgY2FtYmlhclByb21vY2lvbmVzKHRydWUpO1xuICB9O1xuXG4gIGNvbnN0IGNlcnJhck1vZGFsUHJvbW9jaW9uZXMgPSAoKSA9PiB7XG4gICAgY2FtYmlhclByb21vY2lvbmVzKGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCBSZWRpcmlnaXIgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3MoZmFsc2UpO1xuXG4gICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IFwiLyNyZXBhcmFjaW9uXCI7XG4gIH07XG5cbiAgY29uc3QgUmVkaXJpZ2lyQ29udGFjdG8gPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3MoZmFsc2UpO1xuXG4gICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IFwiLyNjb250YWN0b1wiO1xuXG4gICAgUm91dGVyLnB1c2goXCIjaG9tZVwiKTtcbiAgfTtcblxuICBjb25zdCBSZWRpcmlnaXJJTUcgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3MoZmFsc2UpO1xuXG4gICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IFwiLyNwdW50b2FcIjtcblxuICAgIFJvdXRlci5wdXNoKFwiI2hvbWVcIik7XG4gIH07XG5cbiAgY29uc3QgUmVkaXJpZ2lySW5pY2lvID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKGZhbHNlKTtcblxuICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSBcIi8jcHVudG9hXCI7XG5cbiAgICBSb3V0ZXIucHVzaChcIiNob21lXCIpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8bGlua1xuICAgICAgICAgIHJlbD1cInN0eWxlc2hlZXQgcHJlbG9hZFwiXG4gICAgICAgICAgYXM9XCJzdHlsZVwiXG4gICAgICAgICAgaHJlZj1cImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vYm9vdHN0cmFwQDQuNi4wL2Rpc3QvY3NzL2Jvb3RzdHJhcC5taW4uY3NzXCJcbiAgICAgICAgICBpbnRlZ3JpdHk9XCJzaGEzODQtQjB2UDV4bUFUdzErSzlLUlFqUUVSSnZUdW1RVzBuUEV6dkY2TC9aNm5yb25KM29VT0ZVRnBDakVVUW91cTIrbFwiXG4gICAgICAgICAgY3Jvc3NPcmlnaW49XCJhbm9ueW1vdXNcIlxuICAgICAgICAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPHNwYW4gaWQ9XCJwdW50b2FcIj48L3NwYW4+XG4gICAgICA8c2VjdGlvbiBpZD1cImhlYWRlclwiIGNsYXNzTmFtZT1cInN0aWNreS10b3BcIj5cbiAgICAgICAgPGRpdiBpZD1cImhlYWRlcmRvc1wiPlxuICAgICAgICAgIDxCaWVudmVuaWRvIGNsYXNzTmFtZT1cImp1c3RpZnktY29udGVudC1iZXR3ZWVuXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRpdkJpZW52ZW5pZG9cIj5cbiAgICAgICAgICAgICAgPFRleHRvQmllbnZlbmlkbyBpZD1cIndlbGNvbWVcIj5cbiAgICAgICAgICAgICAgICBCaWVudmVuaWRvIGEgSGFuZCBIZWxkIFNvbHV0aW9uc1xuICAgICAgICAgICAgICA8L1RleHRvQmllbnZlbmlkbz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPFNvY2lhbE1lZGlhPlxuICAgICAgICAgICAgICA8ZGl2IGlkPVwid2FcIj5cbiAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vd2EubWUvbWVzc2FnZS9LWlNIWDVGT1dBU0dGMVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPExvZ29SZWRlc1xuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJyZWRlc1wiXG4gICAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvd2hhdHNfbHN0cWVkLndlYnBcIlxuICAgICAgICAgICAgICAgICAgICBhbHQ9XCJsb2dvIHdoYXRzYXBwXCJcbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBpZD1cImZiXCI+XG4gICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3d3dy5mYWNlYm9vay5jb20vSGFuZEhlbGRTb2x1dGlvbnNPZmljaWFsXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8TG9nb1JlZGVzXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJlZGVzXCJcbiAgICAgICAgICAgICAgICAgICAgc3JjPVwiL2ltZy8yX3JyNmZnei53ZWJwXCJcbiAgICAgICAgICAgICAgICAgICAgYWx0PVwibG9nbyBmYWNlYm9va1wiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgaWQ9XCJpblwiPlxuICAgICAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvaGFuZGhlbGRzb2x1dGlvbnMvXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8TG9nb1JlZGVzXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJlZGVzXCJcbiAgICAgICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9pbl93ZmEyeDIud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cImxvZ28gbGlua2VkaW5cIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGlkPVwieXRcIj5cbiAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2NoYW5uZWwvVUNqVlBLVFZWczBOLW9WcHVMaXpFRmF3XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8TG9nb1JlZGVzWVRcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicmVkZXNcIlxuICAgICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL3lvdXR1YmVfbzc1eTRmLndlYnBcIlxuICAgICAgICAgICAgICAgICAgICBhbHQ9XCJsb2dvIHlvdXR1YmVcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9Tb2NpYWxNZWRpYT5cbiAgICAgICAgICA8L0JpZW52ZW5pZG8+XG4gICAgICAgICAgPEhlYWRlckNvbnRhY3RvPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZXBhcmFjaW9uXCI+XG4gICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGEgb25DbGljaz17UmVkaXJpZ2lySU1HfT5cbiAgICAgICAgICAgICAgICAgIDxMb2dvXG4gICAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvTE9HTy1ISFMud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cIkxvZ28gaGFuZCBoZWxkIHNvbHV0aW9uc1wiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIHtzaXplIDwgOTkxID8gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWRkcmVzc1wiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoYWJlclwiPlxuICAgICAgICAgICAgICAgICAgICA8TGxhbWFub3M+wqFMbMOhbWFub3MhPC9MbGFtYW5vcz5cbiAgICAgICAgICAgICAgICAgICAgPE51bWVyb1Jlc3BvbnNpdmVcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIlxuICAgICAgICAgICAgICAgICAgICAgIHJvbGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgIGhyZWY9XCJ0ZWw6ICg1NSkgNzU5OSA2MjcyXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+KDU1KSA3NTk5IDYyNzI8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgPC9OdW1lcm9SZXNwb25zaXZlPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8Qm90b25Db3JyZW9SZXNwb25zaXZlXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2sgYi1jb250XCJcbiAgICAgICAgICAgICAgICAgICAgaHJlZj1cIiNjb250YWN0b1wiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+Y29udGFjdG9AaGFuZGhlbGRzb2x1dGlvbnMuY29tLm14PC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICA8L0JvdG9uQ29ycmVvUmVzcG9uc2l2ZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsbGFtYW5vc1wiPlxuICAgICAgICAgICAgICAgICAgICA8TGxhbWFub3M+wqFMbMOhbWFub3MhPC9MbGFtYW5vcz5cbiAgICAgICAgICAgICAgICAgICAgPE51bWVyb1xuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBudW1ub1wiXG4gICAgICAgICAgICAgICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgaHJlZj1cInRlbDooNTUpIDc1OTkgNjI3MlwiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPig1NSkgNzU5OSA2MjcyPC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICAgIDwvTnVtZXJvPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFkZHJlc3NcIj5cbiAgICAgICAgICAgICAgICAgICAgPEJvdG9uQ29ycmVvXG4gICAgICAgICAgICAgICAgICAgICAgaHJlZj1cIiNjb250YWN0b1wiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayBiLWNvbnQgdGFtXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+Y29udGFjdG9AaGFuZGhlbGRzb2x1dGlvbnMuY29tLm14PC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICAgIDwvQm90b25Db3JyZW8+XG4gICAgICAgICAgICAgICAgICAgIDxEaXJlY2Npb24gY2xhc3NOYW1lPVwibGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgICAgQ2FsbGUuIFBhbGVucXVlLCZuYnNwO0NvbC4gTGV0csOhbiBWYWxsZSwgQWxjYWxkw61hIEJlbml0b1xuICAgICAgICAgICAgICAgICAgICAgICAgSnXDoXJlelxuICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgIDxicj48L2JyPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+Jm5ic3A7Q0RNWCwgQy5QLiAwMzY1MCwgTcOpeGljbzwvc3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgIDxicj48L2JyPlxuICAgICAgICAgICAgICAgICAgICA8L0RpcmVjY2lvbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9IZWFkZXJDb250YWN0bz5cbiAgICAgICAgICB7c2l6ZSA8IDgwMCA/IDxUYXJqZXRhRG9zIC8+IDogPFRhcmpldGEgLz59XG4gICAgICAgICAgXG4gICAgICAgICAgICB7c2l6ZSA8IDk5NSA/IFxuICAgICAgICAgICAgPE1lbnVSZXM+XG4gICAgICAgICAgICA8TmF2YmFyIGNvbGxhcHNlT25TZWxlY3QgIGV4cGFuZD0neHhsJyBiZz0nZGFyaycgdmFyaWFudD0nZGFyaycgPlxuICAgICAgICAgICAgICAgIDxOYXZiYXIuVG9nZ2xlIGFyaWEtY29udHJvbHM9J3Jlc3BvbnNpdmUtbmF2YmFyLW5hdicgY2xhc3NOYW1lPVwibmF2YmF1XCIvPlxuICAgICAgICAgICAgICAgIDxOYXZiYXIuQ29sbGFwc2UgaWQ9J3Jlc3BvbnNpdmUtbmF2YmFyLW5hdic+XG4gICAgICAgICAgICAgICAgICA8TmF2PlxuICAgICAgICAgICAgICAgICAgICA8TmF2LkxpbmsgaHJlZj1cIi9cIj5JbmljaW88L05hdi5MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24gdGl0bGU9XCJSZW50YVwiIGlkPVwiYmFzaWMtbmF2LWRyb3Bkb3duXCIgPlxuICAgICAgICAgICAgICAgICAgICAgIDxOYXZEcm9wZG93bi5JdGVtIGhyZWY9XCJyZW50YS1kZS1oYW5kaGVsZHNcIj5IYW5kaGVsZHM8L05hdkRyb3Bkb3duLkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duLkl0ZW0gaHJlZj1cInJlbnRhLWRlLWltcHJlc29yYXMtZGUtZXRpcXVldGFzXCI+SW1wcmVzb3JhczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24uSXRlbSBocmVmPVwicmVudGEtZGUtbGVjdG9yZXMtZGUtY29kaWdvcy1kZS1iYXJyYXNcIj5MZWN0b3JlczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPC9OYXZEcm9wZG93bj5cbiAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duIHRpdGxlPVwiUmVwYXJhY2nDs25cIiBpZD1cImJhc2ljLW5hdi1kcm9wZG93blwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxOYXZEcm9wZG93bi5JdGVtIGhyZWY9XCJyZXBhcmFjaW9uLWRlLWhhbmRoZWxkc1wiPkhhbmRoZWxkczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24uSXRlbSBocmVmPVwicmVwYXJhY2lvbi1kZS1pbXByZXNvcmFzLWRlLWV0aXF1ZXRhc1wiPkltcHJlc29yYXM8L05hdkRyb3Bkb3duLkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duLkl0ZW0gaHJlZj1cInJlcGFyYWNpb24tZGUtbGVjdG9yZXMtZGUtY29kaWdvcy1kZS1iYXJyYXNcIj5MZWN0b3JlczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPC9OYXZEcm9wZG93bj5cbiAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duIHRpdGxlPVwiVmVudGFcIiBpZD1cImJhc2ljLW5hdi1kcm9wZG93blwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxOYXZEcm9wZG93bi5JdGVtIGhyZWY9XCJ2ZW50YS1kZS1oYW5kaGVsZHNcIj5IYW5kaGVsZHM8L05hdkRyb3Bkb3duLkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duLkl0ZW0gaHJlZj1cInZlbnRhLWRlLWltcHJlc29yYXMtZGUtZXRpcXVldGFzXCI+SW1wcmVzb3JhczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24uSXRlbSBocmVmPVwidmVudGEtZGUtbGVjdG9yZXMtZGUtY29kaWdvcy1kZS1iYXJyYXNcIj5MZWN0b3JlczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24uSXRlbSBocmVmPVwidmVudGEtZGUtYWNjZXNvcmlvcy15LWNvbnN1bWlibGVzXCI+QWNjZXNvcmlvcyB5IENvbnN1bWlibGVzPC9OYXZEcm9wZG93bi5JdGVtPlxuICAgICAgICAgICAgICAgICAgICAgIDxOYXZEcm9wZG93bi5JdGVtIGhyZWY9XCJ2ZW50YS1mdW5kYXMtaGFuZGhlbGQtaW1wcmVzb3JhLXBvcnRhdGlsXCI+RnVuZGFzPC9OYXZEcm9wZG93bi5JdGVtPlxuICAgICAgICAgICAgICAgICAgICA8L05hdkRyb3Bkb3duPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPE5hdi5MaW5rIGhyZWY9XCIvRFNELXZlbnRhLWVuLXJ1dGFcIj5Tb2x1Y2nDs24gRFNEPC9OYXYuTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPE5hdi5MaW5rIGhyZWY9XCIvdmVudGEtZnVuZGFzLWhhbmRoZWxkLWltcHJlc29yYS1wb3J0YXRpbFwiPkZ1bmRhczwvTmF2Lkxpbms+XG4gICAgICAgICAgICAgICAgICAgIDxOYXYuTGluayBocmVmPVwiL2ltcHJlc2lvbi1jcmVkZW5jaWFsZXMtdGFyamV0YXMtZ2FmZXRlcy1wdmNcIj5JbXByZXNpw7NuIGRlIGNyZWRlbmNpYWxlczwvTmF2Lkxpbms+XG4gICAgICAgICAgICAgICAgICAgIDxOYXYuTGluayBocmVmPVwiL2ltcHJlc2lvbi1ldGlxdWV0YXNcIj5JbXByZXNpw7NuIGRlIGV0aXF1ZXRhczwvTmF2Lkxpbms+XG4gICAgICAgICAgICAgICAgICAgIDxOYXYgY2xhc3NOYW1lPVwicmVzcG9ubWVudVwiIG9uQ2xpY2s9e2FicmlyTW9kYWxQcm9tb2Npb25lc30+UHJvbW9jaW9uZXM8L05hdj5cbiAgICAgICAgICAgICAgICAgICAgPE5hdiBjbGFzc05hbWU9XCJyZXNwb25tZW51XCIgb25DbGljaz17YWJyaXJNb2RhbH0+QW51bmNpb3M8L05hdj5cbiAgICAgICAgICAgICAgICAgICAgPE5hdiBjbGFzc05hbWU9XCJyZXNwb25tZW51XCIgb25DbGljaz17UmVkaXJpZ2lyQ29udGFjdG99PkNvbnRhY3RvPC9OYXY+XG4gICAgICAgICAgICAgICAgICA8L05hdj5cbiAgICAgICAgICAgICAgICA8L05hdmJhci5Db2xsYXBzZT5cbiAgICAgICAgICAgIDwvTmF2YmFyPlxuICAgICAgICAgIDwvTWVudVJlcz5cbiAgICAgICAgICAgIDogXG4gICAgICAgICAgICA8TWVudT5cbiAgICAgICAgICAgIDxQZXN0YW5hcyBpZD1cIm1lbnVcIj5cbiAgICAgICAgICAgICAgPFBlc3RhbmFzTGlzdGE+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiIG9uQ2xpY2s9e1JlZGlyaWdpckluaWNpb30+XG4gICAgICAgICAgICAgICAgICAgIEluaWNpb1xuICAgICAgICAgICAgICAgICAgPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiPlJlbnRhPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9yZW50YS1kZS1oYW5kaGVsZHNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImxldHJhcy1lbmxhY2VzXCI+SGFuZGhlbGRzPC9hPlxuICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcmVudGEtZGUtaW1wcmVzb3Jhcy1kZS1ldGlxdWV0YXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImxldHJhcy1lbmxhY2VzXCI+SW1wcmVzb3JhczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JlbnRhLWRlLWxlY3RvcmVzLWRlLWNvZGlnb3MtZGUtYmFycmFzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkxlY3RvcmVzPC9hPlxuICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8VGl0dWxvc0hlYWRlciBjbGFzc05hbWU9XCJlbmxhY2VzXCI+UmVwYXJhY2nDs248L1RpdHVsb3NIZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JlcGFyYWNpb24tZGUtaGFuZGhlbGRzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkhhbmRoZWxkczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JlcGFyYWNpb24tZGUtaW1wcmVzb3Jhcy1kZS1ldGlxdWV0YXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImxldHJhcy1lbmxhY2VzXCI+SW1wcmVzb3JhczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JlcGFyYWNpb24tZGUtbGVjdG9yZXMtZGUtY29kaWdvcy1kZS1iYXJyYXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImxldHJhcy1lbmxhY2VzXCI+TGVjdG9yZXM8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgIDxUaXR1bG9zSGVhZGVyIGNsYXNzTmFtZT1cImVubGFjZXNcIj5WZW50YTwvVGl0dWxvc0hlYWRlcj5cbiAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdmVudGEtZGUtaGFuZGhlbGRzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkhhbmRoZWxkczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWltcHJlc29yYXMtZGUtZXRpcXVldGFzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkltcHJlc29yYXM8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi92ZW50YS1kZS1sZWN0b3Jlcy1kZS1jb2RpZ29zLWRlLWJhcnJhc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwibGV0cmFzLWVubGFjZXNcIj5MZWN0b3JlczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWFjY2Vzb3Jpb3MteS1jb25zdW1pYmxlc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwibGV0cmFzLWVubGFjZXNcIj5BY2Nlc29yaW9zIHkgQ29uc3VtaWJsZXM8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi92ZW50YS1mdW5kYXMtaGFuZGhlbGQtaW1wcmVzb3JhLXBvcnRhdGlsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkZ1bmRhczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9EU0QtdmVudGEtZW4tcnV0YVwiPlxuICAgICAgICAgICAgICAgICAgICA8VGl0dWxvc0hlYWRlciBjbGFzc05hbWU9XCJlbmxhY2VzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgU29sdWNpw7NuIERTRFxuICAgICAgICAgICAgICAgICAgICA8L1RpdHVsb3NIZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWZ1bmRhcy1oYW5kaGVsZC1pbXByZXNvcmEtcG9ydGF0aWxcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiPlxuICAgICAgICAgICAgICAgICAgICAgIEZ1bmRhc1xuICAgICAgICAgICAgICAgICAgICA8L1RpdHVsb3NIZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2ltcHJlc2lvbi1jcmVkZW5jaWFsZXMtdGFyamV0YXMtZ2FmZXRlcy1wdmNcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiPlxuICAgICAgICAgICAgICAgICAgICBJbXByZXNpw7NuIGRlIGNyZWRlbmNpYWxlc1xuICAgICAgICAgICAgICAgICAgICA8L1RpdHVsb3NIZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8VGl0dWxvc0hlYWRlclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJlbmxhY2VzXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17YWJyaXJNb2RhbFByb21vY2lvbmVzfVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBQcm9tb2Npb25lc1xuICAgICAgICAgICAgICAgICAgPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiIG9uQ2xpY2s9e2FicmlyTW9kYWx9PlxuICAgICAgICAgICAgICAgICAgICBBbnVuY2lvc1xuICAgICAgICAgICAgICAgICAgPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZW5sYWNlc1wiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e1JlZGlyaWdpckNvbnRhY3RvfVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBDb250YWN0b1xuICAgICAgICAgICAgICAgICAgPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvUGVzdGFuYXNMaXN0YT5cbiAgICAgICAgICAgIDwvUGVzdGFuYXM+XG4gICAgICAgICAgICA8L01lbnU+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxNb2RhbFxuICAgICAgICAgIHNob3c9e2FiaWVydG9BbnVuY2lvc31cbiAgICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsfVxuICAgICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgICBzaXplPVwibGdcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWFsdHVyYVwiXG4gICAgICAgID5cbiAgICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxuICAgICAgICAgICAgPE1vZGFsLlRpdGxlPiBQcm9tb2Npb25lczwvTW9kYWwuVGl0bGU+XG4gICAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XG4gICAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgICA8Q2Fyb3VzZWw+XG4gICAgICAgICAgICAgIDxDYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImQtYmxvY2sgdy0xMDBcIlxuICAgICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9pbXByZXNvcmFfSU1aMzIwLndlYnBcIlxuICAgICAgICAgICAgICAgICAgYWx0PVwiUmVudGEgZGUgSW1wcmVzb3JhIElNWjMyMFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9DYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICA8Q2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkLWJsb2NrIHctMTAwXCJcbiAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvSU1BR0VOX1pFQlJBX0JBTk5FUl84MDBYNTAwX2x5cW5wdS53ZWJwXCJcbiAgICAgICAgICAgICAgICAgIGFsdD1cIlplYnJhIEhhbmQgSGVsZCBJbXByZXNvcmFzIExlY3RvcmVzXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0Nhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgIDxDYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICAgIDxQdW50ZXJvIG9uQ2xpY2s9e1JlZGlyaWdpcn0+XG4gICAgICAgICAgICAgICAgICA8SW1nTW9kYWxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZC1ibG9jayBcIlxuICAgICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL0NvcGlhX2RlX3DDs2xpemFzX3JlcGFyYWNpw7NuX3NnMHhpbS53ZWJwXCJcbiAgICAgICAgICAgICAgICAgICAgYWx0PVwiUG9saXphcyBkZSByZXBhcmFjaW9uIGhhbmRoZWxkIGltcHJlc29yYXMgZGUgZXRpcXVldGFzIHkgbGVjdG9yZXNcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L1B1bnRlcm8+XG4gICAgICAgICAgICAgIDwvQ2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgPENhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNsaWNrc1wiXG4gICAgICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyMzA5ODAxNC9iYW5uZXIvcHVibGljYWNpJUMzJUIzbl9udWV2b19sYW56YW1pZW50b19lYzUwX3lfZWM1NV9mbXduaHoucG5nXCJcbiAgICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8SW1nTW9kYWxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZC1ibG9jayBcIlxuICAgICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL0NvcGlhX2RlX2VjNTBfeV9lYzU1X2VuX3dlYl9reXg2bXAud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cIlplYnJhIEVDNTAgRUM1NVwiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9DYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICA8Q2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgICA8SW1nTW9kYWxcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImQtYmxvY2sgXCJcbiAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvSU1BR0VOX1pFQlJBX0JBTk5FUl84MDBYNTAwX3ZyNnAxZC53ZWJwXCJcbiAgICAgICAgICAgICAgICAgIGFsdD1cIlplYnJhIEhhbmQgSGVsZCBJbXByZXNvcmFzIExlY3RvcmVzXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0Nhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgIDxDYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICAgIDxQdW50ZXJvXG4gICAgICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyMzA5ODAxMi9iYW5uZXIvRURBNjFLX0ZCX28yb2JvZC5wbmdcIlxuICAgICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxJbWdNb2RhbFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkLWJsb2NrIFwiXG4gICAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvRURBNjFLX1dFQl9sdXFuZnMud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cIkhhbmQgSGVsZCBFREE2MUsgWmVicmFcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L1B1bnRlcm8+XG4gICAgICAgICAgICAgIDwvQ2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgPENhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgICAgPFB1bnRlcm9cbiAgICAgICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kaWhhd3FybnQvaW1hZ2UvdXBsb2FkL3YxNjIzMDk4MDEwL2Jhbm5lci9jazY1X0ZCXzFfcmo4ejN1LnBuZ1wiXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPEltZ01vZGFsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImQtYmxvY2sgXCJcbiAgICAgICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9DSzY1X1dFQl9sOWFrbTMud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cIkhhbmQgSGVsZCBDSzY1IFplYnJhXCJcbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9QdW50ZXJvPlxuICAgICAgICAgICAgICA8L0Nhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICA8L0Nhcm91c2VsPlxuICAgICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwibGlnaHRcIiBvbkNsaWNrPXtjZXJyYXJNb2RhbH0+XG4gICAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICAgIDwvTW9kYWw+XG5cbiAgICAgICAgPE1vZGFsXG4gICAgICAgICAgc2hvdz17YWJpZXJ0b1Byb21vY2lvbmVzfVxuICAgICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWxQcm9tb2Npb25lc31cbiAgICAgICAgICBrZXlib2FyZD17ZmFsc2V9XG4gICAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxuICAgICAgICA+XG4gICAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICAgIDxNb2RhbC5UaXRsZT5Qcm9tb2Npb25lczwvTW9kYWwuVGl0bGU+XG4gICAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XG4gICAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgICA8Q2Fyb3VzZWw+XG4gICAgICAgICAgICA8Q2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkLWJsb2NrIHctMTAwXCJcbiAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvUHJvbW9jacOzbl9tYzkwOTBfZnVuY2lvbmFsX3BvODNzay53ZWJwXCJcbiAgICAgICAgICAgICAgICAgIGFsdD1cIkhhbmQgSGVsZCBNQzkwOTBcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvQ2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgPENhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZC1ibG9jayB3LTEwMFwiXG4gICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL2N1cG9uYmFubmVyLndlYnBcIlxuICAgICAgICAgICAgICAgICAgYWx0PVwiSGFuZCBIZWxkIE1DOTE5MFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9DYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICA8Q2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkLWJsb2NrIHctMTAwXCJcbiAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvUHJvbW9jacOzbl9NQzkxOTBfc3JpY2I2LndlYnBcIlxuICAgICAgICAgICAgICAgICAgYWx0PVwiSGFuZCBIZWxkIE1DOTE5MFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9DYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgPENhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZC1ibG9jayB3LTEwMFwiXG4gICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL0NvcGlhX2RlX3Byb21vY2nDs25fcmVkaW1lbnNpw7NuX3dlYl90Z3ZyZnAud2VicFwiXG4gICAgICAgICAgICAgICAgICBhbHQ9XCJIYW5kIEhlbGQgSW50ZXJtZWMgSG9uZXl3ZWxsIENONTFcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvQ2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgIDwvQ2Fyb3VzZWw+XG4gICAgICAgICAgPC9Nb2RhbC5Cb2R5PlxuICAgICAgICAgIDxNb2RhbC5Gb290ZXI+XG4gICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsUHJvbW9jaW9uZXN9PlxuICAgICAgICAgICAgICBDZXJyYXJcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvTW9kYWwuRm9vdGVyPlxuICAgICAgICA8L01vZGFsPlxuICAgICAgPC9zZWN0aW9uPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Numero = _styled(\"a\", false ? {\n    target: \"ea6yc6s11\"\n  } : {\n    target: \"ea6yc6s11\",\n    label: \"Numero\"\n  })(false ? {\n    name: \"1gkzyv6\",\n    styles: \"margin-top:-15px\"\n  } : {\n    name: \"1gkzyv6\",\n    styles: \"margin-top:-15px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ3Jpc3RcXERlc2t0b3BcXEhIUy0yMDIxMTEyM1QxODQzNTVaLTAwMVxcSEhTXFxjb21wb25lbnRzXFxsYXlvdXRcXEhlYWRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnSXlCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcQ3Jpc3RcXERlc2t0b3BcXEhIUy0yMDIxMTEyM1QxODQzNTVaLTAwMVxcSEhTXFxjb21wb25lbnRzXFxsYXlvdXRcXEhlYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgVGFyamV0YSBmcm9tIFwiLi4vbGF5b3V0L1RhcmpldGFcIjtcbmltcG9ydCBUYXJqZXRhRG9zIGZyb20gXCIuLi9sYXlvdXQvVGFyamV0YURvc1wiO1xuaW1wb3J0IHsgTW9kYWwsIENhcm91c2VsLCBCdXR0b24sIE5hdmJhciwgTmF2LCBOYXZEcm9wZG93biwgSXRlbSB9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmltcG9ydCB1c2VXaW5kb3dTaXplIGZyb20gXCIuLi8uLi9ob29rcy91c2VXaW5kb3dTaXplXCI7XG5cbmNvbnN0IEhlYWRlciA9ICgpID0+IHtcbiAgY29uc3QgQmllbnZlbmlkbyA9IHN0eWxlZC5kaXZgXG4gICAgbWluLXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzZjMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmctdG9wOiAxMXB4O1xuICBgO1xuXG4gIGNvbnN0IFRleHRvQmllbnZlbmlkbyA9IHN0eWxlZC5oMWBcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAyNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICBmb250LWZhbWlseTogXCJSYWxld2F5XCIsIHNhbnMtc2VyaWY7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTk1MHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODgxcHgpIHtcbiAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgU29jaWFsTWVkaWEgPSBzdHlsZWQuZGl2YFxuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgxcHgpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDI4cHgpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgTG9nb1JlZGVzID0gc3R5bGVkLmltZ2BcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDE5NTBweCkge1xuICAgICAgICB3aWR0aDogMjVweDtcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBMb2dvUmVkZXNZVCA9IHN0eWxlZC5pbWdgXG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIG1hcmdpbi1yaWdodDogMjVweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTUwcHgpIHtcbiAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgIGhlaWdodDogMjVweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgSGVhZGVyQ29udGFjdG8gPSBzdHlsZWQuZGl2YFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIG1pbi13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBgO1xuXG4gIGNvbnN0IExvZ28gPSBzdHlsZWQuaW1nYFxuICAgIGhlaWdodDogOTNweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTUwcHgpIHtcbiAgICAgICAgaGVpZ2h0OiA5NnB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNTBweCkge1xuICAgICAgaGVpZ2h0OiA2NXB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBMbGFtYW5vcyA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTk1MHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgcGFkZGluZy10b3A6IDBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTkxcHgpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMTFweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMnB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3ODFweCkge1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMXB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDIycHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ1MHB4KSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxOXB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzMDBweCkge1xuICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMHB4O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBOdW1lcm8gPSBzdHlsZWQuYWBcbiAgICBtYXJnaW4tdG9wOiAtMTVweDtcbiAgICBcbiAgYDtcblxuICBjb25zdCBOdW1lcm9SZXNwb25zaXZlID0gc3R5bGVkLmFgXG4gICAgbWFyZ2luLXRvcDogMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzgxcHgpIHtcbiAgICAgIHdpZHRoOiA0NCU7XG4gICAgICBmb250LXNpemU6IDEzcHggIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNTQwcHgpIHtcbiAgICAgIHdpZHRoOiA0NSU7XG4gICAgICBmb250LXNpemU6IDExcHggIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgICAgIHdpZHRoOiA0NiU7XG4gICAgICBmb250LXNpemU6IDlweCAhaW1wb3J0YW50O1xuICAgIH1cbiAgYDtcblxuICBjb25zdCBCb3RvbkNvcnJlbyA9IHN0eWxlZC5hYFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgaGVpZ2h0OiAzOHB4O1xuICAgIHdpZHRoOiA2NCU7XG4gICAgbWFyZ2luOiAwcHggYXV0bztcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTUwcHgpIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IEJvdG9uQ29ycmVvUmVzcG9uc2l2ZSA9IHN0eWxlZC5hYFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgaGVpZ2h0OiAzOHB4O1xuICAgIHdpZHRoOiA2NCU7XG4gICAgbWFyZ2luOiAwcHggYXV0bztcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3ODFweCkge1xuICAgICAgd2lkdGg6IDQzJTtcbiAgICAgIGZvbnQtc2l6ZTogMTNweCAhaW1wb3J0YW50O1xuICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NDBweCkge1xuICAgICAgd2lkdGg6IDM5JTtcbiAgICAgIGZvbnQtc2l6ZTogMTFweCAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0NTBweCkge1xuICAgICAgd2lkdGg6IDQwJTtcbiAgICAgIGZvbnQtc2l6ZTogOXB4ICFpbXBvcnRhbnQ7XG4gICAgICBoZWlnaHQ6IDI2cHg7XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IERpcmVjY2lvbiA9IHN0eWxlZC5wYFxuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBwYWRkaW5nLXRvcDogMTFweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwcHggYXV0bztcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxOTUwcHgpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gIGA7XG5cbiAgY29uc3QgTWVudSA9IHN0eWxlZC5kaXZgXG4gICAgaGVpZ2h0OiAzN3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTk1MHB4KSB7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICBwYWRkaW5nLXRvcDogM3B4O1xuICAgIH1cblxuICBgO1xuXG4gIGNvbnN0IE1lbnVSZXMgPSBzdHlsZWQuZGl2YFxuICAgIGhlaWdodDogMzdweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICBgO1xuXG4gIGNvbnN0IFBlc3RhbmFzID0gc3R5bGVkLm5hdmBcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiAtNHB4O1xuICAgIG1heC1oZWlnaHQ6IDM2cHg7XG4gIGA7XG5cbiAgY29uc3QgUGVzdGFuYXNMaXN0YSA9IHN0eWxlZC51bGBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogMzdweDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgYDtcblxuICBjb25zdCBQdW50ZXJvID0gc3R5bGVkLmFgXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICBgO1xuXG4gIGNvbnN0IEltZ01vZGFsID0gc3R5bGVkLmltZ2BcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBtaW4td2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgbWluLWhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICBgO1xuXG4gIGNvbnN0IFRpdHVsb3NIZWFkZXIgPSBzdHlsZWQucGBcbiAgICBtYXJnaW4tdG9wOiAwcHggIWltcG9ydGFudDtcbiAgYDtcblxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xuXG4gIGNvbnN0IFthYmllcnRvQW51bmNpb3MsIGNhbWJpYXJBYmllcnRvQW51bmNpb3NdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbYWJpZXJ0b1Byb21vY2lvbmVzLCBjYW1iaWFyUHJvbW9jaW9uZXNdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGFicmlyTW9kYWwgPSAoKSA9PiB7XG4gICAgY2FtYmlhckFiaWVydG9BbnVuY2lvcyh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBjZXJyYXJNb2RhbCA9ICgpID0+IHtcbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCBhYnJpck1vZGFsUHJvbW9jaW9uZXMgPSAoKSA9PiB7XG4gICAgY2FtYmlhclByb21vY2lvbmVzKHRydWUpO1xuICB9O1xuXG4gIGNvbnN0IGNlcnJhck1vZGFsUHJvbW9jaW9uZXMgPSAoKSA9PiB7XG4gICAgY2FtYmlhclByb21vY2lvbmVzKGZhbHNlKTtcbiAgfTtcblxuICBjb25zdCBSZWRpcmlnaXIgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3MoZmFsc2UpO1xuXG4gICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IFwiLyNyZXBhcmFjaW9uXCI7XG4gIH07XG5cbiAgY29uc3QgUmVkaXJpZ2lyQ29udGFjdG8gPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3MoZmFsc2UpO1xuXG4gICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IFwiLyNjb250YWN0b1wiO1xuXG4gICAgUm91dGVyLnB1c2goXCIjaG9tZVwiKTtcbiAgfTtcblxuICBjb25zdCBSZWRpcmlnaXJJTUcgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNhbWJpYXJBYmllcnRvQW51bmNpb3MoZmFsc2UpO1xuXG4gICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IFwiLyNwdW50b2FcIjtcblxuICAgIFJvdXRlci5wdXNoKFwiI2hvbWVcIik7XG4gIH07XG5cbiAgY29uc3QgUmVkaXJpZ2lySW5pY2lvID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjYW1iaWFyQWJpZXJ0b0FudW5jaW9zKGZhbHNlKTtcblxuICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSBcIi8jcHVudG9hXCI7XG5cbiAgICBSb3V0ZXIucHVzaChcIiNob21lXCIpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8bGlua1xuICAgICAgICAgIHJlbD1cInN0eWxlc2hlZXQgcHJlbG9hZFwiXG4gICAgICAgICAgYXM9XCJzdHlsZVwiXG4gICAgICAgICAgaHJlZj1cImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vYm9vdHN0cmFwQDQuNi4wL2Rpc3QvY3NzL2Jvb3RzdHJhcC5taW4uY3NzXCJcbiAgICAgICAgICBpbnRlZ3JpdHk9XCJzaGEzODQtQjB2UDV4bUFUdzErSzlLUlFqUUVSSnZUdW1RVzBuUEV6dkY2TC9aNm5yb25KM29VT0ZVRnBDakVVUW91cTIrbFwiXG4gICAgICAgICAgY3Jvc3NPcmlnaW49XCJhbm9ueW1vdXNcIlxuICAgICAgICAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgPHNwYW4gaWQ9XCJwdW50b2FcIj48L3NwYW4+XG4gICAgICA8c2VjdGlvbiBpZD1cImhlYWRlclwiIGNsYXNzTmFtZT1cInN0aWNreS10b3BcIj5cbiAgICAgICAgPGRpdiBpZD1cImhlYWRlcmRvc1wiPlxuICAgICAgICAgIDxCaWVudmVuaWRvIGNsYXNzTmFtZT1cImp1c3RpZnktY29udGVudC1iZXR3ZWVuXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRpdkJpZW52ZW5pZG9cIj5cbiAgICAgICAgICAgICAgPFRleHRvQmllbnZlbmlkbyBpZD1cIndlbGNvbWVcIj5cbiAgICAgICAgICAgICAgICBCaWVudmVuaWRvIGEgSGFuZCBIZWxkIFNvbHV0aW9uc1xuICAgICAgICAgICAgICA8L1RleHRvQmllbnZlbmlkbz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPFNvY2lhbE1lZGlhPlxuICAgICAgICAgICAgICA8ZGl2IGlkPVwid2FcIj5cbiAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vd2EubWUvbWVzc2FnZS9LWlNIWDVGT1dBU0dGMVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPExvZ29SZWRlc1xuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJyZWRlc1wiXG4gICAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvd2hhdHNfbHN0cWVkLndlYnBcIlxuICAgICAgICAgICAgICAgICAgICBhbHQ9XCJsb2dvIHdoYXRzYXBwXCJcbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBpZD1cImZiXCI+XG4gICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3d3dy5mYWNlYm9vay5jb20vSGFuZEhlbGRTb2x1dGlvbnNPZmljaWFsXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8TG9nb1JlZGVzXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJlZGVzXCJcbiAgICAgICAgICAgICAgICAgICAgc3JjPVwiL2ltZy8yX3JyNmZnei53ZWJwXCJcbiAgICAgICAgICAgICAgICAgICAgYWx0PVwibG9nbyBmYWNlYm9va1wiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgaWQ9XCJpblwiPlxuICAgICAgICAgICAgICAgIDxhXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvaGFuZGhlbGRzb2x1dGlvbnMvXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8TG9nb1JlZGVzXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJlZGVzXCJcbiAgICAgICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9pbl93ZmEyeDIud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cImxvZ28gbGlua2VkaW5cIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGlkPVwieXRcIj5cbiAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2NoYW5uZWwvVUNqVlBLVFZWczBOLW9WcHVMaXpFRmF3XCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8TG9nb1JlZGVzWVRcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicmVkZXNcIlxuICAgICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL3lvdXR1YmVfbzc1eTRmLndlYnBcIlxuICAgICAgICAgICAgICAgICAgICBhbHQ9XCJsb2dvIHlvdXR1YmVcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9Tb2NpYWxNZWRpYT5cbiAgICAgICAgICA8L0JpZW52ZW5pZG8+XG4gICAgICAgICAgPEhlYWRlckNvbnRhY3RvPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZXBhcmFjaW9uXCI+XG4gICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGEgb25DbGljaz17UmVkaXJpZ2lySU1HfT5cbiAgICAgICAgICAgICAgICAgIDxMb2dvXG4gICAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvTE9HTy1ISFMud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cIkxvZ28gaGFuZCBoZWxkIHNvbHV0aW9uc1wiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIHtzaXplIDwgOTkxID8gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWRkcmVzc1wiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoYWJlclwiPlxuICAgICAgICAgICAgICAgICAgICA8TGxhbWFub3M+wqFMbMOhbWFub3MhPC9MbGFtYW5vcz5cbiAgICAgICAgICAgICAgICAgICAgPE51bWVyb1Jlc3BvbnNpdmVcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIlxuICAgICAgICAgICAgICAgICAgICAgIHJvbGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgIGhyZWY9XCJ0ZWw6ICg1NSkgNzU5OSA2MjcyXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+KDU1KSA3NTk5IDYyNzI8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgPC9OdW1lcm9SZXNwb25zaXZlPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8Qm90b25Db3JyZW9SZXNwb25zaXZlXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tYmxvY2sgYi1jb250XCJcbiAgICAgICAgICAgICAgICAgICAgaHJlZj1cIiNjb250YWN0b1wiXG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+Y29udGFjdG9AaGFuZGhlbGRzb2x1dGlvbnMuY29tLm14PC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICA8L0JvdG9uQ29ycmVvUmVzcG9uc2l2ZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsbGFtYW5vc1wiPlxuICAgICAgICAgICAgICAgICAgICA8TGxhbWFub3M+wqFMbMOhbWFub3MhPC9MbGFtYW5vcz5cbiAgICAgICAgICAgICAgICAgICAgPE51bWVyb1xuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBudW1ub1wiXG4gICAgICAgICAgICAgICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgaHJlZj1cInRlbDooNTUpIDc1OTkgNjI3MlwiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPig1NSkgNzU5OSA2MjcyPC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICAgIDwvTnVtZXJvPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFkZHJlc3NcIj5cbiAgICAgICAgICAgICAgICAgICAgPEJvdG9uQ29ycmVvXG4gICAgICAgICAgICAgICAgICAgICAgaHJlZj1cIiNjb250YWN0b1wiXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1ibG9jayBiLWNvbnQgdGFtXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+Y29udGFjdG9AaGFuZGhlbGRzb2x1dGlvbnMuY29tLm14PC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICAgIDwvQm90b25Db3JyZW8+XG4gICAgICAgICAgICAgICAgICAgIDxEaXJlY2Npb24gY2xhc3NOYW1lPVwibGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgICAgQ2FsbGUuIFBhbGVucXVlLCZuYnNwO0NvbC4gTGV0csOhbiBWYWxsZSwgQWxjYWxkw61hIEJlbml0b1xuICAgICAgICAgICAgICAgICAgICAgICAgSnXDoXJlelxuICAgICAgICAgICAgICAgICAgICAgIDwvc3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgIDxicj48L2JyPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+Jm5ic3A7Q0RNWCwgQy5QLiAwMzY1MCwgTcOpeGljbzwvc3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgIDxicj48L2JyPlxuICAgICAgICAgICAgICAgICAgICA8L0RpcmVjY2lvbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9IZWFkZXJDb250YWN0bz5cbiAgICAgICAgICB7c2l6ZSA8IDgwMCA/IDxUYXJqZXRhRG9zIC8+IDogPFRhcmpldGEgLz59XG4gICAgICAgICAgXG4gICAgICAgICAgICB7c2l6ZSA8IDk5NSA/IFxuICAgICAgICAgICAgPE1lbnVSZXM+XG4gICAgICAgICAgICA8TmF2YmFyIGNvbGxhcHNlT25TZWxlY3QgIGV4cGFuZD0neHhsJyBiZz0nZGFyaycgdmFyaWFudD0nZGFyaycgPlxuICAgICAgICAgICAgICAgIDxOYXZiYXIuVG9nZ2xlIGFyaWEtY29udHJvbHM9J3Jlc3BvbnNpdmUtbmF2YmFyLW5hdicgY2xhc3NOYW1lPVwibmF2YmF1XCIvPlxuICAgICAgICAgICAgICAgIDxOYXZiYXIuQ29sbGFwc2UgaWQ9J3Jlc3BvbnNpdmUtbmF2YmFyLW5hdic+XG4gICAgICAgICAgICAgICAgICA8TmF2PlxuICAgICAgICAgICAgICAgICAgICA8TmF2LkxpbmsgaHJlZj1cIi9cIj5JbmljaW88L05hdi5MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24gdGl0bGU9XCJSZW50YVwiIGlkPVwiYmFzaWMtbmF2LWRyb3Bkb3duXCIgPlxuICAgICAgICAgICAgICAgICAgICAgIDxOYXZEcm9wZG93bi5JdGVtIGhyZWY9XCJyZW50YS1kZS1oYW5kaGVsZHNcIj5IYW5kaGVsZHM8L05hdkRyb3Bkb3duLkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duLkl0ZW0gaHJlZj1cInJlbnRhLWRlLWltcHJlc29yYXMtZGUtZXRpcXVldGFzXCI+SW1wcmVzb3JhczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24uSXRlbSBocmVmPVwicmVudGEtZGUtbGVjdG9yZXMtZGUtY29kaWdvcy1kZS1iYXJyYXNcIj5MZWN0b3JlczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPC9OYXZEcm9wZG93bj5cbiAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duIHRpdGxlPVwiUmVwYXJhY2nDs25cIiBpZD1cImJhc2ljLW5hdi1kcm9wZG93blwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxOYXZEcm9wZG93bi5JdGVtIGhyZWY9XCJyZXBhcmFjaW9uLWRlLWhhbmRoZWxkc1wiPkhhbmRoZWxkczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24uSXRlbSBocmVmPVwicmVwYXJhY2lvbi1kZS1pbXByZXNvcmFzLWRlLWV0aXF1ZXRhc1wiPkltcHJlc29yYXM8L05hdkRyb3Bkb3duLkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duLkl0ZW0gaHJlZj1cInJlcGFyYWNpb24tZGUtbGVjdG9yZXMtZGUtY29kaWdvcy1kZS1iYXJyYXNcIj5MZWN0b3JlczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgPC9OYXZEcm9wZG93bj5cbiAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duIHRpdGxlPVwiVmVudGFcIiBpZD1cImJhc2ljLW5hdi1kcm9wZG93blwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxOYXZEcm9wZG93bi5JdGVtIGhyZWY9XCJ2ZW50YS1kZS1oYW5kaGVsZHNcIj5IYW5kaGVsZHM8L05hdkRyb3Bkb3duLkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgPE5hdkRyb3Bkb3duLkl0ZW0gaHJlZj1cInZlbnRhLWRlLWltcHJlc29yYXMtZGUtZXRpcXVldGFzXCI+SW1wcmVzb3JhczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24uSXRlbSBocmVmPVwidmVudGEtZGUtbGVjdG9yZXMtZGUtY29kaWdvcy1kZS1iYXJyYXNcIj5MZWN0b3JlczwvTmF2RHJvcGRvd24uSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICA8TmF2RHJvcGRvd24uSXRlbSBocmVmPVwidmVudGEtZGUtYWNjZXNvcmlvcy15LWNvbnN1bWlibGVzXCI+QWNjZXNvcmlvcyB5IENvbnN1bWlibGVzPC9OYXZEcm9wZG93bi5JdGVtPlxuICAgICAgICAgICAgICAgICAgICAgIDxOYXZEcm9wZG93bi5JdGVtIGhyZWY9XCJ2ZW50YS1mdW5kYXMtaGFuZGhlbGQtaW1wcmVzb3JhLXBvcnRhdGlsXCI+RnVuZGFzPC9OYXZEcm9wZG93bi5JdGVtPlxuICAgICAgICAgICAgICAgICAgICA8L05hdkRyb3Bkb3duPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPE5hdi5MaW5rIGhyZWY9XCIvRFNELXZlbnRhLWVuLXJ1dGFcIj5Tb2x1Y2nDs24gRFNEPC9OYXYuTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPE5hdi5MaW5rIGhyZWY9XCIvdmVudGEtZnVuZGFzLWhhbmRoZWxkLWltcHJlc29yYS1wb3J0YXRpbFwiPkZ1bmRhczwvTmF2Lkxpbms+XG4gICAgICAgICAgICAgICAgICAgIDxOYXYuTGluayBocmVmPVwiL2ltcHJlc2lvbi1jcmVkZW5jaWFsZXMtdGFyamV0YXMtZ2FmZXRlcy1wdmNcIj5JbXByZXNpw7NuIGRlIGNyZWRlbmNpYWxlczwvTmF2Lkxpbms+XG4gICAgICAgICAgICAgICAgICAgIDxOYXYuTGluayBocmVmPVwiL2ltcHJlc2lvbi1ldGlxdWV0YXNcIj5JbXByZXNpw7NuIGRlIGV0aXF1ZXRhczwvTmF2Lkxpbms+XG4gICAgICAgICAgICAgICAgICAgIDxOYXYgY2xhc3NOYW1lPVwicmVzcG9ubWVudVwiIG9uQ2xpY2s9e2FicmlyTW9kYWxQcm9tb2Npb25lc30+UHJvbW9jaW9uZXM8L05hdj5cbiAgICAgICAgICAgICAgICAgICAgPE5hdiBjbGFzc05hbWU9XCJyZXNwb25tZW51XCIgb25DbGljaz17YWJyaXJNb2RhbH0+QW51bmNpb3M8L05hdj5cbiAgICAgICAgICAgICAgICAgICAgPE5hdiBjbGFzc05hbWU9XCJyZXNwb25tZW51XCIgb25DbGljaz17UmVkaXJpZ2lyQ29udGFjdG99PkNvbnRhY3RvPC9OYXY+XG4gICAgICAgICAgICAgICAgICA8L05hdj5cbiAgICAgICAgICAgICAgICA8L05hdmJhci5Db2xsYXBzZT5cbiAgICAgICAgICAgIDwvTmF2YmFyPlxuICAgICAgICAgIDwvTWVudVJlcz5cbiAgICAgICAgICAgIDogXG4gICAgICAgICAgICA8TWVudT5cbiAgICAgICAgICAgIDxQZXN0YW5hcyBpZD1cIm1lbnVcIj5cbiAgICAgICAgICAgICAgPFBlc3RhbmFzTGlzdGE+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiIG9uQ2xpY2s9e1JlZGlyaWdpckluaWNpb30+XG4gICAgICAgICAgICAgICAgICAgIEluaWNpb1xuICAgICAgICAgICAgICAgICAgPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiPlJlbnRhPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9yZW50YS1kZS1oYW5kaGVsZHNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImxldHJhcy1lbmxhY2VzXCI+SGFuZGhlbGRzPC9hPlxuICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcmVudGEtZGUtaW1wcmVzb3Jhcy1kZS1ldGlxdWV0YXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImxldHJhcy1lbmxhY2VzXCI+SW1wcmVzb3JhczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JlbnRhLWRlLWxlY3RvcmVzLWRlLWNvZGlnb3MtZGUtYmFycmFzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkxlY3RvcmVzPC9hPlxuICAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8VGl0dWxvc0hlYWRlciBjbGFzc05hbWU9XCJlbmxhY2VzXCI+UmVwYXJhY2nDs248L1RpdHVsb3NIZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JlcGFyYWNpb24tZGUtaGFuZGhlbGRzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkhhbmRoZWxkczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JlcGFyYWNpb24tZGUtaW1wcmVzb3Jhcy1kZS1ldGlxdWV0YXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImxldHJhcy1lbmxhY2VzXCI+SW1wcmVzb3JhczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3JlcGFyYWNpb24tZGUtbGVjdG9yZXMtZGUtY29kaWdvcy1kZS1iYXJyYXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImxldHJhcy1lbmxhY2VzXCI+TGVjdG9yZXM8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgIDxUaXR1bG9zSGVhZGVyIGNsYXNzTmFtZT1cImVubGFjZXNcIj5WZW50YTwvVGl0dWxvc0hlYWRlcj5cbiAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdmVudGEtZGUtaGFuZGhlbGRzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkhhbmRoZWxkczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWltcHJlc29yYXMtZGUtZXRpcXVldGFzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkltcHJlc29yYXM8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi92ZW50YS1kZS1sZWN0b3Jlcy1kZS1jb2RpZ29zLWRlLWJhcnJhc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwibGV0cmFzLWVubGFjZXNcIj5MZWN0b3JlczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWRlLWFjY2Vzb3Jpb3MteS1jb25zdW1pYmxlc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwibGV0cmFzLWVubGFjZXNcIj5BY2Nlc29yaW9zIHkgQ29uc3VtaWJsZXM8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi92ZW50YS1mdW5kYXMtaGFuZGhlbGQtaW1wcmVzb3JhLXBvcnRhdGlsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJsZXRyYXMtZW5sYWNlc1wiPkZ1bmRhczwvYT5cbiAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9EU0QtdmVudGEtZW4tcnV0YVwiPlxuICAgICAgICAgICAgICAgICAgICA8VGl0dWxvc0hlYWRlciBjbGFzc05hbWU9XCJlbmxhY2VzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgU29sdWNpw7NuIERTRFxuICAgICAgICAgICAgICAgICAgICA8L1RpdHVsb3NIZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3ZlbnRhLWZ1bmRhcy1oYW5kaGVsZC1pbXByZXNvcmEtcG9ydGF0aWxcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiPlxuICAgICAgICAgICAgICAgICAgICAgIEZ1bmRhc1xuICAgICAgICAgICAgICAgICAgICA8L1RpdHVsb3NIZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2ltcHJlc2lvbi1jcmVkZW5jaWFsZXMtdGFyamV0YXMtZ2FmZXRlcy1wdmNcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiPlxuICAgICAgICAgICAgICAgICAgICBJbXByZXNpw7NuIGRlIGNyZWRlbmNpYWxlc1xuICAgICAgICAgICAgICAgICAgICA8L1RpdHVsb3NIZWFkZXI+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICA8VGl0dWxvc0hlYWRlclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJlbmxhY2VzXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17YWJyaXJNb2RhbFByb21vY2lvbmVzfVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBQcm9tb2Npb25lc1xuICAgICAgICAgICAgICAgICAgPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXIgY2xhc3NOYW1lPVwiZW5sYWNlc1wiIG9uQ2xpY2s9e2FicmlyTW9kYWx9PlxuICAgICAgICAgICAgICAgICAgICBBbnVuY2lvc1xuICAgICAgICAgICAgICAgICAgPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgPFRpdHVsb3NIZWFkZXJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZW5sYWNlc1wiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e1JlZGlyaWdpckNvbnRhY3RvfVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBDb250YWN0b1xuICAgICAgICAgICAgICAgICAgPC9UaXR1bG9zSGVhZGVyPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgIDwvUGVzdGFuYXNMaXN0YT5cbiAgICAgICAgICAgIDwvUGVzdGFuYXM+XG4gICAgICAgICAgICA8L01lbnU+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxNb2RhbFxuICAgICAgICAgIHNob3c9e2FiaWVydG9BbnVuY2lvc31cbiAgICAgICAgICBvbkhpZGU9e2NlcnJhck1vZGFsfVxuICAgICAgICAgIGtleWJvYXJkPXtmYWxzZX1cbiAgICAgICAgICBzaXplPVwibGdcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWFsdHVyYVwiXG4gICAgICAgID5cbiAgICAgICAgICA8TW9kYWwuSGVhZGVyIGNsb3NlQnV0dG9uPlxuICAgICAgICAgICAgPE1vZGFsLlRpdGxlPiBQcm9tb2Npb25lczwvTW9kYWwuVGl0bGU+XG4gICAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XG4gICAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgICA8Q2Fyb3VzZWw+XG4gICAgICAgICAgICAgIDxDYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImQtYmxvY2sgdy0xMDBcIlxuICAgICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9pbXByZXNvcmFfSU1aMzIwLndlYnBcIlxuICAgICAgICAgICAgICAgICAgYWx0PVwiUmVudGEgZGUgSW1wcmVzb3JhIElNWjMyMFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9DYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICA8Q2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkLWJsb2NrIHctMTAwXCJcbiAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvSU1BR0VOX1pFQlJBX0JBTk5FUl84MDBYNTAwX2x5cW5wdS53ZWJwXCJcbiAgICAgICAgICAgICAgICAgIGFsdD1cIlplYnJhIEhhbmQgSGVsZCBJbXByZXNvcmFzIExlY3RvcmVzXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0Nhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgIDxDYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICAgIDxQdW50ZXJvIG9uQ2xpY2s9e1JlZGlyaWdpcn0+XG4gICAgICAgICAgICAgICAgICA8SW1nTW9kYWxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZC1ibG9jayBcIlxuICAgICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL0NvcGlhX2RlX3DDs2xpemFzX3JlcGFyYWNpw7NuX3NnMHhpbS53ZWJwXCJcbiAgICAgICAgICAgICAgICAgICAgYWx0PVwiUG9saXphcyBkZSByZXBhcmFjaW9uIGhhbmRoZWxkIGltcHJlc29yYXMgZGUgZXRpcXVldGFzIHkgbGVjdG9yZXNcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L1B1bnRlcm8+XG4gICAgICAgICAgICAgIDwvQ2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgPENhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNsaWNrc1wiXG4gICAgICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyMzA5ODAxNC9iYW5uZXIvcHVibGljYWNpJUMzJUIzbl9udWV2b19sYW56YW1pZW50b19lYzUwX3lfZWM1NV9mbXduaHoucG5nXCJcbiAgICAgICAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8SW1nTW9kYWxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZC1ibG9jayBcIlxuICAgICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL0NvcGlhX2RlX2VjNTBfeV9lYzU1X2VuX3dlYl9reXg2bXAud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cIlplYnJhIEVDNTAgRUM1NVwiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9DYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICA8Q2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgICA8SW1nTW9kYWxcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImQtYmxvY2sgXCJcbiAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvSU1BR0VOX1pFQlJBX0JBTk5FUl84MDBYNTAwX3ZyNnAxZC53ZWJwXCJcbiAgICAgICAgICAgICAgICAgIGFsdD1cIlplYnJhIEhhbmQgSGVsZCBJbXByZXNvcmFzIExlY3RvcmVzXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0Nhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgIDxDYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICAgIDxQdW50ZXJvXG4gICAgICAgICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vZGloYXdxcm50L2ltYWdlL3VwbG9hZC92MTYyMzA5ODAxMi9iYW5uZXIvRURBNjFLX0ZCX28yb2JvZC5wbmdcIlxuICAgICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxJbWdNb2RhbFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkLWJsb2NrIFwiXG4gICAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvRURBNjFLX1dFQl9sdXFuZnMud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cIkhhbmQgSGVsZCBFREE2MUsgWmVicmFcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L1B1bnRlcm8+XG4gICAgICAgICAgICAgIDwvQ2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgPENhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgICAgPFB1bnRlcm9cbiAgICAgICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9kaWhhd3FybnQvaW1hZ2UvdXBsb2FkL3YxNjIzMDk4MDEwL2Jhbm5lci9jazY1X0ZCXzFfcmo4ejN1LnBuZ1wiXG4gICAgICAgICAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgICAgICAgICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPEltZ01vZGFsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImQtYmxvY2sgXCJcbiAgICAgICAgICAgICAgICAgICAgc3JjPVwiL2ltZy9DSzY1X1dFQl9sOWFrbTMud2VicFwiXG4gICAgICAgICAgICAgICAgICAgIGFsdD1cIkhhbmQgSGVsZCBDSzY1IFplYnJhXCJcbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9QdW50ZXJvPlxuICAgICAgICAgICAgICA8L0Nhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICA8L0Nhcm91c2VsPlxuICAgICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgICA8TW9kYWwuRm9vdGVyPlxuICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwibGlnaHRcIiBvbkNsaWNrPXtjZXJyYXJNb2RhbH0+XG4gICAgICAgICAgICAgIENlcnJhclxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICAgIDwvTW9kYWw+XG5cbiAgICAgICAgPE1vZGFsXG4gICAgICAgICAgc2hvdz17YWJpZXJ0b1Byb21vY2lvbmVzfVxuICAgICAgICAgIG9uSGlkZT17Y2VycmFyTW9kYWxQcm9tb2Npb25lc31cbiAgICAgICAgICBrZXlib2FyZD17ZmFsc2V9XG4gICAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJtb2RhbC1hbHR1cmFcIlxuICAgICAgICA+XG4gICAgICAgICAgPE1vZGFsLkhlYWRlciBjbG9zZUJ1dHRvbj5cbiAgICAgICAgICAgIDxNb2RhbC5UaXRsZT5Qcm9tb2Npb25lczwvTW9kYWwuVGl0bGU+XG4gICAgICAgICAgPC9Nb2RhbC5IZWFkZXI+XG4gICAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgICA8Q2Fyb3VzZWw+XG4gICAgICAgICAgICA8Q2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkLWJsb2NrIHctMTAwXCJcbiAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvUHJvbW9jacOzbl9tYzkwOTBfZnVuY2lvbmFsX3BvODNzay53ZWJwXCJcbiAgICAgICAgICAgICAgICAgIGFsdD1cIkhhbmQgSGVsZCBNQzkwOTBcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvQ2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgPENhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZC1ibG9jayB3LTEwMFwiXG4gICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL2N1cG9uYmFubmVyLndlYnBcIlxuICAgICAgICAgICAgICAgICAgYWx0PVwiSGFuZCBIZWxkIE1DOTE5MFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9DYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICA8Q2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkLWJsb2NrIHctMTAwXCJcbiAgICAgICAgICAgICAgICAgIHNyYz1cIi9pbWcvUHJvbW9jacOzbl9NQzkxOTBfc3JpY2I2LndlYnBcIlxuICAgICAgICAgICAgICAgICAgYWx0PVwiSGFuZCBIZWxkIE1DOTE5MFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9DYXJvdXNlbC5JdGVtPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgPENhcm91c2VsLkl0ZW0+XG4gICAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZC1ibG9jayB3LTEwMFwiXG4gICAgICAgICAgICAgICAgICBzcmM9XCIvaW1nL0NvcGlhX2RlX3Byb21vY2nDs25fcmVkaW1lbnNpw7NuX3dlYl90Z3ZyZnAud2VicFwiXG4gICAgICAgICAgICAgICAgICBhbHQ9XCJIYW5kIEhlbGQgSW50ZXJtZWMgSG9uZXl3ZWxsIENONTFcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvQ2Fyb3VzZWwuSXRlbT5cbiAgICAgICAgICAgIDwvQ2Fyb3VzZWw+XG4gICAgICAgICAgPC9Nb2RhbC5Cb2R5PlxuICAgICAgICAgIDxNb2RhbC5Gb290ZXI+XG4gICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJsaWdodFwiIG9uQ2xpY2s9e2NlcnJhck1vZGFsUHJvbW9jaW9uZXN9PlxuICAgICAgICAgICAgICBDZXJyYXJcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvTW9kYWwuRm9vdGVyPlxuICAgICAgICA8L01vZGFsPlxuICAgICAgPC9zZWN0aW9uPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const NumeroResponsive = _styled(\"a\", false ? {\n    target: \"ea6yc6s10\"\n  } : {\n    target: \"ea6yc6s10\",\n    label: \"NumeroResponsive\"\n  })(false ? {\n    name: \"knfnx4\",\n    styles: \"margin-top:0px;margin-bottom:10px;@media (max-width: 781px){width:44%;font-size:13px!important;}@media (max-width: 540px){width:45%;font-size:11px!important;}@media (max-width: 450px){width:46%;font-size:9px!important;}\"\n  } : {\n    name: \"knfnx4\",\n    styles: \"margin-top:0px;margin-bottom:10px;@media (max-width: 781px){width:44%;font-size:13px!important;}@media (max-width: 540px){width:45%;font-size:11px!important;}@media (max-width: 450px){width:46%;font-size:9px!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const BotonCorreo = _styled(\"a\", false ? {\n    target: \"ea6yc6s9\"\n  } : {\n    target: \"ea6yc6s9\",\n    label: \"BotonCorreo\"\n  })(false ? {\n    name: \"4y5ajl\",\n    styles: \"text-align:center;font-size:17px;height:38px;width:64%;margin:0px auto;font-weight:bold;@media (max-width: 1950px){font-size:16px!important;}\"\n  } : {\n    name: \"4y5ajl\",\n    styles: \"text-align:center;font-size:17px;height:38px;width:64%;margin:0px auto;font-weight:bold;@media (max-width: 1950px){font-size:16px!important;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const BotonCorreoResponsive = _styled(\"a\", false ? {\n    target: \"ea6yc6s8\"\n  } : {\n    target: \"ea6yc6s8\",\n    label: \"BotonCorreoResponsive\"\n  })(false ? {\n    name: \"9x144n\",\n    styles: \"text-align:center;font-size:17px;height:38px;width:64%;margin:0px auto;font-weight:bold;@media (max-width: 781px){width:43%;font-size:13px!important;height:32px;}@media (max-width: 540px){width:39%;font-size:11px!important;}@media (max-width: 450px){width:40%;font-size:9px!important;height:26px;}\"\n  } : {\n    name: \"9x144n\",\n    styles: \"text-align:center;font-size:17px;height:38px;width:64%;margin:0px auto;font-weight:bold;@media (max-width: 781px){width:43%;font-size:13px!important;height:32px;}@media (max-width: 540px){width:39%;font-size:11px!important;}@media (max-width: 450px){width:40%;font-size:9px!important;height:26px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Direccion = _styled(\"p\", false ? {\n    target: \"ea6yc6s7\"\n  } : {\n    target: \"ea6yc6s7\",\n    label: \"Direccion\"\n  })(false ? {\n    name: \"dj70dl\",\n    styles: \"font-size:14px;padding-top:11px;text-align:center;width:100%;margin:0px auto;@media (max-width: 1950px){font-size:14px;}\"\n  } : {\n    name: \"dj70dl\",\n    styles: \"font-size:14px;padding-top:11px;text-align:center;width:100%;margin:0px auto;@media (max-width: 1950px){font-size:14px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Menu = _styled(\"div\", false ? {\n    target: \"ea6yc6s6\"\n  } : {\n    target: \"ea6yc6s6\",\n    label: \"Menu\"\n  })(false ? {\n    name: \"1f060qn\",\n    styles: \"height:37px;background-color:black;padding-top:5px;@media (max-width: 1950px){height:30px;padding-top:3px;}\"\n  } : {\n    name: \"1f060qn\",\n    styles: \"height:37px;background-color:black;padding-top:5px;@media (max-width: 1950px){height:30px;padding-top:3px;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const MenuRes = _styled(\"div\", false ? {\n    target: \"ea6yc6s5\"\n  } : {\n    target: \"ea6yc6s5\",\n    label: \"MenuRes\"\n  })(false ? {\n    name: \"gocyy4\",\n    styles: \"height:37px;background-color:black;padding-top:5px\"\n  } : {\n    name: \"gocyy4\",\n    styles: \"height:37px;background-color:black;padding-top:5px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Pestanas = _styled(\"nav\", false ? {\n    target: \"ea6yc6s4\"\n  } : {\n    target: \"ea6yc6s4\",\n    label: \"Pestanas\"\n  })(false ? {\n    name: \"1jy3mis\",\n    styles: \"justify-content:center;margin-top:-4px;max-height:36px\"\n  } : {\n    name: \"1jy3mis\",\n    styles: \"justify-content:center;margin-top:-4px;max-height:36px\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const PestanasLista = _styled(\"ul\", false ? {\n    target: \"ea6yc6s3\"\n  } : {\n    target: \"ea6yc6s3\",\n    label: \"PestanasLista\"\n  })(false ? {\n    name: \"e6190o\",\n    styles: \"display:flex;height:37px;justify-content:center;text-decoration:none;list-style:none\"\n  } : {\n    name: \"e6190o\",\n    styles: \"display:flex;height:37px;justify-content:center;text-decoration:none;list-style:none\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const Puntero = _styled(\"a\", false ? {\n    target: \"ea6yc6s2\"\n  } : {\n    target: \"ea6yc6s2\",\n    label: \"Puntero\"\n  })(false ? {\n    name: \"e0dnmk\",\n    styles: \"cursor:pointer\"\n  } : {\n    name: \"e0dnmk\",\n    styles: \"cursor:pointer\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const ImgModal = _styled(\"img\", false ? {\n    target: \"ea6yc6s1\"\n  } : {\n    target: \"ea6yc6s1\",\n    label: \"ImgModal\"\n  })(false ? {\n    name: \"16na1d5\",\n    styles: \"max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important\"\n  } : {\n    name: \"16na1d5\",\n    styles: \"max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const TitulosHeader = _styled(\"p\", false ? {\n    target: \"ea6yc6s0\"\n  } : {\n    target: \"ea6yc6s0\",\n    label: \"TitulosHeader\"\n  })(false ? {\n    name: \"1u81noh\",\n    styles: \"margin-top:0px!important\"\n  } : {\n    name: \"1u81noh\",\n    styles: \"margin-top:0px!important\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  const size = useWindowSize();\n  const {\n    0: abiertoAnuncios,\n    1: cambiarAbiertoAnuncios\n  } = useState(false);\n  const {\n    0: abiertoPromociones,\n    1: cambiarPromociones\n  } = useState(false);\n\n  const abrirModal = () => {\n    cambiarAbiertoAnuncios(true);\n  };\n\n  const cerrarModal = () => {\n    cambiarAbiertoAnuncios(false);\n  };\n\n  const abrirModalPromociones = () => {\n    cambiarPromociones(true);\n  };\n\n  const cerrarModalPromociones = () => {\n    cambiarPromociones(false);\n  };\n\n  const Redirigir = e => {\n    e.preventDefault();\n    cambiarAbiertoAnuncios(false);\n    document.location.href = \"/#reparacion\";\n  };\n\n  const RedirigirContacto = e => {\n    e.preventDefault();\n    cambiarAbiertoAnuncios(false);\n    document.location.href = \"/#contacto\";\n    Router.push(\"#home\");\n  };\n\n  const RedirigirIMG = e => {\n    e.preventDefault();\n    cambiarAbiertoAnuncios(false);\n    document.location.href = \"/#puntoa\";\n    Router.push(\"#home\");\n  };\n\n  const RedirigirInicio = e => {\n    e.preventDefault();\n    cambiarAbiertoAnuncios(false);\n    document.location.href = \"/#puntoa\";\n    Router.push(\"#home\");\n  };\n\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"link\", {\n    rel: \"stylesheet preload\",\n    as: \"style\",\n    href: \"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\",\n    integrity: \"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\",\n    crossOrigin: \"anonymous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  })), ___EmotionJSX(\"span\", {\n    id: \"puntoa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }), ___EmotionJSX(\"section\", {\n    id: \"header\",\n    className: \"sticky-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"div\", {\n    id: \"headerdos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Bienvenido, {\n    className: \"justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"divBienvenido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(TextoBienvenido, {\n    id: \"welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, \"Bienvenido a Hand Held Solutions\")), ___EmotionJSX(SocialMedia, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(\"div\", {\n    id: \"wa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://wa.me/message/KZSHX5FOWASGF1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(LogoRedes, {\n    className: \"redes\",\n    src: \"/img/whats_lstqed.webp\",\n    alt: \"logo whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 19\n    }\n  }))), ___EmotionJSX(\"div\", {\n    id: \"fb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://www.facebook.com/HandHeldSolutionsOficial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(LogoRedes, {\n    className: \"redes\",\n    src: \"/img/2_rr6fgz.webp\",\n    alt: \"logo facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }))), ___EmotionJSX(\"div\", {\n    id: \"in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://www.linkedin.com/company/handheldsolutions/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(LogoRedes, {\n    className: \"redes\",\n    src: \"/img/in_wfa2x2.webp\",\n    alt: \"logo linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 19\n    }\n  }))), ___EmotionJSX(\"div\", {\n    id: \"yt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://www.youtube.com/channel/UCjVPKTVVs0N-oVpuLizEFaw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(LogoRedesYT, {\n    className: \"redes\",\n    src: \"/img/youtube_o75y4f.webp\",\n    alt: \"logo youtube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 19\n    }\n  }))))), ___EmotionJSX(HeaderContacto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"separacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"a\", {\n    onClick: RedirigirIMG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(Logo, {\n    src: \"/img/LOGO-HHS.webp\",\n    alt: \"Logo hand held solutions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 19\n    }\n  }))), size < 991 ? ___EmotionJSX(\"div\", {\n    className: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"haber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(Llamanos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 21\n    }\n  }, \"\\xA1Ll\\xE1manos!\"), ___EmotionJSX(NumeroResponsive, {\n    className: \"btn btn-primary\",\n    role: \"button\",\n    href: \"tel: (55) 7599 6272\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 23\n    }\n  }, \"(55) 7599 6272\"))), ___EmotionJSX(BotonCorreoResponsive, {\n    className: \"btn btn-primary btn-block b-cont\",\n    href: \"#contacto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  }, \"contacto@handheldsolutions.com.mx\"))) : ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"div\", {\n    className: \"llamanos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(Llamanos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 21\n    }\n  }, \"\\xA1Ll\\xE1manos!\"), ___EmotionJSX(Numero, {\n    className: \"btn btn-primary numno\",\n    role: \"button\",\n    href: \"tel:(55) 7599 6272\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 23\n    }\n  }, \"(55) 7599 6272\"))), ___EmotionJSX(\"div\", {\n    className: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(BotonCorreo, {\n    href: \"#contacto\",\n    className: \"btn btn-primary btn-block b-cont tam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 23\n    }\n  }, \"contacto@handheldsolutions.com.mx\")), ___EmotionJSX(Direccion, {\n    className: \"le\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 23\n    }\n  }, \"Calle. Palenque,\\xA0Col. Letr\\xE1n Valle, Alcald\\xEDa Benito Ju\\xE1rez\"), ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 23\n    }\n  }), ___EmotionJSX(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 23\n    }\n  }, \"\\xA0CDMX, C.P. 03650, M\\xE9xico\"), ___EmotionJSX(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 23\n    }\n  })))))), size < 800 ? ___EmotionJSX(TarjetaDos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 25\n    }\n  }) : ___EmotionJSX(Tarjeta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 42\n    }\n  }), size < 995 ? ___EmotionJSX(MenuRes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Navbar, {\n    collapseOnSelect: true,\n    expand: \"xxl\",\n    bg: \"dark\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Navbar.Toggle, {\n    \"aria-controls\": \"responsive-navbar-nav\",\n    className: \"navbau\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }), ___EmotionJSX(Navbar.Collapse, {\n    id: \"responsive-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(Nav.Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }, \"Inicio\"), ___EmotionJSX(NavDropdown, {\n    title: \"Renta\",\n    id: \"basic-nav-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(NavDropdown.Item, {\n    href: \"renta-de-handhelds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 23\n    }\n  }, \"Handhelds\"), ___EmotionJSX(NavDropdown.Item, {\n    href: \"renta-de-impresoras-de-etiquetas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 23\n    }\n  }, \"Impresoras\"), ___EmotionJSX(NavDropdown.Item, {\n    href: \"renta-de-lectores-de-codigos-de-barras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 23\n    }\n  }, \"Lectores\")), ___EmotionJSX(NavDropdown, {\n    title: \"Reparaci\\xF3n\",\n    id: \"basic-nav-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(NavDropdown.Item, {\n    href: \"reparacion-de-handhelds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 23\n    }\n  }, \"Handhelds\"), ___EmotionJSX(NavDropdown.Item, {\n    href: \"reparacion-de-impresoras-de-etiquetas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 23\n    }\n  }, \"Impresoras\"), ___EmotionJSX(NavDropdown.Item, {\n    href: \"reparacion-de-lectores-de-codigos-de-barras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 23\n    }\n  }, \"Lectores\")), ___EmotionJSX(NavDropdown, {\n    title: \"Venta\",\n    id: \"basic-nav-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(NavDropdown.Item, {\n    href: \"venta-de-handhelds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 23\n    }\n  }, \"Handhelds\"), ___EmotionJSX(NavDropdown.Item, {\n    href: \"venta-de-impresoras-de-etiquetas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 23\n    }\n  }, \"Impresoras\"), ___EmotionJSX(NavDropdown.Item, {\n    href: \"venta-de-lectores-de-codigos-de-barras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 23\n    }\n  }, \"Lectores\"), ___EmotionJSX(NavDropdown.Item, {\n    href: \"venta-de-accesorios-y-consumibles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 23\n    }\n  }, \"Accesorios y Consumibles\"), ___EmotionJSX(NavDropdown.Item, {\n    href: \"venta-fundas-handheld-impresora-portatil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 23\n    }\n  }, \"Fundas\")), ___EmotionJSX(Nav.Link, {\n    href: \"/DSD-venta-en-ruta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 21\n    }\n  }, \"Soluci\\xF3n DSD\"), ___EmotionJSX(Nav.Link, {\n    href: \"/venta-fundas-handheld-impresora-portatil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 21\n    }\n  }, \"Fundas\"), ___EmotionJSX(Nav.Link, {\n    href: \"/impresion-credenciales-tarjetas-gafetes-pvc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 21\n    }\n  }, \"Impresi\\xF3n de credenciales\"), ___EmotionJSX(Nav.Link, {\n    href: \"/impresion-etiquetas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 21\n    }\n  }, \"Impresi\\xF3n de etiquetas\"), ___EmotionJSX(Nav, {\n    className: \"responmenu\",\n    onClick: abrirModalPromociones,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  }, \"Promociones\"), ___EmotionJSX(Nav, {\n    className: \"responmenu\",\n    onClick: abrirModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 21\n    }\n  }, \"Anuncios\"), ___EmotionJSX(Nav, {\n    className: \"responmenu\",\n    onClick: RedirigirContacto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 21\n    }\n  }, \"Contacto\"))))) : ___EmotionJSX(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Pestanas, {\n    id: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(PestanasLista, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    onClick: RedirigirInicio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 19\n    }\n  }, \"Inicio\")), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 19\n    }\n  }, \"Renta\"), ___EmotionJSX(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/renta-de-handhelds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 25\n    }\n  }, \"Handhelds\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/renta-de-impresoras-de-etiquetas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 25\n    }\n  }, \"Impresoras\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/renta-de-lectores-de-codigos-de-barras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 25\n    }\n  }, \"Lectores\"))))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 19\n    }\n  }, \"Reparaci\\xF3n\"), ___EmotionJSX(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/reparacion-de-handhelds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 25\n    }\n  }, \"Handhelds\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/reparacion-de-impresoras-de-etiquetas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 25\n    }\n  }, \"Impresoras\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/reparacion-de-lectores-de-codigos-de-barras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 25\n    }\n  }, \"Lectores\"))))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 19\n    }\n  }, \"Venta\"), ___EmotionJSX(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/venta-de-handhelds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 25\n    }\n  }, \"Handhelds\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/venta-de-impresoras-de-etiquetas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 25\n    }\n  }, \"Impresoras\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/venta-de-lectores-de-codigos-de-barras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 25\n    }\n  }, \"Lectores\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/venta-de-accesorios-y-consumibles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 25\n    }\n  }, \"Accesorios y Consumibles\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 21\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/venta-fundas-handheld-impresora-portatil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 23\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"letras-enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 25\n    }\n  }, \"Fundas\"))))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/DSD-venta-en-ruta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 21\n    }\n  }, \"Soluci\\xF3n DSD\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/venta-fundas-handheld-impresora-portatil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 21\n    }\n  }, \"Fundas\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(Link, {\n    href: \"/impresion-credenciales-tarjetas-gafetes-pvc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 19\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 21\n    }\n  }, \"Impresi\\xF3n de credenciales\"))), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    onClick: abrirModalPromociones,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 19\n    }\n  }, \"Promociones\")), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    onClick: abrirModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 19\n    }\n  }, \"Anuncios\")), ___EmotionJSX(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(TitulosHeader, {\n    className: \"enlaces\",\n    onClick: RedirigirContacto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 19\n    }\n  }, \"Contacto\")))))), ___EmotionJSX(Modal, {\n    show: abiertoAnuncios,\n    onHide: cerrarModal,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 13\n    }\n  }, \" Promociones\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Carousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/impresora_IMZ320.webp\",\n    alt: \"Renta de Impresora IMZ320\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }\n  })), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/IMAGEN_ZEBRA_BANNER_800X500_lyqnpu.webp\",\n    alt: \"Zebra Hand Held Impresoras Lectores\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  })), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(Puntero, {\n    onClick: Redirigir,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/Copia_de_p\\xF3lizas_reparaci\\xF3n_sg0xim.webp\",\n    alt: \"Polizas de reparacion handheld impresoras de etiquetas y lectores\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 19\n    }\n  }))), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"a\", {\n    className: \"clicks\",\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098014/banner/publicaci%C3%B3n_nuevo_lanzamiento_ec50_y_ec55_fmwnhz.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/Copia_de_ec50_y_ec55_en_web_kyx6mp.webp\",\n    alt: \"Zebra EC50 EC55\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 19\n    }\n  }))), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/IMAGEN_ZEBRA_BANNER_800X500_vr6p1d.webp\",\n    alt: \"Zebra Hand Held Impresoras Lectores\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 17\n    }\n  })), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(Puntero, {\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098012/banner/EDA61K_FB_o2obod.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/EDA61K_WEB_luqnfs.webp\",\n    alt: \"Hand Held EDA61K Zebra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 19\n    }\n  }))), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(Puntero, {\n    href: \"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098010/banner/ck65_FB_1_rj8z3u.png\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 17\n    }\n  }, ___EmotionJSX(ImgModal, {\n    className: \"d-block \",\n    src: \"/img/CK65_WEB_l9akm3.webp\",\n    alt: \"Hand Held CK65 Zebra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 19\n    }\n  }))))), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 13\n    }\n  }, \"Cerrar\"))), ___EmotionJSX(Modal, {\n    show: abiertoPromociones,\n    onHide: cerrarModalPromociones,\n    keyboard: false,\n    size: \"lg\",\n    className: \"modal-altura\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 13\n    }\n  }, \"Promociones\")), ___EmotionJSX(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Carousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 13\n    }\n  }, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/Promoci\\xF3n_mc9090_funcional_po83sk.webp\",\n    alt: \"Hand Held MC9090\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 17\n    }\n  })), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/cuponbanner.webp\",\n    alt: \"Hand Held MC9190\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 17\n    }\n  })), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/Promoci\\xF3n_MC9190_sricb6.webp\",\n    alt: \"Hand Held MC9190\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 17\n    }\n  })), ___EmotionJSX(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 15\n    }\n  }, ___EmotionJSX(\"img\", {\n    className: \"d-block w-100\",\n    src: \"/img/Copia_de_promoci\\xF3n_redimensi\\xF3n_web_tgvrfp.webp\",\n    alt: \"Hand Held Intermec Honeywell CN51\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 17\n    }\n  })))), ___EmotionJSX(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 11\n    }\n  }, ___EmotionJSX(Button, {\n    variant: \"light\",\n    onClick: cerrarModalPromociones,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 13\n    }\n  }, \"Cerrar\")))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/Crist/Desktop/HHS-20211123T184355Z-001/HHS/components/layout/Header.js"],"names":["React","useState","Link","Head","Tarjeta","TarjetaDos","Modal","Carousel","Button","Navbar","Nav","NavDropdown","Item","Router","useWindowSize","Header","Bienvenido","TextoBienvenido","SocialMedia","LogoRedes","LogoRedesYT","HeaderContacto","Logo","Llamanos","Numero","NumeroResponsive","BotonCorreo","BotonCorreoResponsive","Direccion","Menu","MenuRes","Pestanas","PestanasLista","Puntero","ImgModal","TitulosHeader","size","abiertoAnuncios","cambiarAbiertoAnuncios","abiertoPromociones","cambiarPromociones","abrirModal","cerrarModal","abrirModalPromociones","cerrarModalPromociones","Redirigir","e","preventDefault","document","location","href","RedirigirContacto","push","RedirigirIMG","RedirigirInicio"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport Tarjeta from \"../layout/Tarjeta\";\nimport TarjetaDos from \"../layout/TarjetaDos\";\nimport { Modal, Carousel, Button, Navbar, Nav, NavDropdown, Item } from \"react-bootstrap\";\nimport Router from \"next/router\";\n\nimport useWindowSize from \"../../hooks/useWindowSize\";\n\nconst Header = () => {\n  const Bienvenido = styled.div`\n    min-width: 100% !important;\n    background-color: #0076c0;\n    display: flex;\n    padding-top: 11px;\n  `;\n\n  const TextoBienvenido = styled.h1`\n    color: white;\n    font-size: 25px;\n    font-weight: bold;\n    margin-left: 25px;\n    margin-top: 4px;\n    font-family: \"Raleway\", sans-serif;\n\n    @media (max-width: 1950px) {\n        font-size: 19px;\n    }\n\n    @media (max-width: 881px) {\n      margin-top: 0px;\n    }\n  `;\n\n  const SocialMedia = styled.div`\n    height: 100%;\n    display: flex;\n    margin-bottom: 10px;\n\n    @media (max-width: 481px) {\n      margin-bottom: 0px;\n    }\n\n    @media (max-width: 428px) {\n      margin-bottom: 8px;\n    }\n  `;\n\n  const LogoRedes = styled.img`\n    width: 40px;\n    height: 40px;\n    margin-right: 25px;\n\n    @media (max-width: 1950px) {\n        width: 25px;\n        height: 25px;\n    }\n  `;\n\n  const LogoRedesYT = styled.img`\n    width: 50px;\n    height: 40px;\n    margin-right: 25px;\n\n    @media (max-width: 1950px) {\n        width: 30px;\n        height: 25px;\n    }\n  `;\n\n  const HeaderContacto = styled.div`\n    background-color: white;\n    min-width: 100% !important;\n  `;\n\n  const Logo = styled.img`\n    height: 93px;\n\n    @media (max-width: 1950px) {\n        height: 96px;\n    }\n\n    @media (max-width: 450px) {\n      height: 80px;\n    }\n\n    @media (max-width: 350px) {\n      height: 65px;\n    }\n  `;\n\n  const Llamanos = styled.p`\n    font-size: 20px;\n    color: black;\n    font-weight: bold;\n    text-align: center;\n    padding-top: 5px;\n\n    @media (max-width: 1950px) {\n        font-size: 18px;\n        padding-top: 0px;\n    }\n\n    @media (max-width: 991px) {\n      margin-right: 11px;\n      margin-left: 32px;\n    }\n\n    @media (max-width: 781px) {\n      font-size: 18px;\n      margin-right: 11px;\n      margin-left: 22px;\n    }\n\n    @media (max-width: 450px) {\n      font-size: 12px;\n      margin-right: 5px;\n      margin-left: 19px;\n    }\n\n    @media (max-width: 300px) {\n      margin-right: 5px;\n      margin-left: 0px;\n    }\n  `;\n\n  const Numero = styled.a`\n    margin-top: -15px;\n    \n  `;\n\n  const NumeroResponsive = styled.a`\n    margin-top: 0px;\n    margin-bottom: 10px;\n\n    @media (max-width: 781px) {\n      width: 44%;\n      font-size: 13px !important;\n    }\n\n    @media (max-width: 540px) {\n      width: 45%;\n      font-size: 11px !important;\n    }\n\n    @media (max-width: 450px) {\n      width: 46%;\n      font-size: 9px !important;\n    }\n  `;\n\n  const BotonCorreo = styled.a`\n    text-align: center;\n    font-size: 17px;\n    height: 38px;\n    width: 64%;\n    margin: 0px auto;\n    font-weight: bold;\n\n    @media (max-width: 1950px) {\n        font-size: 16px !important;\n    }\n  `;\n\n  const BotonCorreoResponsive = styled.a`\n    text-align: center;\n    font-size: 17px;\n    height: 38px;\n    width: 64%;\n    margin: 0px auto;\n    font-weight: bold;\n\n    @media (max-width: 781px) {\n      width: 43%;\n      font-size: 13px !important;\n      height: 32px;\n    }\n\n    @media (max-width: 540px) {\n      width: 39%;\n      font-size: 11px !important;\n    }\n\n    @media (max-width: 450px) {\n      width: 40%;\n      font-size: 9px !important;\n      height: 26px;\n    }\n  `;\n\n  const Direccion = styled.p`\n    font-size: 14px;\n    padding-top: 11px;\n    text-align: center;\n    width: 100%;\n    margin: 0px auto;\n\n    @media (max-width: 1950px) {\n      font-size: 14px;\n    }\n  `;\n\n  const Menu = styled.div`\n    height: 37px;\n    background-color: black;\n    padding-top: 5px;\n\n    @media (max-width: 1950px) {\n      height: 30px;\n      padding-top: 3px;\n    }\n\n  `;\n\n  const MenuRes = styled.div`\n    height: 37px;\n    background-color: black;\n    padding-top: 5px;\n  `;\n\n  const Pestanas = styled.nav`\n    justify-content: center;\n    margin-top: -4px;\n    max-height: 36px;\n  `;\n\n  const PestanasLista = styled.ul`\n    display: flex;\n    height: 37px;\n    justify-content: center;\n    text-decoration: none;\n    list-style: none;\n  `;\n\n  const Puntero = styled.a`\n    cursor: pointer;\n  `;\n\n  const ImgModal = styled.img`\n    max-width: 100% !important;\n    min-width: 100% !important;\n    max-height: 100% !important;\n    min-height: 100% !important;\n  `;\n\n  const TitulosHeader = styled.p`\n    margin-top: 0px !important;\n  `;\n\n  const size = useWindowSize();\n\n  const [abiertoAnuncios, cambiarAbiertoAnuncios] = useState(false);\n  const [abiertoPromociones, cambiarPromociones] = useState(false);\n\n  const abrirModal = () => {\n    cambiarAbiertoAnuncios(true);\n  };\n\n  const cerrarModal = () => {\n    cambiarAbiertoAnuncios(false);\n  };\n\n  const abrirModalPromociones = () => {\n    cambiarPromociones(true);\n  };\n\n  const cerrarModalPromociones = () => {\n    cambiarPromociones(false);\n  };\n\n  const Redirigir = (e) => {\n    e.preventDefault();\n\n    cambiarAbiertoAnuncios(false);\n\n    document.location.href = \"/#reparacion\";\n  };\n\n  const RedirigirContacto = (e) => {\n    e.preventDefault();\n\n    cambiarAbiertoAnuncios(false);\n\n    document.location.href = \"/#contacto\";\n\n    Router.push(\"#home\");\n  };\n\n  const RedirigirIMG = (e) => {\n    e.preventDefault();\n\n    cambiarAbiertoAnuncios(false);\n\n    document.location.href = \"/#puntoa\";\n\n    Router.push(\"#home\");\n  };\n\n  const RedirigirInicio = (e) => {\n    e.preventDefault();\n\n    cambiarAbiertoAnuncios(false);\n\n    document.location.href = \"/#puntoa\";\n\n    Router.push(\"#home\");\n  };\n\n  return (\n    <>\n      <Head>\n        <link\n          rel=\"stylesheet preload\"\n          as=\"style\"\n          href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n          integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n      <span id=\"puntoa\"></span>\n      <section id=\"header\" className=\"sticky-top\">\n        <div id=\"headerdos\">\n          <Bienvenido className=\"justify-content-between\">\n            <div className=\"divBienvenido\">\n              <TextoBienvenido id=\"welcome\">\n                Bienvenido a Hand Held Solutions\n              </TextoBienvenido>\n            </div>\n            <SocialMedia>\n              <div id=\"wa\">\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://wa.me/message/KZSHX5FOWASGF1\"\n                >\n                  <LogoRedes\n                    className=\"redes\"\n                    src=\"/img/whats_lstqed.webp\"\n                    alt=\"logo whatsapp\"\n                  />\n                </a>\n              </div>\n              <div id=\"fb\">\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://www.facebook.com/HandHeldSolutionsOficial\"\n                >\n                  <LogoRedes\n                    className=\"redes\"\n                    src=\"/img/2_rr6fgz.webp\"\n                    alt=\"logo facebook\"\n                  />\n                </a>\n              </div>\n              <div id=\"in\">\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://www.linkedin.com/company/handheldsolutions/\"\n                >\n                  <LogoRedes\n                    className=\"redes\"\n                    src=\"/img/in_wfa2x2.webp\"\n                    alt=\"logo linkedin\"\n                  />\n                </a>\n              </div>\n              <div id=\"yt\">\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://www.youtube.com/channel/UCjVPKTVVs0N-oVpuLizEFaw\"\n                >\n                  <LogoRedesYT\n                    className=\"redes\"\n                    src=\"/img/youtube_o75y4f.webp\"\n                    alt=\"logo youtube\"\n                  />\n                </a>\n              </div>\n            </SocialMedia>\n          </Bienvenido>\n          <HeaderContacto>\n            <div className=\"separacion\">\n              <div>\n                <a onClick={RedirigirIMG}>\n                  <Logo\n                    src=\"/img/LOGO-HHS.webp\"\n                    alt=\"Logo hand held solutions\"\n                  />\n                </a>\n              </div>\n              {size < 991 ? (\n                <div className=\"address\">\n                  <div className=\"haber\">\n                    <Llamanos>¡Llámanos!</Llamanos>\n                    <NumeroResponsive\n                      className=\"btn btn-primary\"\n                      role=\"button\"\n                      href=\"tel: (55) 7599 6272\"\n                    >\n                      <strong>(55) 7599 6272</strong>\n                    </NumeroResponsive>\n                  </div>\n                  <BotonCorreoResponsive\n                    className=\"btn btn-primary btn-block b-cont\"\n                    href=\"#contacto\"\n                  >\n                    <strong>contacto@handheldsolutions.com.mx</strong>\n                  </BotonCorreoResponsive>\n                </div>\n              ) : (\n                <>\n                  <div className=\"llamanos\">\n                    <Llamanos>¡Llámanos!</Llamanos>\n                    <Numero\n                      className=\"btn btn-primary numno\"\n                      role=\"button\"\n                      href=\"tel:(55) 7599 6272\"\n                    >\n                      <strong>(55) 7599 6272</strong>\n                    </Numero>\n                  </div>\n                  <div className=\"address\">\n                    <BotonCorreo\n                      href=\"#contacto\"\n                      className=\"btn btn-primary btn-block b-cont tam\"\n                    >\n                      <strong>contacto@handheldsolutions.com.mx</strong>\n                    </BotonCorreo>\n                    <Direccion className=\"le\">\n                      <strong>\n                        Calle. Palenque,&nbsp;Col. Letrán Valle, Alcaldía Benito\n                        Juárez\n                      </strong>\n                      <br></br>\n                      <strong>&nbsp;CDMX, C.P. 03650, México</strong>\n                      <br></br>\n                    </Direccion>\n                  </div>\n                </>\n              )}\n            </div>\n          </HeaderContacto>\n          {size < 800 ? <TarjetaDos /> : <Tarjeta />}\n          \n            {size < 995 ? \n            <MenuRes>\n            <Navbar collapseOnSelect  expand='xxl' bg='dark' variant='dark' >\n                <Navbar.Toggle aria-controls='responsive-navbar-nav' className=\"navbau\"/>\n                <Navbar.Collapse id='responsive-navbar-nav'>\n                  <Nav>\n                    <Nav.Link href=\"/\">Inicio</Nav.Link>\n                    <NavDropdown title=\"Renta\" id=\"basic-nav-dropdown\" >\n                      <NavDropdown.Item href=\"renta-de-handhelds\">Handhelds</NavDropdown.Item>\n                      <NavDropdown.Item href=\"renta-de-impresoras-de-etiquetas\">Impresoras</NavDropdown.Item>\n                      <NavDropdown.Item href=\"renta-de-lectores-de-codigos-de-barras\">Lectores</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Reparación\" id=\"basic-nav-dropdown\">\n                      <NavDropdown.Item href=\"reparacion-de-handhelds\">Handhelds</NavDropdown.Item>\n                      <NavDropdown.Item href=\"reparacion-de-impresoras-de-etiquetas\">Impresoras</NavDropdown.Item>\n                      <NavDropdown.Item href=\"reparacion-de-lectores-de-codigos-de-barras\">Lectores</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Venta\" id=\"basic-nav-dropdown\">\n                      <NavDropdown.Item href=\"venta-de-handhelds\">Handhelds</NavDropdown.Item>\n                      <NavDropdown.Item href=\"venta-de-impresoras-de-etiquetas\">Impresoras</NavDropdown.Item>\n                      <NavDropdown.Item href=\"venta-de-lectores-de-codigos-de-barras\">Lectores</NavDropdown.Item>\n                      <NavDropdown.Item href=\"venta-de-accesorios-y-consumibles\">Accesorios y Consumibles</NavDropdown.Item>\n                      <NavDropdown.Item href=\"venta-fundas-handheld-impresora-portatil\">Fundas</NavDropdown.Item>\n                    </NavDropdown>\n                    \n                    <Nav.Link href=\"/DSD-venta-en-ruta\">Solución DSD</Nav.Link>\n                    <Nav.Link href=\"/venta-fundas-handheld-impresora-portatil\">Fundas</Nav.Link>\n                    <Nav.Link href=\"/impresion-credenciales-tarjetas-gafetes-pvc\">Impresión de credenciales</Nav.Link>\n                    <Nav.Link href=\"/impresion-etiquetas\">Impresión de etiquetas</Nav.Link>\n                    <Nav className=\"responmenu\" onClick={abrirModalPromociones}>Promociones</Nav>\n                    <Nav className=\"responmenu\" onClick={abrirModal}>Anuncios</Nav>\n                    <Nav className=\"responmenu\" onClick={RedirigirContacto}>Contacto</Nav>\n                  </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n          </MenuRes>\n            : \n            <Menu>\n            <Pestanas id=\"menu\">\n              <PestanasLista>\n                <li>\n                  <TitulosHeader className=\"enlaces\" onClick={RedirigirInicio}>\n                    Inicio\n                  </TitulosHeader>\n                </li>\n                <li>\n                  <TitulosHeader className=\"enlaces\">Renta</TitulosHeader>\n                  <ul>\n                    <li>\n                      <Link href=\"/renta-de-handhelds\">\n                        <a className=\"letras-enlaces\">Handhelds</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/renta-de-impresoras-de-etiquetas\">\n                        <a className=\"letras-enlaces\">Impresoras</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/renta-de-lectores-de-codigos-de-barras\">\n                        <a className=\"letras-enlaces\">Lectores</a>\n                      </Link>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <TitulosHeader className=\"enlaces\">Reparación</TitulosHeader>\n                  <ul>\n                    <li>\n                      <Link href=\"/reparacion-de-handhelds\">\n                        <a className=\"letras-enlaces\">Handhelds</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/reparacion-de-impresoras-de-etiquetas\">\n                        <a className=\"letras-enlaces\">Impresoras</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/reparacion-de-lectores-de-codigos-de-barras\">\n                        <a className=\"letras-enlaces\">Lectores</a>\n                      </Link>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <TitulosHeader className=\"enlaces\">Venta</TitulosHeader>\n                  <ul>\n                    <li>\n                      <Link href=\"/venta-de-handhelds\">\n                        <a className=\"letras-enlaces\">Handhelds</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/venta-de-impresoras-de-etiquetas\">\n                        <a className=\"letras-enlaces\">Impresoras</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/venta-de-lectores-de-codigos-de-barras\">\n                        <a className=\"letras-enlaces\">Lectores</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/venta-de-accesorios-y-consumibles\">\n                        <a className=\"letras-enlaces\">Accesorios y Consumibles</a>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link href=\"/venta-fundas-handheld-impresora-portatil\">\n                        <a className=\"letras-enlaces\">Fundas</a>\n                      </Link>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <Link href=\"/DSD-venta-en-ruta\">\n                    <TitulosHeader className=\"enlaces\">\n                      Solución DSD\n                    </TitulosHeader>\n                  </Link>\n                </li>\n                <li>\n                  <Link href=\"/venta-fundas-handheld-impresora-portatil\">\n                    <TitulosHeader className=\"enlaces\">\n                      Fundas\n                    </TitulosHeader>\n                  </Link>\n                </li>\n                <li>\n                  <Link href=\"/impresion-credenciales-tarjetas-gafetes-pvc\">\n                    <TitulosHeader className=\"enlaces\">\n                    Impresión de credenciales\n                    </TitulosHeader>\n                  </Link>\n                </li>\n                <li>\n                  <TitulosHeader\n                    className=\"enlaces\"\n                    onClick={abrirModalPromociones}\n                  >\n                    Promociones\n                  </TitulosHeader>\n                </li>\n                <li>\n                  <TitulosHeader className=\"enlaces\" onClick={abrirModal}>\n                    Anuncios\n                  </TitulosHeader>\n                </li>\n                <li>\n                  <TitulosHeader\n                    className=\"enlaces\"\n                    onClick={RedirigirContacto}\n                  >\n                    Contacto\n                  </TitulosHeader>\n                </li>\n              </PestanasLista>\n            </Pestanas>\n            </Menu>\n            }\n          \n        </div>\n\n        <Modal\n          show={abiertoAnuncios}\n          onHide={cerrarModal}\n          keyboard={false}\n          size=\"lg\"\n          className=\"modal-altura\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title> Promociones</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Carousel>\n              <Carousel.Item>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/img/impresora_IMZ320.webp\"\n                  alt=\"Renta de Impresora IMZ320\"\n                />\n              </Carousel.Item>\n              <Carousel.Item>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/img/IMAGEN_ZEBRA_BANNER_800X500_lyqnpu.webp\"\n                  alt=\"Zebra Hand Held Impresoras Lectores\"\n                />\n              </Carousel.Item>\n              <Carousel.Item>\n                <Puntero onClick={Redirigir}>\n                  <ImgModal\n                    className=\"d-block \"\n                    src=\"/img/Copia_de_pólizas_reparación_sg0xim.webp\"\n                    alt=\"Polizas de reparacion handheld impresoras de etiquetas y lectores\"\n                  />\n                </Puntero>\n              </Carousel.Item>\n              <Carousel.Item>\n                <a\n                  className=\"clicks\"\n                  href=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098014/banner/publicaci%C3%B3n_nuevo_lanzamiento_ec50_y_ec55_fmwnhz.png\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <ImgModal\n                    className=\"d-block \"\n                    src=\"/img/Copia_de_ec50_y_ec55_en_web_kyx6mp.webp\"\n                    alt=\"Zebra EC50 EC55\"\n                  />\n                </a>\n              </Carousel.Item>\n              <Carousel.Item>\n                <ImgModal\n                  className=\"d-block \"\n                  src=\"/img/IMAGEN_ZEBRA_BANNER_800X500_vr6p1d.webp\"\n                  alt=\"Zebra Hand Held Impresoras Lectores\"\n                />\n              </Carousel.Item>\n              <Carousel.Item>\n                <Puntero\n                  href=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098012/banner/EDA61K_FB_o2obod.png\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <ImgModal\n                    className=\"d-block \"\n                    src=\"/img/EDA61K_WEB_luqnfs.webp\"\n                    alt=\"Hand Held EDA61K Zebra\"\n                  />\n                </Puntero>\n              </Carousel.Item>\n              <Carousel.Item>\n                <Puntero\n                  href=\"https://res.cloudinary.com/dihawqrnt/image/upload/v1623098010/banner/ck65_FB_1_rj8z3u.png\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <ImgModal\n                    className=\"d-block \"\n                    src=\"/img/CK65_WEB_l9akm3.webp\"\n                    alt=\"Hand Held CK65 Zebra\"\n                  />\n                </Puntero>\n              </Carousel.Item>\n            </Carousel>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"light\" onClick={cerrarModal}>\n              Cerrar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal\n          show={abiertoPromociones}\n          onHide={cerrarModalPromociones}\n          keyboard={false}\n          size=\"lg\"\n          className=\"modal-altura\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Promociones</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Carousel>\n            <Carousel.Item>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/img/Promoción_mc9090_funcional_po83sk.webp\"\n                  alt=\"Hand Held MC9090\"\n                />\n              </Carousel.Item>\n              <Carousel.Item>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/img/cuponbanner.webp\"\n                  alt=\"Hand Held MC9190\"\n                />\n              </Carousel.Item>\n              <Carousel.Item>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/img/Promoción_MC9190_sricb6.webp\"\n                  alt=\"Hand Held MC9190\"\n                />\n              </Carousel.Item>\n              \n              <Carousel.Item>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/img/Copia_de_promoción_redimensión_web_tgvrfp.webp\"\n                  alt=\"Hand Held Intermec Honeywell CN51\"\n                />\n              </Carousel.Item>\n            </Carousel>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"light\" onClick={cerrarModalPromociones}>\n              Cerrar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </section>\n    </>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}