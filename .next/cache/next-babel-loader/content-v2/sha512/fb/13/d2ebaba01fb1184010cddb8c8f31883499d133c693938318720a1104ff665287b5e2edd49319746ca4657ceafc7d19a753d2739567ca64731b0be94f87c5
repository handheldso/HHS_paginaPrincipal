{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nexport const useForm = (initialState = {}) => {\n  const {\n    0: contacto,\n    1: cambiarContacto\n  } = useState(initialState);\n\n  const leerForm = e => {\n    cambiarContacto(_objectSpread(_objectSpread({}, contacto), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const sinValores = () => {\n    cambiarContacto({\n      nameUser: \"\",\n      emailUser: \"\",\n      phoneNumber: \"\",\n      company: \"\",\n      message: \"\"\n    });\n  };\n\n  const sinValoresSegundoForm = () => {\n    cambiarContacto({\n      nameUser: \"\",\n      emailUser: \"\",\n      phoneNumber: \"\",\n      company: \"\",\n      message: \"\",\n      model: \"\",\n      servicio: \"\",\n      hhnumber: \"\"\n    });\n  };\n\n  return [contacto, leerForm, sinValores, sinValoresSegundoForm];\n};","map":{"version":3,"sources":["C:/Users/Alan/Desktop/C칩digo actual p치gina web/C칩digo actual p치gina web/hooks/useForm.js"],"names":["React","useState","useForm","initialState","contacto","cambiarContacto","leerForm","e","target","name","value","sinValores","nameUser","emailUser","phoneNumber","company","message","sinValoresSegundoForm","model","servicio","hhnumber"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAuB;AAC5C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA8BJ,QAAQ,CAACE,YAAD,CAA5C;;AAEA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACtBF,IAAAA,eAAe,iCACVD,QADU;AAEb,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFb,OAAf;AAID,GALD;;AAOA,QAAMC,UAAU,GAAG,MAAM;AACvBN,IAAAA,eAAe,CAAC;AACdO,MAAAA,QAAQ,EAAE,EADI;AAEdC,MAAAA,SAAS,EAAE,EAFG;AAGdC,MAAAA,WAAW,EAAE,EAHC;AAIdC,MAAAA,OAAO,EAAE,EAJK;AAKdC,MAAAA,OAAO,EAAE;AALK,KAAD,CAAf;AAOD,GARD;;AAUA,QAAMC,qBAAqB,GAAG,MAAM;AAClCZ,IAAAA,eAAe,CAAC;AACdO,MAAAA,QAAQ,EAAE,EADI;AAEdC,MAAAA,SAAS,EAAE,EAFG;AAGdC,MAAAA,WAAW,EAAE,EAHC;AAIdC,MAAAA,OAAO,EAAE,EAJK;AAKdC,MAAAA,OAAO,EAAE,EALK;AAMdE,MAAAA,KAAK,EAAE,EANO;AAOdC,MAAAA,QAAQ,EAAE,EAPI;AAQdC,MAAAA,QAAQ,EAAE;AARI,KAAD,CAAf;AAUD,GAXD;;AAaA,SAAO,CAAChB,QAAD,EAAWE,QAAX,EAAqBK,UAArB,EAAiCM,qBAAjC,CAAP;AACD,CAlCM","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [contacto, cambiarContacto] = useState(initialState);\r\n\r\n  const leerForm = (e) => {\r\n    cambiarContacto({\r\n      ...contacto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const sinValores = () => {\r\n    cambiarContacto({\r\n      nameUser: \"\",\r\n      emailUser: \"\",\r\n      phoneNumber: \"\",\r\n      company: \"\",\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  const sinValoresSegundoForm = () => {\r\n    cambiarContacto({\r\n      nameUser: \"\",\r\n      emailUser: \"\",\r\n      phoneNumber: \"\",\r\n      company: \"\",\r\n      message: \"\",\r\n      model: \"\",\r\n      servicio: \"\",\r\n      hhnumber: \"\",\r\n    });\r\n  };\r\n\r\n  return [contacto, leerForm, sinValores, sinValoresSegundoForm];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}