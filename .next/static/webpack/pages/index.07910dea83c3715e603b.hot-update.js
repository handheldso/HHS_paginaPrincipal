webpackHotUpdate_N_E("pages/index",{

/***/ "./components/layout/Layout.js":
/*!*************************************!*\
  !*** ./components/layout/Layout.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled/base */ "./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Header */ "./components/layout/Header.js");
/* harmony import */ var react_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-bootstrap */ "./node_modules/react-bootstrap/esm/index.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "./node_modules/next/router.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/react */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");


var _jsxFileName = "C:\\Users\\jhino\\Desktop\\codigo de prueba HHS\\components\\layout\\Layout.js",
    _this = undefined,
    _s = $RefreshSig$();

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }







var Layout = function Layout(props) {
  _s();

  var Puntero = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__["default"])("a", false ? undefined : {
    target: "e1cnj55j1",
    label: "Puntero"
  })(false ? undefined : {
    name: "e0dnmk",
    styles: "cursor:pointer",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
    toString: _EMOTION_STRINGIFIED_CSS_ERROR__
  });

  var ImgModal = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__["default"])("img", false ? undefined : {
    target: "e1cnj55j0",
    label: "ImgModal"
  })(false ? undefined : {
    name: "16na1d5",
    styles: "max-width:100%!important;min-width:100%!important;max-height:100%!important;min-height:100%!important",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
    toString: _EMOTION_STRINGIFIED_CSS_ERROR__
  });

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(false),
      abiertoAnuncios = _useState[0],
      cambiarAbiertoAnuncios = _useState[1];

  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(true),
      abiertoCupon = _useState2[0],
      cambiarAbiertoCupon = _useState2[1];

  var cerrarModal = function cerrarModal() {
    cambiarAbiertoAnuncios(false);
  };

  var cerrarModalCupon = function cerrarModalCupon() {
    cambiarAbiertoCupon(false);
    setTimeout(function () {
      cambiarAbiertoAnuncios(true);
    }, 6000);
  };

  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(function () {
    var URLactual = window.location;
    var primera = URLactual.hash;

    var redirigirH = function redirigirH() {
      next_router__WEBPACK_IMPORTED_MODULE_4___default.a.push("#home");
    };
    /* const LS = () => { codigo para cuando se quiten los cupones se descomenta esto
             if(!sessionStorage.getItem('mostrarModal')){
                sessionStorage.setItem("mostrarModal","no");
                //cambiarAbiertoCupon(true);
                 setTimeout(() => {
                    cambiarAbiertoAnuncios(true);
                }, 10000);
                
                return;
            }
        }*/


    if (primera === "#renta" || primera === "#reparacion" || primera === "#venta") {
      return;
    } else {
      redirigirH();
    } //LS();

  }, []);
  Object(react__WEBPACK_IMPORTED_MODULE_1__["useEffect"])(function () {
    setTimeout(function () {
      cambiarAbiertoAnuncios(true);
    }, 7000);
  }, []);

  var Redirigir = function Redirigir(e) {
    e.preventDefault();
    cambiarAbiertoAnuncios(false);
    document.location.href = "/#reparacion";
  };

  return Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(_Header__WEBPACK_IMPORTED_MODULE_2__["default"], {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 7
    }
  }), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Modal"], {
    show: abiertoAnuncios,
    onHide: cerrarModal,
    keyboard: false,
    size: "lg",
    className: "modal-altura ppp",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 7
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Modal"].Header, {
    closeButton: true,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 9
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Modal"].Title, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 11
    }
  }, "Noticias")), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Modal"].Body, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 9
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"], {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/Lector Syble XB-6266MBT.png",
    alt: "Lector de c\xF3digos XB-6266MBT",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 16
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/Handheld EDA52.png",
    alt: "Handheld EDA52",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 16
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/CT40 Honeywell.png",
    alt: "Handheld CT40",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 16
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("a", {
    className: "clicks",
    href: "https://www.youtube.com/embed/X8g7RBSSzCc",
    target: "_blank",
    rel: "noopener noreferrer",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(ImgModal, {
    className: "d-block ",
    src: "/img/Impresora de credenciales Primacy 2.png",
    alt: "Impresora de credenciales",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129,
      columnNumber: 19
    }
  }))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 13
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("a", {
    className: "clicks",
    href: "https://www.youtube.com/embed/_N1aq8YJkc4",
    target: "_blank",
    rel: "noopener noreferrer",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 17
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(ImgModal, {
    className: "d-block ",
    src: "/img/Handheld MC2200 y MC2700.gif",
    alt: "Handhelds MC2200 y MC2700",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 19
    }
  }))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 164,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/Renta de handheld MC33.webp",
    alt: "Renta de handheld MC33",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165,
      columnNumber: 16
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/Renta de handheld CK65.webp",
    alt: "Renta de handheld CK65",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172,
      columnNumber: 16
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 178,
      columnNumber: 11
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/Promoci\xF3n_mc9090_funcional_po83sk.webp",
    alt: "Hand Held MC9090",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 16
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 192,
      columnNumber: 13
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(ImgModal, {
    className: "d-block ",
    src: "/img/Promoci\xF3n_CN51.webp",
    alt: "Hand Held Intermec Honeywell CN51",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 193,
      columnNumber: 15
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 206,
      columnNumber: 13
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/evolis_adikio.webp",
    alt: "evolis adikio",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 207,
      columnNumber: 17
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 213,
      columnNumber: 15
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/evolis_impresoras.webp",
    alt: "evolis impresoras de credenciales",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 214,
      columnNumber: 17
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 235,
      columnNumber: 13
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("img", {
    className: "d-block w-100",
    src: "/img/IMAGEN_ZEBRA_BANNER_800X500_lyqnpu.webp",
    alt: "Zebra Hand Held Impresoras Lectores",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 236,
      columnNumber: 15
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 242,
      columnNumber: 13
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(Puntero, {
    onClick: Redirigir,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 243,
      columnNumber: 15
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(ImgModal, {
    className: "d-block ",
    src: "/img/Copia_de_p\xF3lizas_reparaci\xF3n_sg0xim.webp",
    alt: "Polizas de reparacion handheld impresoras de etiquetas y lectores",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 244,
      columnNumber: 17
    }
  }))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Carousel"].Item, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 265,
      columnNumber: 13
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(ImgModal, {
    className: "d-block ",
    src: "/img/IMAGEN_ZEBRA_BANNER_800X500_vr6p1d.webp",
    alt: "Zebra Hand Held Impresoras Lectores",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 266,
      columnNumber: 15
    }
  })))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Modal"].Footer, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 300,
      columnNumber: 9
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])(react_bootstrap__WEBPACK_IMPORTED_MODULE_3__["Button"], {
    variant: "light",
    onClick: cerrarModal,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 301,
      columnNumber: 11
    }
  }, "Cerrar"))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_5__["jsx"])("main", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 323,
      columnNumber: 7
    }
  }, props.children));
};

_s(Layout, "OFzdsYNVp7qWVwd5ll5DpWZDBR0=");

_c = Layout;
/* harmony default export */ __webpack_exports__["default"] = (Layout);

var _c;

$RefreshReg$(_c, "Layout");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ "./node_modules/next/dist/compiled/webpack/harmony-module.js")(module)))

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,